

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jul 16 17:03:54 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.05
    30                           ; Generated 20/12/2018 GMT
    31                           ; 
    32                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183                           
   184                           	psect	strings
   185  0800                     __pstrings:	
   186  0800                     stringtab:	
   187  0800                     __stringtab:	
   188                           
   189                           ;	String table - string pointers are 1 byte each
   190  0800  1BFF               	btfsc	btemp+1,7
   191  0801  280A               	ljmp	stringcode
   192  0802  1383               	bcf	3,7
   193  0803  187F               	btfsc	btemp+1,0
   194  0804  1783               	bsf	3,7
   195  0805  0800               	movf	0,w
   196  0806  0A84               	incf	4,f
   197  0807  1903               	skipnz
   198  0808  0AFF               	incf	btemp+1,f
   199  0809  0008               	return
   200  080A                     stringcode:	
   201  080A                     stringdir:	
   202  080A  3008               	movlw	high stringdir
   203  080B  008A               	movwf	10
   204  080C  0804               	movf	4,w
   205  080D  0A84               	incf	4,f
   206  080E  0782               	addwf	2,f
   207  080F                     __stringbase:	
   208  080F  3400               	retlw	0
   209  0810                     __end_of__stringtab:	
   210  0810                     _dpowers:	
   211  0810  3401               	retlw	1
   212  0811  3400               	retlw	0
   213  0812  340A               	retlw	10
   214  0813  3400               	retlw	0
   215  0814  3464               	retlw	100
   216  0815  3400               	retlw	0
   217  0816  34E8               	retlw	232
   218  0817  3403               	retlw	3
   219  0818  3410               	retlw	16
   220  0819  3427               	retlw	39
   221  081A                     __end_of_dpowers:	
   222  0007                     _PORTCbits	set	7
   223  0006                     _PORTB	set	6
   224  0036                     _RB6	set	54
   225  0035                     _RB5	set	53
   226  0034                     _RB4	set	52
   227  0033                     _RB3	set	51
   228  0032                     _RB2	set	50
   229  0031                     _RB1	set	49
   230  0030                     _RB0	set	48
   231  0043                     _RD3	set	67
   232  0042                     _RD2	set	66
   233  0047                     _RD7	set	71
   234  0046                     _RD6	set	70
   235  0045                     _RD5	set	69
   236  0044                     _RD4	set	68
   237  0088                     _TRISD	set	136
   238  0087                     _TRISC	set	135
   239  0081                     _OPTION_REG	set	129
   240  0086                     _TRISB	set	134
   241  081A                     STR_4:	
   242  081A  3443               	retlw	67	;'C'
   243  081B  346F               	retlw	111	;'o'
   244  081C  3472               	retlw	114	;'r'
   245  081D  3472               	retlw	114	;'r'
   246  081E  3465               	retlw	101	;'e'
   247  081F  3463               	retlw	99	;'c'
   248  0820  3474               	retlw	116	;'t'
   249  0821  3420               	retlw	32	;' '
   250  0822  3450               	retlw	80	;'P'
   251  0823  3461               	retlw	97	;'a'
   252  0824  3473               	retlw	115	;'s'
   253  0825  3473               	retlw	115	;'s'
   254  0826  3477               	retlw	119	;'w'
   255  0827  346F               	retlw	111	;'o'
   256  0828  3472               	retlw	114	;'r'
   257  0829  3464               	retlw	100	;'d'
   258  082A  3400               	retlw	0
   259  082B                     STR_1:	
   260  082B  3457               	retlw	87	;'W'
   261  082C  3445               	retlw	69	;'E'
   262  082D  346C               	retlw	108	;'l'
   263  082E  3463               	retlw	99	;'c'
   264  082F  346F               	retlw	111	;'o'
   265  0830  346D               	retlw	109	;'m'
   266  0831  3465               	retlw	101	;'e'
   267  0832  3420               	retlw	32	;' '
   268  0833  3454               	retlw	84	;'T'
   269  0834  344F               	retlw	79	;'O'
   270  0835  3420               	retlw	32	;' '
   271  0836  3453               	retlw	83	;'S'
   272  0837  344C               	retlw	76	;'L'
   273  0838  3454               	retlw	84	;'T'
   274  0839  3443               	retlw	67	;'C'
   275  083A  3400               	retlw	0
   276  083B                     STR_10:	
   277  083B  3457               	retlw	87	;'W'
   278  083C  3461               	retlw	97	;'a'
   279  083D  3469               	retlw	105	;'i'
   280  083E  3474               	retlw	116	;'t'
   281  083F  3420               	retlw	32	;' '
   282  0840  3446               	retlw	70	;'F'
   283  0841  346F               	retlw	111	;'o'
   284  0842  3472               	retlw	114	;'r'
   285  0843  3420               	retlw	32	;' '
   286  0844  3433               	retlw	51	;'3'
   287  0845  3430               	retlw	48	;'0'
   288  0846  3420               	retlw	32	;' '
   289  0847  3453               	retlw	83	;'S'
   290  0848  3465               	retlw	101	;'e'
   291  0849  3463               	retlw	99	;'c'
   292  084A  3400               	retlw	0
   293  084B                     STR_6:	
   294  084B  3452               	retlw	82	;'R'
   295  084C  3465               	retlw	101	;'e'
   296  084D  3473               	retlw	115	;'s'
   297  084E  3465               	retlw	101	;'e'
   298  084F  3474               	retlw	116	;'t'
   299  0850  3420               	retlw	32	;' '
   300  0851  3450               	retlw	80	;'P'
   301  0852  3461               	retlw	97	;'a'
   302  0853  3473               	retlw	115	;'s'
   303  0854  3473               	retlw	115	;'s'
   304  0855  3477               	retlw	119	;'w'
   305  0856  346F               	retlw	111	;'o'
   306  0857  3472               	retlw	114	;'r'
   307  0858  3464               	retlw	100	;'d'
   308  0859  3400               	retlw	0
   309  085A                     STR_7:	
   310  085A  3445               	retlw	69	;'E'
   311  085B  346E               	retlw	110	;'n'
   312  085C  3474               	retlw	116	;'t'
   313  085D  3465               	retlw	101	;'e'
   314  085E  3472               	retlw	114	;'r'
   315  085F  3420               	retlw	32	;' '
   316  0860  3450               	retlw	80	;'P'
   317  0861  3457               	retlw	87	;'W'
   318  0862  3420               	retlw	32	;' '
   319  0863  3441               	retlw	65	;'A'
   320  0864  3467               	retlw	103	;'g'
   321  0865  3461               	retlw	97	;'a'
   322  0866  3469               	retlw	105	;'i'
   323  0867  346E               	retlw	110	;'n'
   324  0868  3400               	retlw	0
   325  0869                     STR_2:	
   326  0869  3445               	retlw	69	;'E'
   327  086A  346E               	retlw	110	;'n'
   328  086B  3474               	retlw	116	;'t'
   329  086C  3465               	retlw	101	;'e'
   330  086D  3472               	retlw	114	;'r'
   331  086E  3420               	retlw	32	;' '
   332  086F  3474               	retlw	116	;'t'
   333  0870  3468               	retlw	104	;'h'
   334  0871  3465               	retlw	101	;'e'
   335  0872  3420               	retlw	32	;' '
   336  0873  344B               	retlw	75	;'K'
   337  0874  3465               	retlw	101	;'e'
   338  0875  3479               	retlw	121	;'y'
   339  0876  3400               	retlw	0
   340  0877                     STR_5:	
   341  0877  3444               	retlw	68	;'D'
   342  0878  346F               	retlw	111	;'o'
   343  0879  346F               	retlw	111	;'o'
   344  087A  3472               	retlw	114	;'r'
   345  087B  3420               	retlw	32	;' '
   346  087C  344F               	retlw	79	;'O'
   347  087D  3470               	retlw	112	;'p'
   348  087E  3465               	retlw	101	;'e'
   349  087F  346E               	retlw	110	;'n'
   350  0880  3465               	retlw	101	;'e'
   351  0881  3464               	retlw	100	;'d'
   352  0882  3400               	retlw	0
   353  0883                     STR_8:	
   354  0883  3450               	retlw	80	;'P'
   355  0884  3457               	retlw	87	;'W'
   356  0885  3420               	retlw	32	;' '
   357  0886  3452               	retlw	82	;'R'
   358  0887  3465               	retlw	101	;'e'
   359  0888  3473               	retlw	115	;'s'
   360  0889  3465               	retlw	101	;'e'
   361  088A  3474               	retlw	116	;'t'
   362  088B  3465               	retlw	101	;'e'
   363  088C  3464               	retlw	100	;'d'
   364  088D  3400               	retlw	0
   365  088E                     STR_13:	
   366  088E  3454               	retlw	84	;'T'
   367  088F  3472               	retlw	114	;'r'
   368  0890  3479               	retlw	121	;'y'
   369  0891  3420               	retlw	32	;' '
   370  0892  3441               	retlw	65	;'A'
   371  0893  3467               	retlw	103	;'g'
   372  0894  3461               	retlw	97	;'a'
   373  0895  3469               	retlw	105	;'i'
   374  0896  346E               	retlw	110	;'n'
   375  0897  3400               	retlw	0
   376  0898                     STR_9:	
   377  0898  3454               	retlw	84	;'T'
   378  0899  3468               	retlw	104	;'h'
   379  089A  3461               	retlw	97	;'a'
   380  089B  346E               	retlw	110	;'n'
   381  089C  346B               	retlw	107	;'k'
   382  089D  3420               	retlw	32	;' '
   383  089E  3459               	retlw	89	;'Y'
   384  089F  346F               	retlw	111	;'o'
   385  08A0  3475               	retlw	117	;'u'
   386  08A1  3400               	retlw	0
   387  08A2                     STR_3:	
   388  08A2  3425               	retlw	37	;'%'
   389  08A3  3464               	retlw	100	;'d'
   390  08A4  3400               	retlw	0
   391  083B                     
   392                           ; #config settings
   393  0000                     
   394                           	psect	cinit
   395  07FC                     start_initialization:	
   396  07FC                     __initialization:	
   397  07FC                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  07FC                     __end_of__initialization:	
   401  07FC  0183               	clrf	3
   402  07FD  120A  118A  2C38   	ljmp	_main	;jump to C main() function
   403                           
   404                           	psect	cstackCOMMON
   405  0070                     __pcstackCOMMON:	
   406  0070                     ?_Lcd_Port:	
   407  0070                     ??_Lcd_Port:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_Lcd_Cmd:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_Lcd_Init:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_Lcd_Write_Char:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_Keypad_Init:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ??_Keypad_Init:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_READ_SWITCHES:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ??_READ_SWITCHES:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_GetKey:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_LockOpining:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ??_LockOpining:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_startingSound:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ??_startingSound:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_KeySound:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ??_KeySound:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_Wrongsound:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ??_Wrongsound:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_WaitSound:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ??_WaitSound:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_main:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_Lcd_Clear:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?___lwdiv:	
   471                           ; 2 bytes @ 0x0
   472                           
   473  0070                     Lcd_Port@a:	
   474                           ; 2 bytes @ 0x0
   475                           
   476  0070                     ___lwdiv@divisor:	
   477                           ; 1 bytes @ 0x0
   478                           
   479                           
   480                           ; 2 bytes @ 0x0
   481  0070                     	ds	1
   482  0071                     ??_Lcd_Cmd:	
   483  0071                     ??_Lcd_Write_Char:	
   484                           ; 1 bytes @ 0x1
   485                           
   486                           
   487                           ; 1 bytes @ 0x1
   488  0071                     	ds	1
   489  0072                     Lcd_Write_Char@temp:	
   490  0072                     ___lwdiv@dividend:	
   491                           ; 1 bytes @ 0x2
   492                           
   493                           
   494                           ; 2 bytes @ 0x2
   495  0072                     	ds	1
   496  0073                     ??_GetKey:	
   497  0073                     Lcd_Cmd@a:	
   498                           ; 1 bytes @ 0x3
   499                           
   500  0073                     Lcd_Write_Char@y:	
   501                           ; 1 bytes @ 0x3
   502                           
   503                           
   504                           ; 1 bytes @ 0x3
   505  0073                     	ds	1
   506  0074                     ??_Lcd_Clear:	
   507  0074                     ?_Lcd_Set_Cursor:	
   508                           ; 1 bytes @ 0x4
   509                           
   510  0074                     ??_Lcd_Init:	
   511                           ; 1 bytes @ 0x4
   512                           
   513  0074                     ??___lwdiv:	
   514                           ; 1 bytes @ 0x4
   515                           
   516  0074                     Lcd_Set_Cursor@b:	
   517                           ; 1 bytes @ 0x4
   518                           
   519  0074                     Lcd_Write_Char@a:	
   520                           ; 1 bytes @ 0x4
   521                           
   522  0074                     GetKey@key:	
   523                           ; 1 bytes @ 0x4
   524                           
   525                           
   526                           ; 1 bytes @ 0x4
   527  0074                     	ds	1
   528  0075                     ??_Lcd_Set_Cursor:	
   529  0075                     ?_Lcd_Write_String:	
   530                           ; 1 bytes @ 0x5
   531                           
   532  0075                     Lcd_Write_String@a:	
   533                           ; 1 bytes @ 0x5
   534                           
   535  0075                     ___lwdiv@quotient:	
   536                           ; 2 bytes @ 0x5
   537                           
   538                           
   539                           ; 2 bytes @ 0x5
   540  0075                     	ds	2
   541  0077                     ??_Lcd_Write_String:	
   542  0077                     Lcd_Set_Cursor@a:	
   543                           ; 1 bytes @ 0x7
   544                           
   545  0077                     ___lwdiv@counter:	
   546                           ; 1 bytes @ 0x7
   547                           
   548                           
   549                           ; 1 bytes @ 0x7
   550  0077                     	ds	1
   551  0078                     ?___lwmod:	
   552  0078                     Lcd_Set_Cursor@z:	
   553                           ; 2 bytes @ 0x8
   554                           
   555  0078                     ___lwmod@divisor:	
   556                           ; 1 bytes @ 0x8
   557                           
   558                           
   559                           ; 2 bytes @ 0x8
   560  0078                     	ds	1
   561  0079                     Lcd_Set_Cursor@y:	
   562                           
   563                           ; 1 bytes @ 0x9
   564  0079                     	ds	1
   565  007A                     Lcd_Set_Cursor@temp:	
   566  007A                     Lcd_Write_String@i:	
   567                           ; 1 bytes @ 0xA
   568                           
   569  007A                     ___lwmod@dividend:	
   570                           ; 2 bytes @ 0xA
   571                           
   572                           
   573                           ; 2 bytes @ 0xA
   574  007A                     	ds	2
   575  007C                     ??___lwmod:	
   576                           
   577                           ; 1 bytes @ 0xC
   578  007C                     	ds	1
   579  007D                     ___lwmod@counter:	
   580                           
   581                           ; 1 bytes @ 0xD
   582  007D                     	ds	1
   583                           
   584                           	psect	cstackBANK0
   585  0020                     __pcstackBANK0:	
   586  0020                     ?_sprintf:	
   587  0020                     sprintf@f:	
   588                           ; 2 bytes @ 0x0
   589                           
   590                           
   591                           ; 1 bytes @ 0x0
   592  0020                     	ds	3
   593  0023                     ??_sprintf:	
   594                           
   595                           ; 1 bytes @ 0x3
   596  0023                     	ds	3
   597  0026                     sprintf@ap:	
   598                           
   599                           ; 1 bytes @ 0x6
   600  0026                     	ds	1
   601  0027                     sprintf@flag:	
   602                           
   603                           ; 1 bytes @ 0x7
   604  0027                     	ds	1
   605  0028                     sprintf@prec:	
   606                           
   607                           ; 1 bytes @ 0x8
   608  0028                     	ds	1
   609  0029                     sprintf@val:	
   610                           
   611                           ; 2 bytes @ 0x9
   612  0029                     	ds	2
   613  002B                     sprintf@sp:	
   614                           
   615                           ; 1 bytes @ 0xB
   616  002B                     	ds	1
   617  002C                     sprintf@c:	
   618                           
   619                           ; 1 bytes @ 0xC
   620  002C                     	ds	1
   621  002D                     ??_main:	
   622                           
   623                           ; 1 bytes @ 0xD
   624  002D                     	ds	3
   625  0030                     main@Nes:	
   626                           
   627                           ; 12 bytes @ 0x10
   628  0030                     	ds	12
   629  003C                     main@Nes1:	
   630                           
   631                           ; 12 bytes @ 0x1C
   632  003C                     	ds	12
   633  0048                     main@r1:	
   634                           
   635                           ; 1 bytes @ 0x28
   636  0048                     	ds	1
   637  0049                     main@r2:	
   638                           
   639                           ; 1 bytes @ 0x29
   640  0049                     	ds	1
   641  004A                     main@r3:	
   642                           
   643                           ; 1 bytes @ 0x2A
   644  004A                     	ds	1
   645  004B                     main@r4:	
   646                           
   647                           ; 1 bytes @ 0x2B
   648  004B                     	ds	1
   649  004C                     main@p1:	
   650                           
   651                           ; 1 bytes @ 0x2C
   652  004C                     	ds	1
   653  004D                     main@p2:	
   654                           
   655                           ; 1 bytes @ 0x2D
   656  004D                     	ds	1
   657  004E                     main@p3:	
   658                           
   659                           ; 1 bytes @ 0x2E
   660  004E                     	ds	1
   661  004F                     main@p4:	
   662                           
   663                           ; 1 bytes @ 0x2F
   664  004F                     	ds	1
   665  0050                     main@i:	
   666                           
   667                           ; 2 bytes @ 0x30
   668  0050                     	ds	2
   669  0052                     main@rs11:	
   670                           
   671                           ; 1 bytes @ 0x32
   672  0052                     	ds	1
   673  0053                     main@rs21:	
   674                           
   675                           ; 1 bytes @ 0x33
   676  0053                     	ds	1
   677  0054                     main@rs31:	
   678                           
   679                           ; 1 bytes @ 0x34
   680  0054                     	ds	1
   681  0055                     main@rs41:	
   682                           
   683                           ; 1 bytes @ 0x35
   684  0055                     	ds	1
   685  0056                     main@R1:	
   686                           
   687                           ; 2 bytes @ 0x36
   688  0056                     	ds	2
   689  0058                     main@rs12:	
   690                           
   691                           ; 1 bytes @ 0x38
   692  0058                     	ds	1
   693  0059                     main@rs22:	
   694                           
   695                           ; 1 bytes @ 0x39
   696  0059                     	ds	1
   697  005A                     main@rs32:	
   698                           
   699                           ; 1 bytes @ 0x3A
   700  005A                     	ds	1
   701  005B                     main@rs42:	
   702                           
   703                           ; 1 bytes @ 0x3B
   704  005B                     	ds	1
   705  005C                     main@Key1:	
   706                           
   707                           ; 1 bytes @ 0x3C
   708  005C                     	ds	1
   709  005D                     main@Key2:	
   710                           
   711                           ; 1 bytes @ 0x3D
   712  005D                     	ds	1
   713  005E                     main@Key3:	
   714                           
   715                           ; 1 bytes @ 0x3E
   716  005E                     	ds	1
   717  005F                     main@Key4:	
   718                           
   719                           ; 1 bytes @ 0x3F
   720  005F                     	ds	1
   721  0060                     main@R:	
   722                           
   723                           ; 2 bytes @ 0x40
   724  0060                     	ds	2
   725                           
   726                           	psect	maintext
   727  0438                     __pmaintext:	
   728 ;;
   729 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   730 ;;
   731 ;; *************** function _main *****************
   732 ;; Defined at:
   733 ;;		line 40 in file "Password_Based_Door_Lock.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  i               2   48[BANK0 ] int 
   738 ;;  Nes1           12   28[BANK0 ] unsigned char [12]
   739 ;;  Nes            12   16[BANK0 ] unsigned char [12]
   740 ;;  R               2   64[BANK0 ] int 
   741 ;;  R1              2   54[BANK0 ] int 
   742 ;;  Key4            1   63[BANK0 ] unsigned char 
   743 ;;  Key3            1   62[BANK0 ] unsigned char 
   744 ;;  Key2            1   61[BANK0 ] unsigned char 
   745 ;;  Key1            1   60[BANK0 ] unsigned char 
   746 ;;  rs42            1   59[BANK0 ] unsigned char 
   747 ;;  rs32            1   58[BANK0 ] unsigned char 
   748 ;;  rs22            1   57[BANK0 ] unsigned char 
   749 ;;  rs12            1   56[BANK0 ] unsigned char 
   750 ;;  rs41            1   53[BANK0 ] unsigned char 
   751 ;;  rs31            1   52[BANK0 ] unsigned char 
   752 ;;  rs21            1   51[BANK0 ] unsigned char 
   753 ;;  rs11            1   50[BANK0 ] unsigned char 
   754 ;;  p4              1   47[BANK0 ] unsigned char 
   755 ;;  p3              1   46[BANK0 ] unsigned char 
   756 ;;  p2              1   45[BANK0 ] unsigned char 
   757 ;;  p1              1   44[BANK0 ] unsigned char 
   758 ;;  r4              1   43[BANK0 ] unsigned char 
   759 ;;  r3              1   42[BANK0 ] unsigned char 
   760 ;;  r2              1   41[BANK0 ] unsigned char 
   761 ;;  r1              1   40[BANK0 ] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : B00/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   771 ;;      Params:         0       0       0       0       0
   772 ;;      Locals:         0      50       0       0       0
   773 ;;      Temps:          0       3       0       0       0
   774 ;;      Totals:         0      53       0       0       0
   775 ;;Total ram usage:       53 bytes
   776 ;; Hardware stack levels required when called:    3
   777 ;; This function calls:
   778 ;;		_GetKey
   779 ;;		_KeySound
   780 ;;		_Keypad_Init
   781 ;;		_Lcd_Clear
   782 ;;		_Lcd_Init
   783 ;;		_Lcd_Set_Cursor
   784 ;;		_Lcd_Write_Char
   785 ;;		_Lcd_Write_String
   786 ;;		_LockOpining
   787 ;;		_WaitSound
   788 ;;		_Wrongsound
   789 ;;		_sprintf
   790 ;;		_startingSound
   791 ;; This function is called by:
   792 ;;		Startup code after reset
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _main
   798  0438                     _main:	
   799                           
   800                           ;Password_Based_Door_Lock.c: 42:         Lcd_Set_Cursor(2,1);
   801                           
   802                           ;incstack = 0
   803                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   804  0438  1683               	bsf	3,5	;RP0=1, select bank1
   805  0439  1303               	bcf	3,6	;RP1=0, select bank1
   806  043A  0188               	clrf	8	;volatile
   807                           
   808                           ;Password_Based_Door_Lock.c: 44:         KeySound();
   809  043B  1283               	bcf	3,5	;RP0=0, select bank0
   810  043C  1303               	bcf	3,6	;RP1=0, select bank0
   811  043D  01E0               	clrf	main@R
   812  043E  01E1               	clrf	main@R+1
   813                           
   814                           ;Password_Based_Door_Lock.c: 45: 
   815  043F  301E               	movlw	30
   816  0440  00D6               	movwf	main@R1
   817  0441  3000               	movlw	0
   818  0442  00D7               	movwf	main@R1+1
   819                           
   820                           ;Password_Based_Door_Lock.c: 54:         KeySound();
   821  0443  3031               	movlw	49
   822  0444  00AD               	movwf	??_main
   823  0445  082D               	movf	??_main,w
   824  0446  00CC               	movwf	main@p1
   825  0447  3032               	movlw	50
   826  0448  00AD               	movwf	??_main
   827  0449  082D               	movf	??_main,w
   828  044A  00CD               	movwf	main@p2
   829  044B  3033               	movlw	51
   830  044C  00AD               	movwf	??_main
   831  044D  082D               	movf	??_main,w
   832  044E  00CE               	movwf	main@p3
   833  044F  3034               	movlw	52
   834  0450  00AD               	movwf	??_main
   835  0451  082D               	movf	??_main,w
   836  0452  00CF               	movwf	main@p4
   837                           
   838                           ;Password_Based_Door_Lock.c: 55: 
   839  0453  302A               	movlw	42
   840  0454  00AD               	movwf	??_main
   841  0455  082D               	movf	??_main,w
   842  0456  00C8               	movwf	main@r1
   843  0457  3030               	movlw	48
   844  0458  00AD               	movwf	??_main
   845  0459  082D               	movf	??_main,w
   846  045A  00C9               	movwf	main@r2
   847  045B  3030               	movlw	48
   848  045C  00AD               	movwf	??_main
   849  045D  082D               	movf	??_main,w
   850  045E  00CA               	movwf	main@r3
   851  045F  3023               	movlw	35
   852  0460  00AD               	movwf	??_main
   853  0461  082D               	movf	??_main,w
   854  0462  00CB               	movwf	main@r4
   855                           
   856                           ;Password_Based_Door_Lock.c: 57:         Lcd_Set_Cursor(2,4);;Password_Based_Door_Lock.c
      +                          : 58:         Lcd_Write_Char(Key4);;Password_Based_Door_Lock.c: 60: 
   857  0463  120A  158A  27A5  120A  118A  	fcall	_Lcd_Init
   858                           
   859                           ;Password_Based_Door_Lock.c: 61: 
   860  0468  120A  158A  262C  120A  118A  	fcall	_Keypad_Init
   861                           
   862                           ;Password_Based_Door_Lock.c: 62: 
   863  046D  01F4               	clrf	Lcd_Set_Cursor@b
   864  046E  0AF4               	incf	Lcd_Set_Cursor@b,f
   865  046F  3001               	movlw	1
   866  0470  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
   867                           
   868                           ;Password_Based_Door_Lock.c: 63:         _delay((unsigned long)((950)*(16000000/4000.0))
      +                          );
   869  0475  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   870  0476  00F5               	movwf	Lcd_Write_String@a
   871  0477  3080               	movlw	128
   872  0478  00F6               	movwf	Lcd_Write_String@a+1
   873  0479  120A  158A  271E  120A  118A  	fcall	_Lcd_Write_String
   874                           
   875                           ;Password_Based_Door_Lock.c: 64: 
   876  047E  120A  118A  2226  120A  118A  	fcall	_startingSound
   877                           
   878                           ;Password_Based_Door_Lock.c: 65:         if (p1==Key1 & p2==Key2 & p3==Key3 & p4==Key4 )
   879  0483  120A  158A  2636  120A  118A  	fcall	_Lcd_Clear
   880  0488  2CC5               	goto	l2043
   881  0489                     l2093:	
   882  0489  084D               	movf	main@p2,w
   883  048A  065D               	xorwf	main@Key2,w
   884  048B  1D03               	skipz
   885  048C  2DA2               	goto	l2109
   886  048D  084E               	movf	main@p3,w
   887  048E  065E               	xorwf	main@Key3,w
   888  048F  1D03               	skipz
   889  0490  2DA2               	goto	l2109
   890  0491  084F               	movf	main@p4,w
   891  0492  065F               	xorwf	main@Key4,w
   892  0493  1D03               	skipz
   893  0494  2DA2               	goto	l2109
   894                           
   895                           ;Password_Based_Door_Lock.c: 102:                 Lcd_Set_Cursor(2,4);;Password_Based_Do
      +                          or_Lock.c: 104:                 KeySound();
   896  0495  120A  158A  2636  120A  118A  	fcall	_Lcd_Clear
   897                           
   898                           ;Password_Based_Door_Lock.c: 105: 
   899  049A  01F4               	clrf	Lcd_Set_Cursor@b
   900  049B  0AF4               	incf	Lcd_Set_Cursor@b,f
   901  049C  3001               	movlw	1
   902  049D  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
   903                           
   904                           ;Password_Based_Door_Lock.c: 106:                 _delay((unsigned long)((950)*(16000000
      +                          /4000.0)));
   905  04A2  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   906  04A3  00F5               	movwf	Lcd_Write_String@a
   907  04A4  3080               	movlw	128
   908  04A5  00F6               	movwf	Lcd_Write_String@a+1
   909  04A6  120A  158A  271E  120A  118A  	fcall	_Lcd_Write_String
   910                           
   911                           ;Password_Based_Door_Lock.c: 107: 
   912  04AB  01F4               	clrf	Lcd_Set_Cursor@b
   913  04AC  0AF4               	incf	Lcd_Set_Cursor@b,f
   914  04AD  3002               	movlw	2
   915  04AE  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
   916                           
   917                           ;Password_Based_Door_Lock.c: 108: 
   918  04B3  3068               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   919  04B4  00F5               	movwf	Lcd_Write_String@a
   920  04B5  3080               	movlw	128
   921  04B6  00F6               	movwf	Lcd_Write_String@a+1
   922  04B7  120A  158A  271E  120A  118A  	fcall	_Lcd_Write_String
   923                           
   924                           ;Password_Based_Door_Lock.c: 110:                 Lcd_Set_Cursor(1,1);
   925  04BC  120A  118A  203D  120A  118A  	fcall	_LockOpining
   926  04C1                     l2107:	
   927                           
   928                           ;Password_Based_Door_Lock.c: 112: 
   929  04C1  1283               	bcf	3,5	;RP0=0, select bank0
   930  04C2  1303               	bcf	3,6	;RP1=0, select bank0
   931  04C3  01E0               	clrf	main@R
   932  04C4  01E1               	clrf	main@R+1
   933  04C5                     l2043:	
   934                           ;Password_Based_Door_Lock.c: 114:                 Lcd_Set_Cursor(2,1);
   935                           
   936                           
   937                           ;Password_Based_Door_Lock.c: 67: ;Password_Based_Door_Lock.c: 68:                 Lcd_Cl
      +                          ear();
   938  04C5  120A  158A  2636  120A  118A  	fcall	_Lcd_Clear
   939                           
   940                           ;Password_Based_Door_Lock.c: 69:                 Lcd_Set_Cursor(1,1);
   941  04CA  01F4               	clrf	Lcd_Set_Cursor@b
   942  04CB  0AF4               	incf	Lcd_Set_Cursor@b,f
   943  04CC  3001               	movlw	1
   944  04CD  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
   945                           
   946                           ;Password_Based_Door_Lock.c: 70:                 Lcd_Write_String("Correct Password");
   947  04D2  305A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   948  04D3  00F5               	movwf	Lcd_Write_String@a
   949  04D4  3080               	movlw	128
   950  04D5  00F6               	movwf	Lcd_Write_String@a+1
   951  04D6  120A  158A  271E  120A  118A  	fcall	_Lcd_Write_String
   952                           
   953                           ;Password_Based_Door_Lock.c: 72:                 Lcd_Write_String("Door Opened");
   954  04DB  3093               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   955  04DC  1283               	bcf	3,5	;RP0=0, select bank0
   956  04DD  1303               	bcf	3,6	;RP1=0, select bank0
   957  04DE  00AD               	movwf	??_main
   958  04DF  082D               	movf	??_main,w
   959  04E0  00A0               	movwf	sprintf@f
   960  04E1  0861               	movf	main@R+1,w
   961  04E2  00A2               	movwf	?_sprintf+2
   962  04E3  0860               	movf	main@R,w
   963  04E4  00A1               	movwf	?_sprintf+1
   964  04E5  3030               	movlw	(low (main@Nes| 0))& (0+255)
   965  04E6  120A  118A  214E  120A  118A  	fcall	_sprintf
   966                           
   967                           ;Password_Based_Door_Lock.c: 73: 
   968  04EB  300F               	movlw	15
   969  04EC  1283               	bcf	3,5	;RP0=0, select bank0
   970  04ED  1303               	bcf	3,6	;RP1=0, select bank0
   971  04EE  00AD               	movwf	??_main
   972  04EF  082D               	movf	??_main,w
   973  04F0  00F4               	movwf	Lcd_Set_Cursor@b
   974  04F1  3001               	movlw	1
   975  04F2  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
   976                           
   977                           ;Password_Based_Door_Lock.c: 74:                 LockOpining();
   978  04F7  3030               	movlw	(low (main@Nes| 0))& (0+255)
   979  04F8  00F5               	movwf	Lcd_Write_String@a
   980  04F9  3000               	movlw	0
   981  04FA  00F6               	movwf	Lcd_Write_String@a+1
   982  04FB  120A  158A  271E  120A  118A  	fcall	_Lcd_Write_String
   983                           
   984                           ;Password_Based_Door_Lock.c: 75: 
   985  0500  1283               	bcf	3,5	;RP0=0, select bank0
   986  0501  1303               	bcf	3,6	;RP1=0, select bank0
   987  0502  0860               	movf	main@R,w
   988  0503  3E01               	addlw	1
   989  0504  00E0               	movwf	main@R
   990  0505  0861               	movf	main@R+1,w
   991  0506  1803               	skipnc
   992  0507  3E01               	addlw	1
   993  0508  3E00               	addlw	0
   994  0509  00E1               	movwf	main@R+1
   995                           
   996                           ;Password_Based_Door_Lock.c: 77: 
   997  050A  120A  158A  2641  120A  118A  	fcall	_GetKey
   998  050F  1283               	bcf	3,5	;RP0=0, select bank0
   999  0510  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0511  00AD               	movwf	??_main
  1001  0512  082D               	movf	??_main,w
  1002  0513  00DC               	movwf	main@Key1
  1003                           
  1004                           ;Password_Based_Door_Lock.c: 78:             }
  1005  0514  01F4               	clrf	Lcd_Set_Cursor@b
  1006  0515  0AF4               	incf	Lcd_Set_Cursor@b,f
  1007  0516  3002               	movlw	2
  1008  0517  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1009                           
  1010                           ;Password_Based_Door_Lock.c: 79:         else if (r1==Key1 & r2==Key2 & r3==Key3 & r4==K
      +                          ey4 )
  1011  051C  1283               	bcf	3,5	;RP0=0, select bank0
  1012  051D  1303               	bcf	3,6	;RP1=0, select bank0
  1013  051E  085C               	movf	main@Key1,w
  1014  051F  120A  118A  2006  120A  118A  	fcall	_Lcd_Write_Char
  1015                           
  1016                           ;Password_Based_Door_Lock.c: 80:             {
  1017  0524  120A  158A  2666  120A  118A  	fcall	_KeySound
  1018                           
  1019                           ;Password_Based_Door_Lock.c: 82:                 Lcd_Clear();
  1020  0529  120A  158A  2641  120A  118A  	fcall	_GetKey
  1021  052E  1283               	bcf	3,5	;RP0=0, select bank0
  1022  052F  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0530  00AD               	movwf	??_main
  1024  0531  082D               	movf	??_main,w
  1025  0532  00DD               	movwf	main@Key2
  1026                           
  1027                           ;Password_Based_Door_Lock.c: 83:                 Lcd_Set_Cursor(1,1);
  1028  0533  3002               	movlw	2
  1029  0534  00AD               	movwf	??_main
  1030  0535  082D               	movf	??_main,w
  1031  0536  00F4               	movwf	Lcd_Set_Cursor@b
  1032  0537  3002               	movlw	2
  1033  0538  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1034                           
  1035                           ;Password_Based_Door_Lock.c: 84:                 Lcd_Write_String("Reset Password");
  1036  053D  1283               	bcf	3,5	;RP0=0, select bank0
  1037  053E  1303               	bcf	3,6	;RP1=0, select bank0
  1038  053F  085D               	movf	main@Key2,w
  1039  0540  120A  118A  2006  120A  118A  	fcall	_Lcd_Write_Char
  1040                           
  1041                           ;Password_Based_Door_Lock.c: 85: 
  1042  0545  120A  158A  2666  120A  118A  	fcall	_KeySound
  1043                           
  1044                           ;Password_Based_Door_Lock.c: 87:                 Lcd_Set_Cursor(2,1);
  1045  054A  120A  158A  2641  120A  118A  	fcall	_GetKey
  1046  054F  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0550  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0551  00AD               	movwf	??_main
  1049  0552  082D               	movf	??_main,w
  1050  0553  00DE               	movwf	main@Key3
  1051                           
  1052                           ;Password_Based_Door_Lock.c: 88:                 Lcd_Write_Char(rs11);
  1053  0554  3003               	movlw	3
  1054  0555  00AD               	movwf	??_main
  1055  0556  082D               	movf	??_main,w
  1056  0557  00F4               	movwf	Lcd_Set_Cursor@b
  1057  0558  3002               	movlw	2
  1058  0559  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1059                           
  1060                           ;Password_Based_Door_Lock.c: 89:                 KeySound();
  1061  055E  1283               	bcf	3,5	;RP0=0, select bank0
  1062  055F  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0560  085E               	movf	main@Key3,w
  1064  0561  120A  118A  2006  120A  118A  	fcall	_Lcd_Write_Char
  1065                           
  1066                           ;Password_Based_Door_Lock.c: 90: 
  1067  0566  120A  158A  2666  120A  118A  	fcall	_KeySound
  1068                           
  1069                           ;Password_Based_Door_Lock.c: 92:                 Lcd_Set_Cursor(2,2);
  1070  056B  120A  158A  2641  120A  118A  	fcall	_GetKey
  1071  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1072  0571  1303               	bcf	3,6	;RP1=0, select bank0
  1073  0572  00AD               	movwf	??_main
  1074  0573  082D               	movf	??_main,w
  1075  0574  00DF               	movwf	main@Key4
  1076                           
  1077                           ;Password_Based_Door_Lock.c: 93:                 Lcd_Write_Char(rs21);
  1078  0575  3004               	movlw	4
  1079  0576  00AD               	movwf	??_main
  1080  0577  082D               	movf	??_main,w
  1081  0578  00F4               	movwf	Lcd_Set_Cursor@b
  1082  0579  3002               	movlw	2
  1083  057A  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1084                           
  1085                           ;Password_Based_Door_Lock.c: 94:                 KeySound();
  1086  057F  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0580  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0581  085F               	movf	main@Key4,w
  1089  0582  120A  118A  2006  120A  118A  	fcall	_Lcd_Write_Char
  1090                           
  1091                           ;Password_Based_Door_Lock.c: 95: 
  1092  0587  120A  158A  2666  120A  118A  	fcall	_KeySound
  1093                           
  1094                           ;Password_Based_Door_Lock.c: 99:                 KeySound();
  1095  058C  3014               	movlw	20
  1096  058D  1283               	bcf	3,5	;RP0=0, select bank0
  1097  058E  1303               	bcf	3,6	;RP1=0, select bank0
  1098  058F  00AF               	movwf	??_main+2
  1099  0590  3047               	movlw	71
  1100  0591  00AE               	movwf	??_main+1
  1101  0592  3000               	movlw	0
  1102  0593  00AD               	movwf	??_main
  1103  0594                     u1437:	
  1104  0594  0BAD               	decfsz	??_main,f
  1105  0595  2D94               	goto	u1437
  1106  0596  0BAE               	decfsz	??_main+1,f
  1107  0597  2D94               	goto	u1437
  1108  0598  0BAF               	decfsz	??_main+2,f
  1109  0599  2D94               	goto	u1437
  1110  059A  2D9B               	nop2
  1111  059B  0000               	nop
  1112                           
  1113                           ;Password_Based_Door_Lock.c: 101:                 rs41=GetKey();
  1114  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1115  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1116  059E  084C               	movf	main@p1,w
  1117  059F  065C               	xorwf	main@Key1,w
  1118  05A0  1903               	btfsc	3,2
  1119  05A1  2C89               	goto	l2093
  1120  05A2                     l2109:	
  1121  05A2  0848               	movf	main@r1,w
  1122  05A3  065C               	xorwf	main@Key1,w
  1123  05A4  1D03               	skipz
  1124  05A5  2F51               	goto	l2219
  1125  05A6  0849               	movf	main@r2,w
  1126  05A7  065D               	xorwf	main@Key2,w
  1127  05A8  1D03               	skipz
  1128  05A9  2F51               	goto	l2219
  1129  05AA  084A               	movf	main@r3,w
  1130  05AB  065E               	xorwf	main@Key3,w
  1131  05AC  1D03               	skipz
  1132  05AD  2F51               	goto	l2219
  1133  05AE  084B               	movf	main@r4,w
  1134  05AF  065F               	xorwf	main@Key4,w
  1135  05B0  1D03               	skipz
  1136  05B1  2F51               	goto	l2219
  1137                           
  1138                           ;Password_Based_Door_Lock.c: 116:                 KeySound();;Password_Based_Door_Lock.c
      +                          : 118:                 rs22=GetKey();
  1139  05B2  120A  158A  2636  120A  118A  	fcall	_Lcd_Clear
  1140                           
  1141                           ;Password_Based_Door_Lock.c: 119:                 Lcd_Set_Cursor(2,2);
  1142  05B7  01F4               	clrf	Lcd_Set_Cursor@b
  1143  05B8  0AF4               	incf	Lcd_Set_Cursor@b,f
  1144  05B9  3001               	movlw	1
  1145  05BA  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1146                           
  1147                           ;Password_Based_Door_Lock.c: 120:                 Lcd_Write_Char(rs22);
  1148  05BF  303C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1149  05C0  00F5               	movwf	Lcd_Write_String@a
  1150  05C1  3080               	movlw	128
  1151  05C2  00F6               	movwf	Lcd_Write_String@a+1
  1152  05C3  120A  158A  271E  120A  118A  	fcall	_Lcd_Write_String
  1153                           
  1154                           ;Password_Based_Door_Lock.c: 122: 
  1155  05C8  120A  158A  2641  120A  118A  	fcall	_GetKey
  1156  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1157  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1158  05CF  00AD               	movwf	??_main
  1159  05D0  082D               	movf	??_main,w
  1160  05D1  00D2               	movwf	main@rs11
  1161                           
  1162                           ;Password_Based_Door_Lock.c: 123:                 rs32=GetKey();
  1163  05D2  01F4               	clrf	Lcd_Set_Cursor@b
  1164  05D3  0AF4               	incf	Lcd_Set_Cursor@b,f
  1165  05D4  3002               	movlw	2
  1166  05D5  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1167                           
  1168                           ;Password_Based_Door_Lock.c: 124:                 Lcd_Set_Cursor(2,3);
  1169  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  1170  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  1171  05DC  0852               	movf	main@rs11,w
  1172  05DD  120A  118A  2006  120A  118A  	fcall	_Lcd_Write_Char
  1173                           
  1174                           ;Password_Based_Door_Lock.c: 125:                 Lcd_Write_Char(rs32);
  1175  05E2  120A  158A  2666  120A  118A  	fcall	_KeySound
  1176                           
  1177                           ;Password_Based_Door_Lock.c: 127: 
  1178  05E7  120A  158A  2641  120A  118A  	fcall	_GetKey
  1179  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1180  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1181  05EE  00AD               	movwf	??_main
  1182  05EF  082D               	movf	??_main,w
  1183  05F0  00D3               	movwf	main@rs21
  1184                           
  1185                           ;Password_Based_Door_Lock.c: 128:                 rs42=GetKey();
  1186  05F1  3002               	movlw	2
  1187  05F2  00AD               	movwf	??_main
  1188  05F3  082D               	movf	??_main,w
  1189  05F4  00F4               	movwf	Lcd_Set_Cursor@b
  1190  05F5  3002               	movlw	2
  1191  05F6  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1192                           
  1193                           ;Password_Based_Door_Lock.c: 129:                 Lcd_Set_Cursor(2,4);
  1194  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1195  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1196  05FD  0853               	movf	main@rs21,w
  1197  05FE  120A  118A  2006  120A  118A  	fcall	_Lcd_Write_Char
  1198                           
  1199                           ;Password_Based_Door_Lock.c: 130:                 Lcd_Write_Char(rs42);
  1200  0603  120A  158A  2666  120A  118A  	fcall	_KeySound
  1201                           
  1202                           ;Password_Based_Door_Lock.c: 132: 
  1203  0608  120A  158A  2641  120A  118A  	fcall	_GetKey
  1204  060D  1283               	bcf	3,5	;RP0=0, select bank0
  1205  060E  1303               	bcf	3,6	;RP1=0, select bank0
  1206  060F  00AD               	movwf	??_main
  1207  0610  082D               	movf	??_main,w
  1208  0611  00D4               	movwf	main@rs31
  1209                           
  1210                           ;Password_Based_Door_Lock.c: 133:                 _delay((unsigned long)((950)*(16000000
      +                          /4000.0)));
  1211  0612  3003               	movlw	3
  1212  0613  00AD               	movwf	??_main
  1213  0614  082D               	movf	??_main,w
  1214  0615  00F4               	movwf	Lcd_Set_Cursor@b
  1215  0616  3002               	movlw	2
  1216  0617  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1217                           
  1218                           ;Password_Based_Door_Lock.c: 134: 
  1219  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1220  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1221  061E  0854               	movf	main@rs31,w
  1222  061F  120A  118A  2006  120A  118A  	fcall	_Lcd_Write_Char
  1223                           
  1224                           ;Password_Based_Door_Lock.c: 135:                 if ( rs11==rs12 & rs21==rs22 & rs31==r
      +                          s32 &rs41==rs42 )
  1225  0624  120A  158A  2666  120A  118A  	fcall	_KeySound
  1226                           
  1227                           ;Password_Based_Door_Lock.c: 137:                     p1=rs12;
  1228  0629  120A  158A  2641  120A  118A  	fcall	_GetKey
  1229  062E  1283               	bcf	3,5	;RP0=0, select bank0
  1230  062F  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0630  00AD               	movwf	??_main
  1232  0631  082D               	movf	??_main,w
  1233  0632  00D5               	movwf	main@rs41
  1234                           
  1235                           ;Password_Based_Door_Lock.c: 138:                     p2=rs22;
  1236  0633  3004               	movlw	4
  1237  0634  00AD               	movwf	??_main
  1238  0635  082D               	movf	??_main,w
  1239  0636  00F4               	movwf	Lcd_Set_Cursor@b
  1240  0637  3002               	movlw	2
  1241  0638  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1242                           
  1243                           ;Password_Based_Door_Lock.c: 139:                     p3=rs32;
  1244  063D  1283               	bcf	3,5	;RP0=0, select bank0
  1245  063E  1303               	bcf	3,6	;RP1=0, select bank0
  1246  063F  0855               	movf	main@rs41,w
  1247  0640  120A  118A  2006  120A  118A  	fcall	_Lcd_Write_Char
  1248                           
  1249                           ;Password_Based_Door_Lock.c: 140:                     p4=rs42;
  1250  0645  120A  158A  2666  120A  118A  	fcall	_KeySound
  1251                           
  1252                           ;Password_Based_Door_Lock.c: 142:                     Lcd_Clear();
  1253  064A  3014               	movlw	20
  1254  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1255  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1256  064D  00AF               	movwf	??_main+2
  1257  064E  3047               	movlw	71
  1258  064F  00AE               	movwf	??_main+1
  1259  0650  3000               	movlw	0
  1260  0651  00AD               	movwf	??_main
  1261  0652                     u1447:	
  1262  0652  0BAD               	decfsz	??_main,f
  1263  0653  2E52               	goto	u1447
  1264  0654  0BAE               	decfsz	??_main+1,f
  1265  0655  2E52               	goto	u1447
  1266  0656  0BAF               	decfsz	??_main+2,f
  1267  0657  2E52               	goto	u1447
  1268  0658  2E59               	nop2
  1269  0659  0000               	nop
  1270                           
  1271                           ;Password_Based_Door_Lock.c: 145: 
  1272  065A  120A  158A  2636  120A  118A  	fcall	_Lcd_Clear
  1273                           
  1274                           ;Password_Based_Door_Lock.c: 146: 
  1275  065F  01F4               	clrf	Lcd_Set_Cursor@b
  1276  0660  0AF4               	incf	Lcd_Set_Cursor@b,f
  1277  0661  3001               	movlw	1
  1278  0662  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1279                           
  1280                           ;Password_Based_Door_Lock.c: 147:                     Lcd_Set_Cursor(2,1);
  1281  0667  304B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1282  0668  00F5               	movwf	Lcd_Write_String@a
  1283  0669  3080               	movlw	128
  1284  066A  00F6               	movwf	Lcd_Write_String@a+1
  1285  066B  120A  158A  271E  120A  118A  	fcall	_Lcd_Write_String
  1286                           
  1287                           ;Password_Based_Door_Lock.c: 149: 
  1288  0670  120A  158A  2641  120A  118A  	fcall	_GetKey
  1289  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0677  00AD               	movwf	??_main
  1292  0678  082D               	movf	??_main,w
  1293  0679  00D8               	movwf	main@rs12
  1294                           
  1295                           ;Password_Based_Door_Lock.c: 150:                     Wrongsound();
  1296  067A  01F4               	clrf	Lcd_Set_Cursor@b
  1297  067B  0AF4               	incf	Lcd_Set_Cursor@b,f
  1298  067C  3002               	movlw	2
  1299  067D  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1300                           
  1301                           ;Password_Based_Door_Lock.c: 151:                     R=0;
  1302  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0684  0858               	movf	main@rs12,w
  1305  0685  120A  118A  2006  120A  118A  	fcall	_Lcd_Write_Char
  1306                           
  1307                           ;Password_Based_Door_Lock.c: 152: 
  1308  068A  120A  158A  2666  120A  118A  	fcall	_KeySound
  1309                           
  1310                           ;Password_Based_Door_Lock.c: 154:                 }
  1311  068F  120A  158A  2641  120A  118A  	fcall	_GetKey
  1312  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0696  00AD               	movwf	??_main
  1315  0697  082D               	movf	??_main,w
  1316  0698  00D9               	movwf	main@rs22
  1317                           
  1318                           ;Password_Based_Door_Lock.c: 155:             }
  1319  0699  3002               	movlw	2
  1320  069A  00AD               	movwf	??_main
  1321  069B  082D               	movf	??_main,w
  1322  069C  00F4               	movwf	Lcd_Set_Cursor@b
  1323  069D  3002               	movlw	2
  1324  069E  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1325                           
  1326                           ;Password_Based_Door_Lock.c: 156:         else if ( R==5 )
  1327  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  1328  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  1329  06A5  0859               	movf	main@rs22,w
  1330  06A6  120A  118A  2006  120A  118A  	fcall	_Lcd_Write_Char
  1331                           
  1332                           ;Password_Based_Door_Lock.c: 157:         {
  1333  06AB  120A  158A  2666  120A  118A  	fcall	_KeySound
  1334                           
  1335                           ;Password_Based_Door_Lock.c: 159:             Lcd_Set_Cursor(1,1);
  1336  06B0  120A  158A  2641  120A  118A  	fcall	_GetKey
  1337  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1338  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1339  06B7  00AD               	movwf	??_main
  1340  06B8  082D               	movf	??_main,w
  1341  06B9  00DA               	movwf	main@rs32
  1342                           
  1343                           ;Password_Based_Door_Lock.c: 160:             Lcd_Write_String("Wait For 30 Sec");
  1344  06BA  3003               	movlw	3
  1345  06BB  00AD               	movwf	??_main
  1346  06BC  082D               	movf	??_main,w
  1347  06BD  00F4               	movwf	Lcd_Set_Cursor@b
  1348  06BE  3002               	movlw	2
  1349  06BF  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1350                           
  1351                           ;Password_Based_Door_Lock.c: 161: 
  1352  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1353  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1354  06C6  085A               	movf	main@rs32,w
  1355  06C7  120A  118A  2006  120A  118A  	fcall	_Lcd_Write_Char
  1356                           
  1357                           ;Password_Based_Door_Lock.c: 162: 
  1358  06CC  120A  158A  2666  120A  118A  	fcall	_KeySound
  1359                           
  1360                           ;Password_Based_Door_Lock.c: 164:             for (int i=0;i<=30;i++)
  1361  06D1  120A  158A  2641  120A  118A  	fcall	_GetKey
  1362  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1363  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1364  06D8  00AD               	movwf	??_main
  1365  06D9  082D               	movf	??_main,w
  1366  06DA  00DB               	movwf	main@rs42
  1367                           
  1368                           ;Password_Based_Door_Lock.c: 165:             {
  1369  06DB  3004               	movlw	4
  1370  06DC  00AD               	movwf	??_main
  1371  06DD  082D               	movf	??_main,w
  1372  06DE  00F4               	movwf	Lcd_Set_Cursor@b
  1373  06DF  3002               	movlw	2
  1374  06E0  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1375                           
  1376                           ;Password_Based_Door_Lock.c: 166:                 sprintf(Nes1 , "%d", R1 );
  1377  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1378  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1379  06E7  085B               	movf	main@rs42,w
  1380  06E8  120A  118A  2006  120A  118A  	fcall	_Lcd_Write_Char
  1381                           
  1382                           ;Password_Based_Door_Lock.c: 167:                 Lcd_Clear();
  1383  06ED  120A  158A  2666  120A  118A  	fcall	_KeySound
  1384                           
  1385                           ;Password_Based_Door_Lock.c: 169:                 Lcd_Write_String("Wait For 30 Sec");
  1386  06F2  3014               	movlw	20
  1387  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  1388  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  1389  06F5  00AF               	movwf	??_main+2
  1390  06F6  3047               	movlw	71
  1391  06F7  00AE               	movwf	??_main+1
  1392  06F8  3000               	movlw	0
  1393  06F9  00AD               	movwf	??_main
  1394  06FA                     u1457:	
  1395  06FA  0BAD               	decfsz	??_main,f
  1396  06FB  2EFA               	goto	u1457
  1397  06FC  0BAE               	decfsz	??_main+1,f
  1398  06FD  2EFA               	goto	u1457
  1399  06FE  0BAF               	decfsz	??_main+2,f
  1400  06FF  2EFA               	goto	u1457
  1401  0700  2F01               	nop2
  1402  0701  0000               	nop
  1403                           
  1404                           ;Password_Based_Door_Lock.c: 171:                 Lcd_Write_String(Nes1);
  1405  0702  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0703  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0704  0852               	movf	main@rs11,w
  1408  0705  0658               	xorwf	main@rs12,w
  1409  0706  1D03               	skipz
  1410  0707  2CC5               	goto	l2043
  1411  0708  0853               	movf	main@rs21,w
  1412  0709  0659               	xorwf	main@rs22,w
  1413  070A  1D03               	skipz
  1414  070B  2CC5               	goto	l2043
  1415  070C  0854               	movf	main@rs31,w
  1416  070D  065A               	xorwf	main@rs32,w
  1417  070E  1D03               	skipz
  1418  070F  2CC5               	goto	l2043
  1419  0710  0855               	movf	main@rs41,w
  1420  0711  065B               	xorwf	main@rs42,w
  1421  0712  1D03               	skipz
  1422  0713  2CC5               	goto	l2043
  1423                           
  1424                           ;Password_Based_Door_Lock.c: 172:                 WaitSound();;Password_Based_Door_Lock.
      +                          c: 173:                 R1=R1-1;
  1425  0714  0858               	movf	main@rs12,w
  1426  0715  00AD               	movwf	??_main
  1427  0716  082D               	movf	??_main,w
  1428  0717  00CC               	movwf	main@p1
  1429                           
  1430                           ;Password_Based_Door_Lock.c: 174:                 _delay((unsigned long)((900)*(16000000
      +                          /4000.0)));
  1431  0718  0859               	movf	main@rs22,w
  1432  0719  00AD               	movwf	??_main
  1433  071A  082D               	movf	??_main,w
  1434  071B  00CD               	movwf	main@p2
  1435                           
  1436                           ;Password_Based_Door_Lock.c: 175: 
  1437  071C  085A               	movf	main@rs32,w
  1438  071D  00AD               	movwf	??_main
  1439  071E  082D               	movf	??_main,w
  1440  071F  00CE               	movwf	main@p3
  1441                           
  1442                           ;Password_Based_Door_Lock.c: 176: 
  1443  0720  085B               	movf	main@rs42,w
  1444  0721  00AD               	movwf	??_main
  1445  0722  082D               	movf	??_main,w
  1446  0723  00CF               	movwf	main@p4
  1447                           
  1448                           ;Password_Based_Door_Lock.c: 178:             }
  1449  0724  120A  158A  2636  120A  118A  	fcall	_Lcd_Clear
  1450                           
  1451                           ;Password_Based_Door_Lock.c: 179:             R1=30;
  1452  0729  01F4               	clrf	Lcd_Set_Cursor@b
  1453  072A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1454  072B  3001               	movlw	1
  1455  072C  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1456                           
  1457                           ;Password_Based_Door_Lock.c: 180:             R=0;
  1458  0731  3074               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1459  0732  00F5               	movwf	Lcd_Write_String@a
  1460  0733  3080               	movlw	128
  1461  0734  00F6               	movwf	Lcd_Write_String@a+1
  1462  0735  120A  158A  271E  120A  118A  	fcall	_Lcd_Write_String
  1463                           
  1464                           ;Password_Based_Door_Lock.c: 183: 
  1465  073A  01F4               	clrf	Lcd_Set_Cursor@b
  1466  073B  0AF4               	incf	Lcd_Set_Cursor@b,f
  1467  073C  3002               	movlw	2
  1468  073D  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1469                           
  1470                           ;Password_Based_Door_Lock.c: 184:         }
  1471  0742  3089               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1472  0743  00F5               	movwf	Lcd_Write_String@a
  1473  0744  3080               	movlw	128
  1474  0745  00F6               	movwf	Lcd_Write_String@a+1
  1475  0746  120A  158A  271E  120A  118A  	fcall	_Lcd_Write_String
  1476                           
  1477                           ;Password_Based_Door_Lock.c: 186:             {
  1478  074B  120A  118A  20A3  120A  118A  	fcall	_Wrongsound
  1479  0750  2CC1               	goto	l2107
  1480  0751                     l2219:	
  1481  0751  3005               	movlw	5
  1482  0752  0660               	xorwf	main@R,w
  1483  0753  0461               	iorwf	main@R+1,w
  1484  0754  1D03               	btfss	3,2
  1485  0755  2FE0               	goto	l2253
  1486                           
  1487                           ;Password_Based_Door_Lock.c: 193: ;Password_Based_Door_Lock.c: 194: 
  1488  0756  120A  158A  2636  120A  118A  	fcall	_Lcd_Clear
  1489                           
  1490                           ;Password_Based_Door_Lock.c: 195:     }
  1491  075B  01F4               	clrf	Lcd_Set_Cursor@b
  1492  075C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1493  075D  3001               	movlw	1
  1494  075E  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1495                           
  1496                           ;Password_Based_Door_Lock.c: 196: 
  1497  0763  302C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1498  0764  00F5               	movwf	Lcd_Write_String@a
  1499  0765  3080               	movlw	128
  1500  0766  00F6               	movwf	Lcd_Write_String@a+1
  1501  0767  120A  158A  271E  120A  118A  	fcall	_Lcd_Write_String
  1502  076C  1283               	bcf	3,5	;RP0=0, select bank0
  1503  076D  1303               	bcf	3,6	;RP1=0, select bank0
  1504  076E  01D0               	clrf	main@i
  1505  076F  01D1               	clrf	main@i+1
  1506  0770                     l2227:	
  1507  0770  0851               	movf	main@i+1,w
  1508  0771  3A80               	xorlw	128
  1509  0772  00FF               	movwf	127
  1510  0773  3080               	movlw	128
  1511  0774  027F               	subwf	127,w
  1512  0775  1D03               	skipz
  1513  0776  2F79               	goto	u1425
  1514  0777  301F               	movlw	31
  1515  0778  0250               	subwf	main@i,w
  1516  0779                     u1425:	
  1517  0779  1803               	btfsc	3,0
  1518  077A  2FD9               	goto	l2249
  1519  077B  3093               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1520  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1521  077D  1303               	bcf	3,6	;RP1=0, select bank0
  1522  077E  00AD               	movwf	??_main
  1523  077F  082D               	movf	??_main,w
  1524  0780  00A0               	movwf	sprintf@f
  1525  0781  0857               	movf	main@R1+1,w
  1526  0782  00A2               	movwf	?_sprintf+2
  1527  0783  0856               	movf	main@R1,w
  1528  0784  00A1               	movwf	?_sprintf+1
  1529  0785  303C               	movlw	(low (main@Nes1| 0))& (0+255)
  1530  0786  120A  118A  214E  120A  118A  	fcall	_sprintf
  1531  078B  120A  158A  2636  120A  118A  	fcall	_Lcd_Clear
  1532  0790  01F4               	clrf	Lcd_Set_Cursor@b
  1533  0791  0AF4               	incf	Lcd_Set_Cursor@b,f
  1534  0792  3001               	movlw	1
  1535  0793  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1536  0798  302C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1537  0799  00F5               	movwf	Lcd_Write_String@a
  1538  079A  3080               	movlw	128
  1539  079B  00F6               	movwf	Lcd_Write_String@a+1
  1540  079C  120A  158A  271E  120A  118A  	fcall	_Lcd_Write_String
  1541  07A1  01F4               	clrf	Lcd_Set_Cursor@b
  1542  07A2  0AF4               	incf	Lcd_Set_Cursor@b,f
  1543  07A3  3002               	movlw	2
  1544  07A4  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1545  07A9  303C               	movlw	(low (main@Nes1| 0))& (0+255)
  1546  07AA  00F5               	movwf	Lcd_Write_String@a
  1547  07AB  3000               	movlw	0
  1548  07AC  00F6               	movwf	Lcd_Write_String@a+1
  1549  07AD  120A  158A  271E  120A  118A  	fcall	_Lcd_Write_String
  1550  07B2  120A  158A  2651  120A  118A  	fcall	_WaitSound
  1551  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1552  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1553  07B9  0856               	movf	main@R1,w
  1554  07BA  3EFF               	addlw	255
  1555  07BB  00D6               	movwf	main@R1
  1556  07BC  0857               	movf	main@R1+1,w
  1557  07BD  1803               	skipnc
  1558  07BE  3E01               	addlw	1
  1559  07BF  3EFF               	addlw	255
  1560  07C0  00D7               	movwf	main@R1+1
  1561  07C1  3013               	movlw	19
  1562  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1563  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1564  07C4  00AF               	movwf	??_main+2
  1565  07C5  3044               	movlw	68
  1566  07C6  00AE               	movwf	??_main+1
  1567  07C7  3043               	movlw	67
  1568  07C8  00AD               	movwf	??_main
  1569  07C9                     u1467:	
  1570  07C9  0BAD               	decfsz	??_main,f
  1571  07CA  2FC9               	goto	u1467
  1572  07CB  0BAE               	decfsz	??_main+1,f
  1573  07CC  2FC9               	goto	u1467
  1574  07CD  0BAF               	decfsz	??_main+2,f
  1575  07CE  2FC9               	goto	u1467
  1576  07CF  2FD0               	nop2
  1577  07D0  3001               	movlw	1
  1578  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  1579  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  1580  07D3  07D0               	addwf	main@i,f
  1581  07D4  1803               	skipnc
  1582  07D5  0AD1               	incf	main@i+1,f
  1583  07D6  3000               	movlw	0
  1584  07D7  07D1               	addwf	main@i+1,f
  1585  07D8  2F70               	goto	l2227
  1586  07D9                     l2249:	
  1587  07D9  301E               	movlw	30
  1588  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1589  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1590  07DC  00D6               	movwf	main@R1
  1591  07DD  3000               	movlw	0
  1592  07DE  00D7               	movwf	main@R1+1
  1593  07DF  2CC1               	goto	l2107
  1594  07E0                     l2253:	
  1595  07E0  120A  158A  2636  120A  118A  	fcall	_Lcd_Clear
  1596  07E5  01F4               	clrf	Lcd_Set_Cursor@b
  1597  07E6  0AF4               	incf	Lcd_Set_Cursor@b,f
  1598  07E7  3001               	movlw	1
  1599  07E8  120A  158A  275B  120A  118A  	fcall	_Lcd_Set_Cursor
  1600  07ED  307F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1601  07EE  00F5               	movwf	Lcd_Write_String@a
  1602  07EF  3080               	movlw	128
  1603  07F0  00F6               	movwf	Lcd_Write_String@a+1
  1604  07F1  120A  158A  271E  120A  118A  	fcall	_Lcd_Write_String
  1605  07F6  120A  118A  20A3  120A  118A  	fcall	_Wrongsound
  1606  07FB  2CC5               	goto	l2043
  1607  07FC                     __end_of_main:	
  1608                           
  1609                           	psect	text1
  1610  0226                     __ptext1:	
  1611 ;; *************** function _startingSound *****************
  1612 ;; Defined at:
  1613 ;;		line 35 in file "./Buz_Lock_Led.h"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0
  1629 ;;      Temps:          3       0       0       0       0
  1630 ;;      Totals:         3       0       0       0       0
  1631 ;;Total ram usage:        3 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_main
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           
  1641                           ;psect for function _startingSound
  1642  0226                     _startingSound:	
  1643                           
  1644                           ;./Buz_Lock_Led.h: 37:     TRISC=0x00;
  1645                           
  1646                           ;incstack = 0
  1647                           ; Regs used in _startingSound: [wreg+status,2]
  1648  0226  1683               	bsf	3,5	;RP0=1, select bank1
  1649  0227  1303               	bcf	3,6	;RP1=0, select bank1
  1650  0228  0187               	clrf	7	;volatile
  1651                           
  1652                           ;./Buz_Lock_Led.h: 38:     PORTCbits.RC4=1;
  1653  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1654  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1655  022B  1607               	bsf	7,4	;volatile
  1656                           
  1657                           ;./Buz_Lock_Led.h: 39:     PORTCbits.RC5=1;
  1658  022C  1687               	bsf	7,5	;volatile
  1659                           
  1660                           ;./Buz_Lock_Led.h: 40:     PORTCbits.RC6=1;
  1661  022D  1707               	bsf	7,6	;volatile
  1662                           
  1663                           ;./Buz_Lock_Led.h: 41:     PORTCbits.RC7=1;
  1664  022E  1787               	bsf	7,7	;volatile
  1665                           
  1666                           ;./Buz_Lock_Led.h: 43:     PORTCbits.RC3=1;
  1667  022F  1587               	bsf	7,3	;volatile
  1668                           
  1669                           ;./Buz_Lock_Led.h: 44:     PORTCbits.RC6=0;
  1670  0230  1307               	bcf	7,6	;volatile
  1671                           
  1672                           ;./Buz_Lock_Led.h: 45:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1673  0231  3002               	movlw	2
  1674  0232  00F2               	movwf	??_startingSound+2
  1675  0233  3004               	movlw	4
  1676  0234  00F1               	movwf	??_startingSound+1
  1677  0235  30BA               	movlw	186
  1678  0236  00F0               	movwf	??_startingSound
  1679  0237                     u1477:	
  1680  0237  0BF0               	decfsz	??_startingSound,f
  1681  0238  2A37               	goto	u1477
  1682  0239  0BF1               	decfsz	??_startingSound+1,f
  1683  023A  2A37               	goto	u1477
  1684  023B  0BF2               	decfsz	??_startingSound+2,f
  1685  023C  2A37               	goto	u1477
  1686  023D  0000               	nop
  1687                           
  1688                           ;./Buz_Lock_Led.h: 46:     PORTCbits.RC3=0;
  1689  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1690  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1691  0240  1187               	bcf	7,3	;volatile
  1692                           
  1693                           ;./Buz_Lock_Led.h: 47:     PORTCbits.RC6=1;
  1694  0241  1707               	bsf	7,6	;volatile
  1695                           
  1696                           ;./Buz_Lock_Led.h: 48:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1697  0242  3002               	movlw	2
  1698  0243  00F2               	movwf	??_startingSound+2
  1699  0244  3004               	movlw	4
  1700  0245  00F1               	movwf	??_startingSound+1
  1701  0246  30BA               	movlw	186
  1702  0247  00F0               	movwf	??_startingSound
  1703  0248                     u1487:	
  1704  0248  0BF0               	decfsz	??_startingSound,f
  1705  0249  2A48               	goto	u1487
  1706  024A  0BF1               	decfsz	??_startingSound+1,f
  1707  024B  2A48               	goto	u1487
  1708  024C  0BF2               	decfsz	??_startingSound+2,f
  1709  024D  2A48               	goto	u1487
  1710  024E  0000               	nop
  1711                           
  1712                           ;./Buz_Lock_Led.h: 50:     PORTCbits.RC3=1;
  1713  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1714  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1715  0251  1587               	bsf	7,3	;volatile
  1716                           
  1717                           ;./Buz_Lock_Led.h: 51:     PORTCbits.RC6=0;
  1718  0252  1307               	bcf	7,6	;volatile
  1719                           
  1720                           ;./Buz_Lock_Led.h: 52:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1721  0253  3002               	movlw	2
  1722  0254  00F2               	movwf	??_startingSound+2
  1723  0255  3004               	movlw	4
  1724  0256  00F1               	movwf	??_startingSound+1
  1725  0257  30BA               	movlw	186
  1726  0258  00F0               	movwf	??_startingSound
  1727  0259                     u1497:	
  1728  0259  0BF0               	decfsz	??_startingSound,f
  1729  025A  2A59               	goto	u1497
  1730  025B  0BF1               	decfsz	??_startingSound+1,f
  1731  025C  2A59               	goto	u1497
  1732  025D  0BF2               	decfsz	??_startingSound+2,f
  1733  025E  2A59               	goto	u1497
  1734  025F  0000               	nop
  1735                           
  1736                           ;./Buz_Lock_Led.h: 53:     PORTCbits.RC3=0;
  1737  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0262  1187               	bcf	7,3	;volatile
  1740                           
  1741                           ;./Buz_Lock_Led.h: 54:     PORTCbits.RC6=1;
  1742  0263  1707               	bsf	7,6	;volatile
  1743                           
  1744                           ;./Buz_Lock_Led.h: 55:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1745  0264  3002               	movlw	2
  1746  0265  00F2               	movwf	??_startingSound+2
  1747  0266  3004               	movlw	4
  1748  0267  00F1               	movwf	??_startingSound+1
  1749  0268  30BA               	movlw	186
  1750  0269  00F0               	movwf	??_startingSound
  1751  026A                     u1507:	
  1752  026A  0BF0               	decfsz	??_startingSound,f
  1753  026B  2A6A               	goto	u1507
  1754  026C  0BF1               	decfsz	??_startingSound+1,f
  1755  026D  2A6A               	goto	u1507
  1756  026E  0BF2               	decfsz	??_startingSound+2,f
  1757  026F  2A6A               	goto	u1507
  1758  0270  0000               	nop
  1759                           
  1760                           ;./Buz_Lock_Led.h: 57:     PORTCbits.RC3=1;
  1761  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0273  1587               	bsf	7,3	;volatile
  1764                           
  1765                           ;./Buz_Lock_Led.h: 58:     PORTCbits.RC6=0;
  1766  0274  1307               	bcf	7,6	;volatile
  1767                           
  1768                           ;./Buz_Lock_Led.h: 59:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1769  0275  3002               	movlw	2
  1770  0276  00F2               	movwf	??_startingSound+2
  1771  0277  3004               	movlw	4
  1772  0278  00F1               	movwf	??_startingSound+1
  1773  0279  30BA               	movlw	186
  1774  027A  00F0               	movwf	??_startingSound
  1775  027B                     u1517:	
  1776  027B  0BF0               	decfsz	??_startingSound,f
  1777  027C  2A7B               	goto	u1517
  1778  027D  0BF1               	decfsz	??_startingSound+1,f
  1779  027E  2A7B               	goto	u1517
  1780  027F  0BF2               	decfsz	??_startingSound+2,f
  1781  0280  2A7B               	goto	u1517
  1782  0281  0000               	nop
  1783                           
  1784                           ;./Buz_Lock_Led.h: 60:     PORTCbits.RC3=0;
  1785  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1786  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1787  0284  1187               	bcf	7,3	;volatile
  1788                           
  1789                           ;./Buz_Lock_Led.h: 61:     PORTCbits.RC6=1;
  1790  0285  1707               	bsf	7,6	;volatile
  1791                           
  1792                           ;./Buz_Lock_Led.h: 62:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1793  0286  3002               	movlw	2
  1794  0287  00F2               	movwf	??_startingSound+2
  1795  0288  3004               	movlw	4
  1796  0289  00F1               	movwf	??_startingSound+1
  1797  028A  30BA               	movlw	186
  1798  028B  00F0               	movwf	??_startingSound
  1799  028C                     u1527:	
  1800  028C  0BF0               	decfsz	??_startingSound,f
  1801  028D  2A8C               	goto	u1527
  1802  028E  0BF1               	decfsz	??_startingSound+1,f
  1803  028F  2A8C               	goto	u1527
  1804  0290  0BF2               	decfsz	??_startingSound+2,f
  1805  0291  2A8C               	goto	u1527
  1806  0292  0000               	nop
  1807                           
  1808                           ;./Buz_Lock_Led.h: 64:     PORTCbits.RC3=1;
  1809  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1810  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1811  0295  1587               	bsf	7,3	;volatile
  1812                           
  1813                           ;./Buz_Lock_Led.h: 65:     PORTCbits.RC6=0;
  1814  0296  1307               	bcf	7,6	;volatile
  1815                           
  1816                           ;./Buz_Lock_Led.h: 66:     _delay((unsigned long)((250)*(16000000/4000.0)));
  1817  0297  3006               	movlw	6
  1818  0298  00F2               	movwf	??_startingSound+2
  1819  0299  3013               	movlw	19
  1820  029A  00F1               	movwf	??_startingSound+1
  1821  029B  30AD               	movlw	173
  1822  029C  00F0               	movwf	??_startingSound
  1823  029D                     u1537:	
  1824  029D  0BF0               	decfsz	??_startingSound,f
  1825  029E  2A9D               	goto	u1537
  1826  029F  0BF1               	decfsz	??_startingSound+1,f
  1827  02A0  2A9D               	goto	u1537
  1828  02A1  0BF2               	decfsz	??_startingSound+2,f
  1829  02A2  2A9D               	goto	u1537
  1830  02A3  2AA4               	nop2
  1831                           
  1832                           ;./Buz_Lock_Led.h: 67:     PORTCbits.RC3=0;
  1833  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1834  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1835  02A6  1187               	bcf	7,3	;volatile
  1836                           
  1837                           ;./Buz_Lock_Led.h: 68:     PORTCbits.RC6=1;
  1838  02A7  1707               	bsf	7,6	;volatile
  1839                           
  1840                           ;./Buz_Lock_Led.h: 69:     _delay((unsigned long)((150)*(16000000/4000.0)));
  1841  02A8  3004               	movlw	4
  1842  02A9  00F2               	movwf	??_startingSound+2
  1843  02AA  300C               	movlw	12
  1844  02AB  00F1               	movwf	??_startingSound+1
  1845  02AC  3033               	movlw	51
  1846  02AD  00F0               	movwf	??_startingSound
  1847  02AE                     u1547:	
  1848  02AE  0BF0               	decfsz	??_startingSound,f
  1849  02AF  2AAE               	goto	u1547
  1850  02B0  0BF1               	decfsz	??_startingSound+1,f
  1851  02B1  2AAE               	goto	u1547
  1852  02B2  0BF2               	decfsz	??_startingSound+2,f
  1853  02B3  2AAE               	goto	u1547
  1854  02B4  2AB5               	nop2
  1855                           
  1856                           ;./Buz_Lock_Led.h: 71:     PORTCbits.RC3=1;
  1857  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1858  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1859  02B7  1587               	bsf	7,3	;volatile
  1860                           
  1861                           ;./Buz_Lock_Led.h: 72:     PORTCbits.RC6=0;
  1862  02B8  1307               	bcf	7,6	;volatile
  1863                           
  1864                           ;./Buz_Lock_Led.h: 73:     _delay((unsigned long)((250)*(16000000/4000.0)));
  1865  02B9  3006               	movlw	6
  1866  02BA  00F2               	movwf	??_startingSound+2
  1867  02BB  3013               	movlw	19
  1868  02BC  00F1               	movwf	??_startingSound+1
  1869  02BD  30AD               	movlw	173
  1870  02BE  00F0               	movwf	??_startingSound
  1871  02BF                     u1557:	
  1872  02BF  0BF0               	decfsz	??_startingSound,f
  1873  02C0  2ABF               	goto	u1557
  1874  02C1  0BF1               	decfsz	??_startingSound+1,f
  1875  02C2  2ABF               	goto	u1557
  1876  02C3  0BF2               	decfsz	??_startingSound+2,f
  1877  02C4  2ABF               	goto	u1557
  1878  02C5  2AC6               	nop2
  1879                           
  1880                           ;./Buz_Lock_Led.h: 74:     PORTCbits.RC3=0;
  1881  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1882  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1883  02C8  1187               	bcf	7,3	;volatile
  1884                           
  1885                           ;./Buz_Lock_Led.h: 75:     PORTCbits.RC6=1;
  1886  02C9  1707               	bsf	7,6	;volatile
  1887                           
  1888                           ;./Buz_Lock_Led.h: 76:     _delay((unsigned long)((150)*(16000000/4000.0)));
  1889  02CA  3004               	movlw	4
  1890  02CB  00F2               	movwf	??_startingSound+2
  1891  02CC  300C               	movlw	12
  1892  02CD  00F1               	movwf	??_startingSound+1
  1893  02CE  3033               	movlw	51
  1894  02CF  00F0               	movwf	??_startingSound
  1895  02D0                     u1567:	
  1896  02D0  0BF0               	decfsz	??_startingSound,f
  1897  02D1  2AD0               	goto	u1567
  1898  02D2  0BF1               	decfsz	??_startingSound+1,f
  1899  02D3  2AD0               	goto	u1567
  1900  02D4  0BF2               	decfsz	??_startingSound+2,f
  1901  02D5  2AD0               	goto	u1567
  1902  02D6  2AD7               	nop2
  1903                           
  1904                           ;./Buz_Lock_Led.h: 78:     PORTCbits.RC3=1;
  1905  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1906  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1907  02D9  1587               	bsf	7,3	;volatile
  1908                           
  1909                           ;./Buz_Lock_Led.h: 79:     PORTCbits.RC6=0;
  1910  02DA  1307               	bcf	7,6	;volatile
  1911                           
  1912                           ;./Buz_Lock_Led.h: 80:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1913  02DB  3002               	movlw	2
  1914  02DC  00F2               	movwf	??_startingSound+2
  1915  02DD  3004               	movlw	4
  1916  02DE  00F1               	movwf	??_startingSound+1
  1917  02DF  30BA               	movlw	186
  1918  02E0  00F0               	movwf	??_startingSound
  1919  02E1                     u1577:	
  1920  02E1  0BF0               	decfsz	??_startingSound,f
  1921  02E2  2AE1               	goto	u1577
  1922  02E3  0BF1               	decfsz	??_startingSound+1,f
  1923  02E4  2AE1               	goto	u1577
  1924  02E5  0BF2               	decfsz	??_startingSound+2,f
  1925  02E6  2AE1               	goto	u1577
  1926  02E7  0000               	nop
  1927                           
  1928                           ;./Buz_Lock_Led.h: 81:     PORTCbits.RC3=0;
  1929  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1930  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1931  02EA  1187               	bcf	7,3	;volatile
  1932                           
  1933                           ;./Buz_Lock_Led.h: 82:     PORTCbits.RC6=1;
  1934  02EB  1707               	bsf	7,6	;volatile
  1935                           
  1936                           ;./Buz_Lock_Led.h: 83:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1937  02EC  3002               	movlw	2
  1938  02ED  00F2               	movwf	??_startingSound+2
  1939  02EE  3004               	movlw	4
  1940  02EF  00F1               	movwf	??_startingSound+1
  1941  02F0  30BA               	movlw	186
  1942  02F1  00F0               	movwf	??_startingSound
  1943  02F2                     u1587:	
  1944  02F2  0BF0               	decfsz	??_startingSound,f
  1945  02F3  2AF2               	goto	u1587
  1946  02F4  0BF1               	decfsz	??_startingSound+1,f
  1947  02F5  2AF2               	goto	u1587
  1948  02F6  0BF2               	decfsz	??_startingSound+2,f
  1949  02F7  2AF2               	goto	u1587
  1950  02F8  0000               	nop
  1951                           
  1952                           ;./Buz_Lock_Led.h: 85:     PORTCbits.RC3=1;
  1953  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1954  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1955  02FB  1587               	bsf	7,3	;volatile
  1956                           
  1957                           ;./Buz_Lock_Led.h: 86:     PORTCbits.RC6=0;
  1958  02FC  1307               	bcf	7,6	;volatile
  1959                           
  1960                           ;./Buz_Lock_Led.h: 87:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1961  02FD  3002               	movlw	2
  1962  02FE  00F2               	movwf	??_startingSound+2
  1963  02FF  3004               	movlw	4
  1964  0300  00F1               	movwf	??_startingSound+1
  1965  0301  30BA               	movlw	186
  1966  0302  00F0               	movwf	??_startingSound
  1967  0303                     u1597:	
  1968  0303  0BF0               	decfsz	??_startingSound,f
  1969  0304  2B03               	goto	u1597
  1970  0305  0BF1               	decfsz	??_startingSound+1,f
  1971  0306  2B03               	goto	u1597
  1972  0307  0BF2               	decfsz	??_startingSound+2,f
  1973  0308  2B03               	goto	u1597
  1974  0309  0000               	nop
  1975                           
  1976                           ;./Buz_Lock_Led.h: 88:     PORTCbits.RC3=0;
  1977  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1978  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1979  030C  1187               	bcf	7,3	;volatile
  1980                           
  1981                           ;./Buz_Lock_Led.h: 89:     PORTCbits.RC6=1;
  1982  030D  1707               	bsf	7,6	;volatile
  1983                           
  1984                           ;./Buz_Lock_Led.h: 90:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1985  030E  3002               	movlw	2
  1986  030F  00F2               	movwf	??_startingSound+2
  1987  0310  3004               	movlw	4
  1988  0311  00F1               	movwf	??_startingSound+1
  1989  0312  30BA               	movlw	186
  1990  0313  00F0               	movwf	??_startingSound
  1991  0314                     u1607:	
  1992  0314  0BF0               	decfsz	??_startingSound,f
  1993  0315  2B14               	goto	u1607
  1994  0316  0BF1               	decfsz	??_startingSound+1,f
  1995  0317  2B14               	goto	u1607
  1996  0318  0BF2               	decfsz	??_startingSound+2,f
  1997  0319  2B14               	goto	u1607
  1998  031A  0000               	nop
  1999                           
  2000                           ;./Buz_Lock_Led.h: 92:     _delay((unsigned long)((700)*(16000000/4000.0)));
  2001  031B  300F               	movlw	15
  2002  031C  00F2               	movwf	??_startingSound+2
  2003  031D  3035               	movlw	53
  2004  031E  00F1               	movwf	??_startingSound+1
  2005  031F  3051               	movlw	81
  2006  0320  00F0               	movwf	??_startingSound
  2007  0321                     u1617:	
  2008  0321  0BF0               	decfsz	??_startingSound,f
  2009  0322  2B21               	goto	u1617
  2010  0323  0BF1               	decfsz	??_startingSound+1,f
  2011  0324  2B21               	goto	u1617
  2012  0325  0BF2               	decfsz	??_startingSound+2,f
  2013  0326  2B21               	goto	u1617
  2014  0327  0008               	return
  2015  0328                     __end_of_startingSound:	
  2016                           
  2017                           	psect	text2
  2018  014E                     __ptext2:	
  2019 ;; *************** function _sprintf *****************
  2020 ;; Defined at:
  2021 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  sp              1    wreg     PTR unsigned char 
  2024 ;;		 -> main@Nes1(12), main@Nes(12), 
  2025 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2026 ;;		 -> STR_11(3), STR_3(3), 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2029 ;;		 -> main@Nes1(12), main@Nes(12), 
  2030 ;;  tmpval          4    0        struct .
  2031 ;;  val             2    9[BANK0 ] unsigned int 
  2032 ;;  cp              2    0        PTR const unsigned char 
  2033 ;;  len             2    0        unsigned int 
  2034 ;;  c               1   12[BANK0 ] unsigned char 
  2035 ;;  prec            1    8[BANK0 ] char 
  2036 ;;  flag            1    7[BANK0 ] unsigned char 
  2037 ;;  ap              1    6[BANK0 ] PTR void [1]
  2038 ;;		 -> ?_sprintf(2), 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  2    0[BANK0 ] int 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         0       3       0       0       0
  2049 ;;      Locals:         0       7       0       0       0
  2050 ;;      Temps:          0       3       0       0       0
  2051 ;;      Totals:         0      13       0       0       0
  2052 ;;Total ram usage:       13 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    1
  2055 ;; This function calls:
  2056 ;;		___lwdiv
  2057 ;;		___lwmod
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function _sprintf
  2065  014E                     _sprintf:	
  2066                           
  2067                           ;incstack = 0
  2068                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2069                           ;sprintf@sp stored from wreg
  2070  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2071  014F  1303               	bcf	3,6	;RP1=0, select bank0
  2072  0150  00AB               	movwf	sprintf@sp
  2073                           
  2074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2075  0151  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2076  0152  00A3               	movwf	??_sprintf
  2077  0153  0823               	movf	??_sprintf,w
  2078  0154  00A6               	movwf	sprintf@ap
  2079  0155                     l1989:	
  2080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2081                           
  2082                           
  2083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2084  0155  3001               	movlw	1
  2085  0156  07A0               	addwf	sprintf@f,f
  2086  0157  30FF               	movlw	-1
  2087  0158  0720               	addwf	sprintf@f,w
  2088  0159  0084               	movwf	4
  2089  015A  120A  158A  200A  120A  118A  	fcall	stringdir
  2090  015F  00A3               	movwf	??_sprintf
  2091  0160  0823               	movf	??_sprintf,w
  2092  0161  00AC               	movwf	sprintf@c
  2093  0162  082C               	movf	sprintf@c,w
  2094  0163  1903               	btfsc	3,2
  2095  0164  2A21               	goto	l1991
  2096                           
  2097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  2098  0165  3025               	movlw	37
  2099  0166  062C               	xorwf	sprintf@c,w
  2100  0167  1903               	btfsc	3,2
  2101  0168  2975               	goto	l1945
  2102                           
  2103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  2104  0169  082C               	movf	sprintf@c,w
  2105  016A  00A3               	movwf	??_sprintf
  2106  016B  082B               	movf	sprintf@sp,w
  2107  016C  0084               	movwf	4
  2108  016D  0823               	movf	??_sprintf,w
  2109  016E  1383               	bcf	3,7	;select IRP bank0
  2110  016F  0080               	movwf	0
  2111  0170  3001               	movlw	1
  2112  0171  00A3               	movwf	??_sprintf
  2113  0172  0823               	movf	??_sprintf,w
  2114  0173  07AB               	addwf	sprintf@sp,f
  2115                           
  2116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  2117  0174  2955               	goto	l1989
  2118  0175                     l1945:	
  2119                           
  2120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  2121  0175  01A7               	clrf	sprintf@flag
  2122                           
  2123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  2124  0176  3001               	movlw	1
  2125  0177  07A0               	addwf	sprintf@f,f
  2126  0178  30FF               	movlw	-1
  2127  0179  0720               	addwf	sprintf@f,w
  2128  017A  0084               	movwf	4
  2129  017B  120A  158A  200A  120A  118A  	fcall	stringdir
  2130  0180  00AC               	movwf	sprintf@c
  2131  0181  00A3               	movwf	??_sprintf
  2132  0182  01A4               	clrf	??_sprintf+1
  2133                           
  2134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2135                           ; Switch size 1, requested type "simple"
  2136                           ; Number of cases is 1, Range of values is 0 to 0
  2137                           ; switch strategies available:
  2138                           ; Name         Instructions Cycles
  2139                           ; simple_byte            4     3 (average)
  2140                           ; direct_byte           11     8 (fixed)
  2141                           ; jumptable            260     6 (fixed)
  2142                           ;	Chosen strategy is simple_byte
  2143  0183  0824               	movf	??_sprintf+1,w
  2144  0184  3A00               	xorlw	0	; case 0
  2145  0185  1903               	skipnz
  2146  0186  2988               	goto	l2279
  2147  0187  2955               	goto	l1989
  2148  0188                     l2279:	
  2149                           
  2150                           ; Switch size 1, requested type "simple"
  2151                           ; Number of cases is 3, Range of values is 0 to 105
  2152                           ; switch strategies available:
  2153                           ; Name         Instructions Cycles
  2154                           ; simple_byte           10     6 (average)
  2155                           ; jumptable            260     6 (fixed)
  2156                           ;	Chosen strategy is simple_byte
  2157  0188  0823               	movf	??_sprintf,w
  2158  0189  3A00               	xorlw	0	; case 0
  2159  018A  1903               	skipnz
  2160  018B  2A21               	goto	l1991
  2161  018C  3A64               	xorlw	100	; case 100
  2162  018D  1903               	skipnz
  2163  018E  2993               	goto	l1951
  2164  018F  3A0D               	xorlw	13	; case 105
  2165  0190  1903               	skipnz
  2166  0191  2993               	goto	l1951
  2167  0192  2955               	goto	l1989
  2168  0193                     l1951:	
  2169                           
  2170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2171  0193  0826               	movf	sprintf@ap,w
  2172  0194  0084               	movwf	4
  2173  0195  1383               	bcf	3,7	;select IRP bank0
  2174  0196  0800               	movf	0,w
  2175  0197  00A9               	movwf	sprintf@val
  2176  0198  0A84               	incf	4,f
  2177  0199  0800               	movf	0,w
  2178  019A  00AA               	movwf	sprintf@val+1
  2179  019B  3002               	movlw	2
  2180  019C  00A3               	movwf	??_sprintf
  2181  019D  0823               	movf	??_sprintf,w
  2182  019E  07A6               	addwf	sprintf@ap,f
  2183                           
  2184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  2185  019F  1FAA               	btfss	sprintf@val+1,7
  2186  01A0  29AA               	goto	l1961
  2187                           
  2188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  2189  01A1  3003               	movlw	3
  2190  01A2  00A3               	movwf	??_sprintf
  2191  01A3  0823               	movf	??_sprintf,w
  2192  01A4  04A7               	iorwf	sprintf@flag,f
  2193                           
  2194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  2195  01A5  09A9               	comf	sprintf@val,f
  2196  01A6  09AA               	comf	sprintf@val+1,f
  2197  01A7  0AA9               	incf	sprintf@val,f
  2198  01A8  1903               	skipnz
  2199  01A9  0AAA               	incf	sprintf@val+1,f
  2200  01AA                     l1961:	
  2201                           
  2202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2203  01AA  01AC               	clrf	sprintf@c
  2204  01AB  0AAC               	incf	sprintf@c,f
  2205  01AC                     l1967:	
  2206                           
  2207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2208  01AC  082C               	movf	sprintf@c,w
  2209  01AD  00A3               	movwf	??_sprintf
  2210  01AE  0723               	addwf	??_sprintf,w
  2211  01AF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2212  01B0  0084               	movwf	4
  2213  01B1  120A  158A  200A  120A  118A  	fcall	stringdir
  2214  01B6  00A4               	movwf	??_sprintf+1
  2215  01B7  120A  158A  200A  120A  118A  	fcall	stringdir
  2216  01BC  00A5               	movwf	??_sprintf+2
  2217  01BD  0825               	movf	??_sprintf+2,w
  2218  01BE  022A               	subwf	sprintf@val+1,w
  2219  01BF  1D03               	skipz
  2220  01C0  29C3               	goto	u1245
  2221  01C1  0824               	movf	??_sprintf+1,w
  2222  01C2  0229               	subwf	sprintf@val,w
  2223  01C3                     u1245:	
  2224  01C3  1C03               	btfss	3,0
  2225  01C4  29CD               	goto	l1973
  2226  01C5  3001               	movlw	1
  2227  01C6  00A3               	movwf	??_sprintf
  2228  01C7  0823               	movf	??_sprintf,w
  2229  01C8  07AC               	addwf	sprintf@c,f
  2230  01C9  3005               	movlw	5
  2231  01CA  062C               	xorwf	sprintf@c,w
  2232  01CB  1D03               	btfss	3,2
  2233  01CC  29AC               	goto	l1967
  2234  01CD                     l1973:	
  2235                           
  2236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2237  01CD  0827               	movf	sprintf@flag,w
  2238  01CE  3903               	andlw	3
  2239  01CF  1903               	btfsc	3,2
  2240  01D0  29DC               	goto	l1979
  2241                           
  2242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2243  01D1  302D               	movlw	45
  2244  01D2  00A3               	movwf	??_sprintf
  2245  01D3  082B               	movf	sprintf@sp,w
  2246  01D4  0084               	movwf	4
  2247  01D5  0823               	movf	??_sprintf,w
  2248  01D6  1383               	bcf	3,7	;select IRP bank0
  2249  01D7  0080               	movwf	0
  2250  01D8  3001               	movlw	1
  2251  01D9  00A3               	movwf	??_sprintf
  2252  01DA  0823               	movf	??_sprintf,w
  2253  01DB  07AB               	addwf	sprintf@sp,f
  2254  01DC                     l1979:	
  2255                           
  2256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  2257  01DC  082C               	movf	sprintf@c,w
  2258  01DD  00A3               	movwf	??_sprintf
  2259  01DE  0823               	movf	??_sprintf,w
  2260  01DF  00A8               	movwf	sprintf@prec
  2261  01E0                     l1987:	
  2262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2263                           
  2264                           
  2265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2266  01E0  30FF               	movlw	255
  2267  01E1  00A3               	movwf	??_sprintf
  2268  01E2  0823               	movf	??_sprintf,w
  2269  01E3  07A8               	addwf	sprintf@prec,f
  2270  01E4  0A28               	incf	sprintf@prec,w
  2271  01E5  1903               	btfsc	3,2
  2272  01E6  2955               	goto	l1989
  2273                           
  2274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  2275  01E7  300A               	movlw	10
  2276  01E8  00F8               	movwf	___lwmod@divisor
  2277  01E9  3000               	movlw	0
  2278  01EA  00F9               	movwf	___lwmod@divisor+1
  2279  01EB  0828               	movf	sprintf@prec,w
  2280  01EC  00A3               	movwf	??_sprintf
  2281  01ED  0723               	addwf	??_sprintf,w
  2282  01EE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2283  01EF  0084               	movwf	4
  2284  01F0  120A  158A  200A  120A  118A  	fcall	stringdir
  2285  01F5  00F0               	movwf	___lwdiv@divisor
  2286  01F6  120A  158A  200A  120A  118A  	fcall	stringdir
  2287  01FB  00F1               	movwf	___lwdiv@divisor+1
  2288  01FC  082A               	movf	sprintf@val+1,w
  2289  01FD  00F3               	movwf	___lwdiv@dividend+1
  2290  01FE  0829               	movf	sprintf@val,w
  2291  01FF  00F2               	movwf	___lwdiv@dividend
  2292  0200  120A  158A  26E2  120A  118A  	fcall	___lwdiv
  2293  0205  0871               	movf	?___lwdiv+1,w
  2294  0206  00FB               	movwf	___lwmod@dividend+1
  2295  0207  0870               	movf	?___lwdiv,w
  2296  0208  00FA               	movwf	___lwmod@dividend
  2297  0209  120A  158A  26B0  120A  118A  	fcall	___lwmod
  2298  020E  0878               	movf	?___lwmod,w
  2299  020F  3E30               	addlw	48
  2300  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0212  00A4               	movwf	??_sprintf+1
  2303  0213  0824               	movf	??_sprintf+1,w
  2304  0214  00AC               	movwf	sprintf@c
  2305                           
  2306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  2307  0215  082C               	movf	sprintf@c,w
  2308  0216  00A3               	movwf	??_sprintf
  2309  0217  082B               	movf	sprintf@sp,w
  2310  0218  0084               	movwf	4
  2311  0219  0823               	movf	??_sprintf,w
  2312  021A  1383               	bcf	3,7	;select IRP bank0
  2313  021B  0080               	movwf	0
  2314  021C  3001               	movlw	1
  2315  021D  00A3               	movwf	??_sprintf
  2316  021E  0823               	movf	??_sprintf,w
  2317  021F  07AB               	addwf	sprintf@sp,f
  2318  0220  29E0               	goto	l1987
  2319  0221                     l1991:	
  2320                           
  2321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2322  0221  082B               	movf	sprintf@sp,w
  2323  0222  0084               	movwf	4
  2324  0223  1383               	bcf	3,7	;select IRP bank0
  2325  0224  0180               	clrf	0
  2326  0225  0008               	return
  2327  0226                     __end_of_sprintf:	
  2328                           
  2329                           	psect	text3
  2330  0EB0                     __ptext3:	
  2331 ;; *************** function ___lwmod *****************
  2332 ;; Defined at:
  2333 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  divisor         2    8[COMMON] unsigned int 
  2336 ;;  dividend        2   10[COMMON] unsigned int 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  counter         1   13[COMMON] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  2    8[COMMON] unsigned int 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         4       0       0       0       0
  2349 ;;      Locals:         1       0       0       0       0
  2350 ;;      Temps:          1       0       0       0       0
  2351 ;;      Totals:         6       0       0       0       0
  2352 ;;Total ram usage:        6 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_sprintf
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function ___lwmod
  2363  0EB0                     ___lwmod:	
  2364                           
  2365                           ;incstack = 0
  2366                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2367  0EB0  0878               	movf	___lwmod@divisor,w
  2368  0EB1  0479               	iorwf	___lwmod@divisor+1,w
  2369  0EB2  1903               	btfsc	3,2
  2370  0EB3  2EDD               	goto	l1699
  2371  0EB4  01FD               	clrf	___lwmod@counter
  2372  0EB5  0AFD               	incf	___lwmod@counter,f
  2373  0EB6                     l1689:	
  2374  0EB6  1BF9               	btfsc	___lwmod@divisor+1,7
  2375  0EB7  2EC4               	goto	l1691
  2376  0EB8  3001               	movlw	1
  2377  0EB9                     u1095:	
  2378  0EB9  1003               	clrc
  2379  0EBA  0DF8               	rlf	___lwmod@divisor,f
  2380  0EBB  0DF9               	rlf	___lwmod@divisor+1,f
  2381  0EBC  3EFF               	addlw	-1
  2382  0EBD  1D03               	skipz
  2383  0EBE  2EB9               	goto	u1095
  2384  0EBF  3001               	movlw	1
  2385  0EC0  00FC               	movwf	??___lwmod
  2386  0EC1  087C               	movf	??___lwmod,w
  2387  0EC2  07FD               	addwf	___lwmod@counter,f
  2388  0EC3  2EB6               	goto	l1689
  2389  0EC4                     l1691:	
  2390  0EC4  0879               	movf	___lwmod@divisor+1,w
  2391  0EC5  027B               	subwf	___lwmod@dividend+1,w
  2392  0EC6  1D03               	skipz
  2393  0EC7  2ECA               	goto	u1115
  2394  0EC8  0878               	movf	___lwmod@divisor,w
  2395  0EC9  027A               	subwf	___lwmod@dividend,w
  2396  0ECA                     u1115:	
  2397  0ECA  1C03               	skipc
  2398  0ECB  2ED2               	goto	l1695
  2399  0ECC  0878               	movf	___lwmod@divisor,w
  2400  0ECD  02FA               	subwf	___lwmod@dividend,f
  2401  0ECE  0879               	movf	___lwmod@divisor+1,w
  2402  0ECF  1C03               	skipc
  2403  0ED0  03FB               	decf	___lwmod@dividend+1,f
  2404  0ED1  02FB               	subwf	___lwmod@dividend+1,f
  2405  0ED2                     l1695:	
  2406  0ED2  3001               	movlw	1
  2407  0ED3                     u1125:	
  2408  0ED3  1003               	clrc
  2409  0ED4  0CF9               	rrf	___lwmod@divisor+1,f
  2410  0ED5  0CF8               	rrf	___lwmod@divisor,f
  2411  0ED6  3EFF               	addlw	-1
  2412  0ED7  1D03               	skipz
  2413  0ED8  2ED3               	goto	u1125
  2414  0ED9  3001               	movlw	1
  2415  0EDA  02FD               	subwf	___lwmod@counter,f
  2416  0EDB  1D03               	btfss	3,2
  2417  0EDC  2EC4               	goto	l1691
  2418  0EDD                     l1699:	
  2419  0EDD  087B               	movf	___lwmod@dividend+1,w
  2420  0EDE  00F9               	movwf	?___lwmod+1
  2421  0EDF  087A               	movf	___lwmod@dividend,w
  2422  0EE0  00F8               	movwf	?___lwmod
  2423  0EE1  0008               	return
  2424  0EE2                     __end_of___lwmod:	
  2425                           
  2426                           	psect	text4
  2427  0EE2                     __ptext4:	
  2428 ;; *************** function ___lwdiv *****************
  2429 ;; Defined at:
  2430 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  divisor         2    0[COMMON] unsigned int 
  2433 ;;  dividend        2    2[COMMON] unsigned int 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  quotient        2    5[COMMON] unsigned int 
  2436 ;;  counter         1    7[COMMON] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  2    0[COMMON] unsigned int 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2446 ;;      Params:         4       0       0       0       0
  2447 ;;      Locals:         3       0       0       0       0
  2448 ;;      Temps:          1       0       0       0       0
  2449 ;;      Totals:         8       0       0       0       0
  2450 ;;Total ram usage:        8 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_sprintf
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           
  2460                           ;psect for function ___lwdiv
  2461  0EE2                     ___lwdiv:	
  2462                           
  2463                           ;incstack = 0
  2464                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2465  0EE2  01F5               	clrf	___lwdiv@quotient
  2466  0EE3  01F6               	clrf	___lwdiv@quotient+1
  2467  0EE4  0870               	movf	___lwdiv@divisor,w
  2468  0EE5  0471               	iorwf	___lwdiv@divisor+1,w
  2469  0EE6  1903               	btfsc	3,2
  2470  0EE7  2F19               	goto	l1677
  2471  0EE8  01F7               	clrf	___lwdiv@counter
  2472  0EE9  0AF7               	incf	___lwdiv@counter,f
  2473  0EEA                     l1665:	
  2474  0EEA  1BF1               	btfsc	___lwdiv@divisor+1,7
  2475  0EEB  2EF8               	goto	l1667
  2476  0EEC  3001               	movlw	1
  2477  0EED                     u1025:	
  2478  0EED  1003               	clrc
  2479  0EEE  0DF0               	rlf	___lwdiv@divisor,f
  2480  0EEF  0DF1               	rlf	___lwdiv@divisor+1,f
  2481  0EF0  3EFF               	addlw	-1
  2482  0EF1  1D03               	skipz
  2483  0EF2  2EED               	goto	u1025
  2484  0EF3  3001               	movlw	1
  2485  0EF4  00F4               	movwf	??___lwdiv
  2486  0EF5  0874               	movf	??___lwdiv,w
  2487  0EF6  07F7               	addwf	___lwdiv@counter,f
  2488  0EF7  2EEA               	goto	l1665
  2489  0EF8                     l1667:	
  2490  0EF8  3001               	movlw	1
  2491  0EF9                     u1045:	
  2492  0EF9  1003               	clrc
  2493  0EFA  0DF5               	rlf	___lwdiv@quotient,f
  2494  0EFB  0DF6               	rlf	___lwdiv@quotient+1,f
  2495  0EFC  3EFF               	addlw	-1
  2496  0EFD  1D03               	skipz
  2497  0EFE  2EF9               	goto	u1045
  2498  0EFF  0871               	movf	___lwdiv@divisor+1,w
  2499  0F00  0273               	subwf	___lwdiv@dividend+1,w
  2500  0F01  1D03               	skipz
  2501  0F02  2F05               	goto	u1055
  2502  0F03  0870               	movf	___lwdiv@divisor,w
  2503  0F04  0272               	subwf	___lwdiv@dividend,w
  2504  0F05                     u1055:	
  2505  0F05  1C03               	skipc
  2506  0F06  2F0E               	goto	l1673
  2507  0F07  0870               	movf	___lwdiv@divisor,w
  2508  0F08  02F2               	subwf	___lwdiv@dividend,f
  2509  0F09  0871               	movf	___lwdiv@divisor+1,w
  2510  0F0A  1C03               	skipc
  2511  0F0B  03F3               	decf	___lwdiv@dividend+1,f
  2512  0F0C  02F3               	subwf	___lwdiv@dividend+1,f
  2513  0F0D  1475               	bsf	___lwdiv@quotient,0
  2514  0F0E                     l1673:	
  2515  0F0E  3001               	movlw	1
  2516  0F0F                     u1065:	
  2517  0F0F  1003               	clrc
  2518  0F10  0CF1               	rrf	___lwdiv@divisor+1,f
  2519  0F11  0CF0               	rrf	___lwdiv@divisor,f
  2520  0F12  3EFF               	addlw	-1
  2521  0F13  1D03               	skipz
  2522  0F14  2F0F               	goto	u1065
  2523  0F15  3001               	movlw	1
  2524  0F16  02F7               	subwf	___lwdiv@counter,f
  2525  0F17  1D03               	btfss	3,2
  2526  0F18  2EF8               	goto	l1667
  2527  0F19                     l1677:	
  2528  0F19  0876               	movf	___lwdiv@quotient+1,w
  2529  0F1A  00F1               	movwf	?___lwdiv+1
  2530  0F1B  0875               	movf	___lwdiv@quotient,w
  2531  0F1C  00F0               	movwf	?___lwdiv
  2532  0F1D  0008               	return
  2533  0F1E                     __end_of___lwdiv:	
  2534                           
  2535                           	psect	text5
  2536  00A3                     __ptext5:	
  2537 ;; *************** function _Wrongsound *****************
  2538 ;; Defined at:
  2539 ;;		line 110 in file "./Buz_Lock_Led.h"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2553 ;;      Params:         0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0
  2555 ;;      Temps:          3       0       0       0       0
  2556 ;;      Totals:         3       0       0       0       0
  2557 ;;Total ram usage:        3 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _Wrongsound
  2568  00A3                     _Wrongsound:	
  2569                           
  2570                           ;./Buz_Lock_Led.h: 112:     PORTCbits.RC3=1;
  2571                           
  2572                           ;incstack = 0
  2573                           ; Regs used in _Wrongsound: [wreg]
  2574  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  2575  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  2576  00A5  1587               	bsf	7,3	;volatile
  2577                           
  2578                           ;./Buz_Lock_Led.h: 113:     PORTCbits.RC5=0;
  2579  00A6  1287               	bcf	7,5	;volatile
  2580                           
  2581                           ;./Buz_Lock_Led.h: 114:     _delay((unsigned long)((250)*(16000000/4000.0)));
  2582  00A7  3006               	movlw	6
  2583  00A8  00F2               	movwf	??_Wrongsound+2
  2584  00A9  3013               	movlw	19
  2585  00AA  00F1               	movwf	??_Wrongsound+1
  2586  00AB  30AD               	movlw	173
  2587  00AC  00F0               	movwf	??_Wrongsound
  2588  00AD                     u1627:	
  2589  00AD  0BF0               	decfsz	??_Wrongsound,f
  2590  00AE  28AD               	goto	u1627
  2591  00AF  0BF1               	decfsz	??_Wrongsound+1,f
  2592  00B0  28AD               	goto	u1627
  2593  00B1  0BF2               	decfsz	??_Wrongsound+2,f
  2594  00B2  28AD               	goto	u1627
  2595  00B3  28B4               	nop2
  2596                           
  2597                           ;./Buz_Lock_Led.h: 115:     PORTCbits.RC3=0;
  2598  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  2599  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  2600  00B6  1187               	bcf	7,3	;volatile
  2601                           
  2602                           ;./Buz_Lock_Led.h: 116:     PORTCbits.RC5=1;
  2603  00B7  1687               	bsf	7,5	;volatile
  2604                           
  2605                           ;./Buz_Lock_Led.h: 117:     _delay((unsigned long)((150)*(16000000/4000.0)));
  2606  00B8  3004               	movlw	4
  2607  00B9  00F2               	movwf	??_Wrongsound+2
  2608  00BA  300C               	movlw	12
  2609  00BB  00F1               	movwf	??_Wrongsound+1
  2610  00BC  3033               	movlw	51
  2611  00BD  00F0               	movwf	??_Wrongsound
  2612  00BE                     u1637:	
  2613  00BE  0BF0               	decfsz	??_Wrongsound,f
  2614  00BF  28BE               	goto	u1637
  2615  00C0  0BF1               	decfsz	??_Wrongsound+1,f
  2616  00C1  28BE               	goto	u1637
  2617  00C2  0BF2               	decfsz	??_Wrongsound+2,f
  2618  00C3  28BE               	goto	u1637
  2619  00C4  28C5               	nop2
  2620                           
  2621                           ;./Buz_Lock_Led.h: 119:     PORTCbits.RC3=1;
  2622  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  2623  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  2624  00C7  1587               	bsf	7,3	;volatile
  2625                           
  2626                           ;./Buz_Lock_Led.h: 120:     PORTCbits.RC5=0;
  2627  00C8  1287               	bcf	7,5	;volatile
  2628                           
  2629                           ;./Buz_Lock_Led.h: 121:     _delay((unsigned long)((250)*(16000000/4000.0)));
  2630  00C9  3006               	movlw	6
  2631  00CA  00F2               	movwf	??_Wrongsound+2
  2632  00CB  3013               	movlw	19
  2633  00CC  00F1               	movwf	??_Wrongsound+1
  2634  00CD  30AD               	movlw	173
  2635  00CE  00F0               	movwf	??_Wrongsound
  2636  00CF                     u1647:	
  2637  00CF  0BF0               	decfsz	??_Wrongsound,f
  2638  00D0  28CF               	goto	u1647
  2639  00D1  0BF1               	decfsz	??_Wrongsound+1,f
  2640  00D2  28CF               	goto	u1647
  2641  00D3  0BF2               	decfsz	??_Wrongsound+2,f
  2642  00D4  28CF               	goto	u1647
  2643  00D5  28D6               	nop2
  2644                           
  2645                           ;./Buz_Lock_Led.h: 122:     PORTCbits.RC3=0;
  2646  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  2647  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  2648  00D8  1187               	bcf	7,3	;volatile
  2649                           
  2650                           ;./Buz_Lock_Led.h: 123:     PORTCbits.RC5=1;
  2651  00D9  1687               	bsf	7,5	;volatile
  2652                           
  2653                           ;./Buz_Lock_Led.h: 124:     _delay((unsigned long)((150)*(16000000/4000.0)));
  2654  00DA  3004               	movlw	4
  2655  00DB  00F2               	movwf	??_Wrongsound+2
  2656  00DC  300C               	movlw	12
  2657  00DD  00F1               	movwf	??_Wrongsound+1
  2658  00DE  3033               	movlw	51
  2659  00DF  00F0               	movwf	??_Wrongsound
  2660  00E0                     u1657:	
  2661  00E0  0BF0               	decfsz	??_Wrongsound,f
  2662  00E1  28E0               	goto	u1657
  2663  00E2  0BF1               	decfsz	??_Wrongsound+1,f
  2664  00E3  28E0               	goto	u1657
  2665  00E4  0BF2               	decfsz	??_Wrongsound+2,f
  2666  00E5  28E0               	goto	u1657
  2667  00E6  28E7               	nop2
  2668                           
  2669                           ;./Buz_Lock_Led.h: 126:     PORTCbits.RC3=1;
  2670  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  2671  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  2672  00E9  1587               	bsf	7,3	;volatile
  2673                           
  2674                           ;./Buz_Lock_Led.h: 127:     PORTCbits.RC5=0;
  2675  00EA  1287               	bcf	7,5	;volatile
  2676                           
  2677                           ;./Buz_Lock_Led.h: 128:     _delay((unsigned long)((250)*(16000000/4000.0)));
  2678  00EB  3006               	movlw	6
  2679  00EC  00F2               	movwf	??_Wrongsound+2
  2680  00ED  3013               	movlw	19
  2681  00EE  00F1               	movwf	??_Wrongsound+1
  2682  00EF  30AD               	movlw	173
  2683  00F0  00F0               	movwf	??_Wrongsound
  2684  00F1                     u1667:	
  2685  00F1  0BF0               	decfsz	??_Wrongsound,f
  2686  00F2  28F1               	goto	u1667
  2687  00F3  0BF1               	decfsz	??_Wrongsound+1,f
  2688  00F4  28F1               	goto	u1667
  2689  00F5  0BF2               	decfsz	??_Wrongsound+2,f
  2690  00F6  28F1               	goto	u1667
  2691  00F7  28F8               	nop2
  2692                           
  2693                           ;./Buz_Lock_Led.h: 129:     PORTCbits.RC3=0;
  2694  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  2695  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  2696  00FA  1187               	bcf	7,3	;volatile
  2697                           
  2698                           ;./Buz_Lock_Led.h: 130:     PORTCbits.RC5=1;
  2699  00FB  1687               	bsf	7,5	;volatile
  2700                           
  2701                           ;./Buz_Lock_Led.h: 131:     _delay((unsigned long)((150)*(16000000/4000.0)));
  2702  00FC  3004               	movlw	4
  2703  00FD  00F2               	movwf	??_Wrongsound+2
  2704  00FE  300C               	movlw	12
  2705  00FF  00F1               	movwf	??_Wrongsound+1
  2706  0100  3033               	movlw	51
  2707  0101  00F0               	movwf	??_Wrongsound
  2708  0102                     u1677:	
  2709  0102  0BF0               	decfsz	??_Wrongsound,f
  2710  0103  2902               	goto	u1677
  2711  0104  0BF1               	decfsz	??_Wrongsound+1,f
  2712  0105  2902               	goto	u1677
  2713  0106  0BF2               	decfsz	??_Wrongsound+2,f
  2714  0107  2902               	goto	u1677
  2715  0108  2909               	nop2
  2716                           
  2717                           ;./Buz_Lock_Led.h: 133:     PORTCbits.RC3=1;
  2718  0109  1283               	bcf	3,5	;RP0=0, select bank0
  2719  010A  1303               	bcf	3,6	;RP1=0, select bank0
  2720  010B  1587               	bsf	7,3	;volatile
  2721                           
  2722                           ;./Buz_Lock_Led.h: 134:     PORTCbits.RC5=0;
  2723  010C  1287               	bcf	7,5	;volatile
  2724                           
  2725                           ;./Buz_Lock_Led.h: 135:     _delay((unsigned long)((250)*(16000000/4000.0)));
  2726  010D  3006               	movlw	6
  2727  010E  00F2               	movwf	??_Wrongsound+2
  2728  010F  3013               	movlw	19
  2729  0110  00F1               	movwf	??_Wrongsound+1
  2730  0111  30AD               	movlw	173
  2731  0112  00F0               	movwf	??_Wrongsound
  2732  0113                     u1687:	
  2733  0113  0BF0               	decfsz	??_Wrongsound,f
  2734  0114  2913               	goto	u1687
  2735  0115  0BF1               	decfsz	??_Wrongsound+1,f
  2736  0116  2913               	goto	u1687
  2737  0117  0BF2               	decfsz	??_Wrongsound+2,f
  2738  0118  2913               	goto	u1687
  2739  0119  291A               	nop2
  2740                           
  2741                           ;./Buz_Lock_Led.h: 136:     PORTCbits.RC3=0;
  2742  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2743  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2744  011C  1187               	bcf	7,3	;volatile
  2745                           
  2746                           ;./Buz_Lock_Led.h: 137:     PORTCbits.RC5=1;
  2747  011D  1687               	bsf	7,5	;volatile
  2748                           
  2749                           ;./Buz_Lock_Led.h: 138:     _delay((unsigned long)((150)*(16000000/4000.0)));
  2750  011E  3004               	movlw	4
  2751  011F  00F2               	movwf	??_Wrongsound+2
  2752  0120  300C               	movlw	12
  2753  0121  00F1               	movwf	??_Wrongsound+1
  2754  0122  3033               	movlw	51
  2755  0123  00F0               	movwf	??_Wrongsound
  2756  0124                     u1697:	
  2757  0124  0BF0               	decfsz	??_Wrongsound,f
  2758  0125  2924               	goto	u1697
  2759  0126  0BF1               	decfsz	??_Wrongsound+1,f
  2760  0127  2924               	goto	u1697
  2761  0128  0BF2               	decfsz	??_Wrongsound+2,f
  2762  0129  2924               	goto	u1697
  2763  012A  292B               	nop2
  2764                           
  2765                           ;./Buz_Lock_Led.h: 140:     PORTCbits.RC3=1;
  2766  012B  1283               	bcf	3,5	;RP0=0, select bank0
  2767  012C  1303               	bcf	3,6	;RP1=0, select bank0
  2768  012D  1587               	bsf	7,3	;volatile
  2769                           
  2770                           ;./Buz_Lock_Led.h: 141:     PORTCbits.RC5=0;
  2771  012E  1287               	bcf	7,5	;volatile
  2772                           
  2773                           ;./Buz_Lock_Led.h: 142:     _delay((unsigned long)((250)*(16000000/4000.0)));
  2774  012F  3006               	movlw	6
  2775  0130  00F2               	movwf	??_Wrongsound+2
  2776  0131  3013               	movlw	19
  2777  0132  00F1               	movwf	??_Wrongsound+1
  2778  0133  30AD               	movlw	173
  2779  0134  00F0               	movwf	??_Wrongsound
  2780  0135                     u1707:	
  2781  0135  0BF0               	decfsz	??_Wrongsound,f
  2782  0136  2935               	goto	u1707
  2783  0137  0BF1               	decfsz	??_Wrongsound+1,f
  2784  0138  2935               	goto	u1707
  2785  0139  0BF2               	decfsz	??_Wrongsound+2,f
  2786  013A  2935               	goto	u1707
  2787  013B  293C               	nop2
  2788                           
  2789                           ;./Buz_Lock_Led.h: 143:     PORTCbits.RC3=0;
  2790  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2791  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2792  013E  1187               	bcf	7,3	;volatile
  2793                           
  2794                           ;./Buz_Lock_Led.h: 144:     PORTCbits.RC5=1;
  2795  013F  1687               	bsf	7,5	;volatile
  2796                           
  2797                           ;./Buz_Lock_Led.h: 145:     _delay((unsigned long)((150)*(16000000/4000.0)));
  2798  0140  3004               	movlw	4
  2799  0141  00F2               	movwf	??_Wrongsound+2
  2800  0142  300C               	movlw	12
  2801  0143  00F1               	movwf	??_Wrongsound+1
  2802  0144  3033               	movlw	51
  2803  0145  00F0               	movwf	??_Wrongsound
  2804  0146                     u1717:	
  2805  0146  0BF0               	decfsz	??_Wrongsound,f
  2806  0147  2946               	goto	u1717
  2807  0148  0BF1               	decfsz	??_Wrongsound+1,f
  2808  0149  2946               	goto	u1717
  2809  014A  0BF2               	decfsz	??_Wrongsound+2,f
  2810  014B  2946               	goto	u1717
  2811  014C  294D               	nop2
  2812  014D  0008               	return
  2813  014E                     __end_of_Wrongsound:	
  2814                           
  2815                           	psect	text6
  2816  0E51                     __ptext6:	
  2817 ;; *************** function _WaitSound *****************
  2818 ;; Defined at:
  2819 ;;		line 149 in file "./Buz_Lock_Led.h"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;		None
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;		None
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2833 ;;      Params:         0       0       0       0       0
  2834 ;;      Locals:         0       0       0       0       0
  2835 ;;      Temps:          3       0       0       0       0
  2836 ;;      Totals:         3       0       0       0       0
  2837 ;;Total ram usage:        3 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function _WaitSound
  2848  0E51                     _WaitSound:	
  2849                           
  2850                           ;./Buz_Lock_Led.h: 151:     PORTCbits.RC3=1;
  2851                           
  2852                           ;incstack = 0
  2853                           ; Regs used in _WaitSound: [wreg]
  2854  0E51  1283               	bcf	3,5	;RP0=0, select bank0
  2855  0E52  1303               	bcf	3,6	;RP1=0, select bank0
  2856  0E53  1587               	bsf	7,3	;volatile
  2857                           
  2858                           ;./Buz_Lock_Led.h: 152:     PORTCbits.RC6=0;
  2859  0E54  1307               	bcf	7,6	;volatile
  2860                           
  2861                           ;./Buz_Lock_Led.h: 153:     _delay((unsigned long)((100)*(16000000/4000.0)));
  2862  0E55  3003               	movlw	3
  2863  0E56  00F2               	movwf	??_WaitSound+2
  2864  0E57  3008               	movlw	8
  2865  0E58  00F1               	movwf	??_WaitSound+1
  2866  0E59  3077               	movlw	119
  2867  0E5A  00F0               	movwf	??_WaitSound
  2868  0E5B                     u1727:	
  2869  0E5B  0BF0               	decfsz	??_WaitSound,f
  2870  0E5C  2E5B               	goto	u1727
  2871  0E5D  0BF1               	decfsz	??_WaitSound+1,f
  2872  0E5E  2E5B               	goto	u1727
  2873  0E5F  0BF2               	decfsz	??_WaitSound+2,f
  2874  0E60  2E5B               	goto	u1727
  2875                           
  2876                           ;./Buz_Lock_Led.h: 154:     PORTCbits.RC3=0;
  2877  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0E63  1187               	bcf	7,3	;volatile
  2880                           
  2881                           ;./Buz_Lock_Led.h: 155:     PORTCbits.RC6=1;
  2882  0E64  1707               	bsf	7,6	;volatile
  2883  0E65  0008               	return
  2884  0E66                     __end_of_WaitSound:	
  2885                           
  2886                           	psect	text7
  2887  003D                     __ptext7:	
  2888 ;; *************** function _LockOpining *****************
  2889 ;; Defined at:
  2890 ;;		line 5 in file "./Buz_Lock_Led.h"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2904 ;;      Params:         0       0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0
  2906 ;;      Temps:          3       0       0       0       0
  2907 ;;      Totals:         3       0       0       0       0
  2908 ;;Total ram usage:        3 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_main
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           
  2918                           ;psect for function _LockOpining
  2919  003D                     _LockOpining:	
  2920                           
  2921                           ;./Buz_Lock_Led.h: 7:     PORTCbits.RC2=1;
  2922                           
  2923                           ;incstack = 0
  2924                           ; Regs used in _LockOpining: [wreg]
  2925  003D  1283               	bcf	3,5	;RP0=0, select bank0
  2926  003E  1303               	bcf	3,6	;RP1=0, select bank0
  2927  003F  1507               	bsf	7,2	;volatile
  2928                           
  2929                           ;./Buz_Lock_Led.h: 9:     PORTCbits.RC3=1;
  2930  0040  1587               	bsf	7,3	;volatile
  2931                           
  2932                           ;./Buz_Lock_Led.h: 10:     PORTCbits.RC4=0;
  2933  0041  1207               	bcf	7,4	;volatile
  2934                           
  2935                           ;./Buz_Lock_Led.h: 11:     _delay((unsigned long)((100)*(16000000/4000.0)));
  2936  0042  3003               	movlw	3
  2937  0043  00F2               	movwf	??_LockOpining+2
  2938  0044  3008               	movlw	8
  2939  0045  00F1               	movwf	??_LockOpining+1
  2940  0046  3077               	movlw	119
  2941  0047  00F0               	movwf	??_LockOpining
  2942  0048                     u1737:	
  2943  0048  0BF0               	decfsz	??_LockOpining,f
  2944  0049  2848               	goto	u1737
  2945  004A  0BF1               	decfsz	??_LockOpining+1,f
  2946  004B  2848               	goto	u1737
  2947  004C  0BF2               	decfsz	??_LockOpining+2,f
  2948  004D  2848               	goto	u1737
  2949                           
  2950                           ;./Buz_Lock_Led.h: 12:     PORTCbits.RC3=0;
  2951  004E  1283               	bcf	3,5	;RP0=0, select bank0
  2952  004F  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0050  1187               	bcf	7,3	;volatile
  2954                           
  2955                           ;./Buz_Lock_Led.h: 13:     PORTCbits.RC4=1;
  2956  0051  1607               	bsf	7,4	;volatile
  2957                           
  2958                           ;./Buz_Lock_Led.h: 14:     _delay((unsigned long)((100)*(16000000/4000.0)));
  2959  0052  3003               	movlw	3
  2960  0053  00F2               	movwf	??_LockOpining+2
  2961  0054  3008               	movlw	8
  2962  0055  00F1               	movwf	??_LockOpining+1
  2963  0056  3077               	movlw	119
  2964  0057  00F0               	movwf	??_LockOpining
  2965  0058                     u1747:	
  2966  0058  0BF0               	decfsz	??_LockOpining,f
  2967  0059  2858               	goto	u1747
  2968  005A  0BF1               	decfsz	??_LockOpining+1,f
  2969  005B  2858               	goto	u1747
  2970  005C  0BF2               	decfsz	??_LockOpining+2,f
  2971  005D  2858               	goto	u1747
  2972                           
  2973                           ;./Buz_Lock_Led.h: 16:     PORTCbits.RC3=1;
  2974  005E  1283               	bcf	3,5	;RP0=0, select bank0
  2975  005F  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0060  1587               	bsf	7,3	;volatile
  2977                           
  2978                           ;./Buz_Lock_Led.h: 17:     PORTCbits.RC4=0;
  2979  0061  1207               	bcf	7,4	;volatile
  2980                           
  2981                           ;./Buz_Lock_Led.h: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
  2982  0062  3003               	movlw	3
  2983  0063  00F2               	movwf	??_LockOpining+2
  2984  0064  3008               	movlw	8
  2985  0065  00F1               	movwf	??_LockOpining+1
  2986  0066  3077               	movlw	119
  2987  0067  00F0               	movwf	??_LockOpining
  2988  0068                     u1757:	
  2989  0068  0BF0               	decfsz	??_LockOpining,f
  2990  0069  2868               	goto	u1757
  2991  006A  0BF1               	decfsz	??_LockOpining+1,f
  2992  006B  2868               	goto	u1757
  2993  006C  0BF2               	decfsz	??_LockOpining+2,f
  2994  006D  2868               	goto	u1757
  2995                           
  2996                           ;./Buz_Lock_Led.h: 19:     PORTCbits.RC3=0;
  2997  006E  1283               	bcf	3,5	;RP0=0, select bank0
  2998  006F  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0070  1187               	bcf	7,3	;volatile
  3000                           
  3001                           ;./Buz_Lock_Led.h: 20:     PORTCbits.RC4=1;
  3002  0071  1607               	bsf	7,4	;volatile
  3003                           
  3004                           ;./Buz_Lock_Led.h: 21:     _delay((unsigned long)((100)*(16000000/4000.0)));
  3005  0072  3003               	movlw	3
  3006  0073  00F2               	movwf	??_LockOpining+2
  3007  0074  3008               	movlw	8
  3008  0075  00F1               	movwf	??_LockOpining+1
  3009  0076  3077               	movlw	119
  3010  0077  00F0               	movwf	??_LockOpining
  3011  0078                     u1767:	
  3012  0078  0BF0               	decfsz	??_LockOpining,f
  3013  0079  2878               	goto	u1767
  3014  007A  0BF1               	decfsz	??_LockOpining+1,f
  3015  007B  2878               	goto	u1767
  3016  007C  0BF2               	decfsz	??_LockOpining+2,f
  3017  007D  2878               	goto	u1767
  3018                           
  3019                           ;./Buz_Lock_Led.h: 23:     PORTCbits.RC3=1;
  3020  007E  1283               	bcf	3,5	;RP0=0, select bank0
  3021  007F  1303               	bcf	3,6	;RP1=0, select bank0
  3022  0080  1587               	bsf	7,3	;volatile
  3023                           
  3024                           ;./Buz_Lock_Led.h: 24:     PORTCbits.RC4=0;
  3025  0081  1207               	bcf	7,4	;volatile
  3026                           
  3027                           ;./Buz_Lock_Led.h: 25:     _delay((unsigned long)((100)*(16000000/4000.0)));
  3028  0082  3003               	movlw	3
  3029  0083  00F2               	movwf	??_LockOpining+2
  3030  0084  3008               	movlw	8
  3031  0085  00F1               	movwf	??_LockOpining+1
  3032  0086  3077               	movlw	119
  3033  0087  00F0               	movwf	??_LockOpining
  3034  0088                     u1777:	
  3035  0088  0BF0               	decfsz	??_LockOpining,f
  3036  0089  2888               	goto	u1777
  3037  008A  0BF1               	decfsz	??_LockOpining+1,f
  3038  008B  2888               	goto	u1777
  3039  008C  0BF2               	decfsz	??_LockOpining+2,f
  3040  008D  2888               	goto	u1777
  3041                           
  3042                           ;./Buz_Lock_Led.h: 27:     PORTCbits.RC3=0;
  3043  008E  1283               	bcf	3,5	;RP0=0, select bank0
  3044  008F  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0090  1187               	bcf	7,3	;volatile
  3046                           
  3047                           ;./Buz_Lock_Led.h: 28:     PORTCbits.RC4=1;
  3048  0091  1607               	bsf	7,4	;volatile
  3049                           
  3050                           ;./Buz_Lock_Led.h: 29:     _delay((unsigned long)((4500)*(16000000/4000.0)));
  3051  0092  305C               	movlw	92
  3052  0093  00F2               	movwf	??_LockOpining+2
  3053  0094  3051               	movlw	81
  3054  0095  00F1               	movwf	??_LockOpining+1
  3055  0096  3060               	movlw	96
  3056  0097  00F0               	movwf	??_LockOpining
  3057  0098                     u1787:	
  3058  0098  0BF0               	decfsz	??_LockOpining,f
  3059  0099  2898               	goto	u1787
  3060  009A  0BF1               	decfsz	??_LockOpining+1,f
  3061  009B  2898               	goto	u1787
  3062  009C  0BF2               	decfsz	??_LockOpining+2,f
  3063  009D  2898               	goto	u1787
  3064  009E  0000               	nop
  3065                           
  3066                           ;./Buz_Lock_Led.h: 31:     PORTCbits.RC2=0;
  3067  009F  1283               	bcf	3,5	;RP0=0, select bank0
  3068  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  3069  00A1  1107               	bcf	7,2	;volatile
  3070  00A2  0008               	return
  3071  00A3                     __end_of_LockOpining:	
  3072                           
  3073                           	psect	text8
  3074  0F1E                     __ptext8:	
  3075 ;; *************** function _Lcd_Write_String *****************
  3076 ;; Defined at:
  3077 ;;		line 98 in file "./Lcd_KeyPad.h"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  a               2    5[COMMON] PTR unsigned char 
  3080 ;;		 -> STR_13(10), STR_12(16), main@Nes1(12), STR_10(16), 
  3081 ;;		 -> STR_9(10), STR_8(11), STR_7(15), STR_6(15), 
  3082 ;;		 -> STR_5(12), STR_4(17), main@Nes(12), STR_2(14), 
  3083 ;;		 -> STR_1(16), 
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;  i               2   10[COMMON] int 
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3095 ;;      Params:         2       0       0       0       0
  3096 ;;      Locals:         2       0       0       0       0
  3097 ;;      Temps:          3       0       0       0       0
  3098 ;;      Totals:         7       0       0       0       0
  3099 ;;Total ram usage:        7 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; Hardware stack levels required when called:    2
  3102 ;; This function calls:
  3103 ;;		_Lcd_Write_Char
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           
  3110                           ;psect for function _Lcd_Write_String
  3111  0F1E                     _Lcd_Write_String:	
  3112                           
  3113                           ;./Lcd_KeyPad.h: 98: void Lcd_Write_String(char *a);./Lcd_KeyPad.h: 99: {;./Lcd_KeyPad.h
      +                          : 100:  int i;;./Lcd_KeyPad.h: 101:  for(i=0;a[i]!='\0';i++)
  3114                           
  3115                           ;incstack = 0
  3116                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3117  0F1E  01FA               	clrf	Lcd_Write_String@i
  3118  0F1F  01FB               	clrf	Lcd_Write_String@i+1
  3119  0F20                     l1741:	
  3120  0F20  087A               	movf	Lcd_Write_String@i,w
  3121  0F21  0775               	addwf	Lcd_Write_String@a,w
  3122  0F22  00F8               	movwf	??_Lcd_Write_String+1
  3123  0F23  0876               	movf	Lcd_Write_String@a+1,w
  3124  0F24  00F7               	movwf	??_Lcd_Write_String
  3125  0F25  1803               	skipnc
  3126  0F26  0AF7               	incf	??_Lcd_Write_String,f
  3127  0F27  1BFA               	btfsc	Lcd_Write_String@i,7
  3128  0F28  03F7               	decf	??_Lcd_Write_String,f
  3129  0F29  0877               	movf	??_Lcd_Write_String,w
  3130  0F2A  00F9               	movwf	??_Lcd_Write_String+2
  3131  0F2B  0879               	movf	??_Lcd_Write_String+2,w
  3132  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  3133  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  3134  0F2E  00FF               	movwf	127
  3135  0F2F  0878               	movf	??_Lcd_Write_String+1,w
  3136  0F30  0084               	movwf	4
  3137  0F31  120A  158A  2000  120A  158A  	fcall	stringtab
  3138  0F36  3A00               	xorlw	0
  3139  0F37  1903               	btfsc	3,2
  3140  0F38  0008               	return
  3141                           
  3142                           ;./Lcd_KeyPad.h: 102:     Lcd_Write_Char(a[i]);
  3143  0F39  087A               	movf	Lcd_Write_String@i,w
  3144  0F3A  0775               	addwf	Lcd_Write_String@a,w
  3145  0F3B  00F8               	movwf	??_Lcd_Write_String+1
  3146  0F3C  0876               	movf	Lcd_Write_String@a+1,w
  3147  0F3D  00F7               	movwf	??_Lcd_Write_String
  3148  0F3E  1803               	skipnc
  3149  0F3F  0AF7               	incf	??_Lcd_Write_String,f
  3150  0F40  1BFA               	btfsc	Lcd_Write_String@i,7
  3151  0F41  03F7               	decf	??_Lcd_Write_String,f
  3152  0F42  0877               	movf	??_Lcd_Write_String,w
  3153  0F43  00F9               	movwf	??_Lcd_Write_String+2
  3154  0F44  0879               	movf	??_Lcd_Write_String+2,w
  3155  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3156  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3157  0F47  00FF               	movwf	127
  3158  0F48  0878               	movf	??_Lcd_Write_String+1,w
  3159  0F49  0084               	movwf	4
  3160  0F4A  120A  158A  2000  120A  158A  	fcall	stringtab
  3161  0F4F  120A  118A  2006  120A  158A  	fcall	_Lcd_Write_Char
  3162  0F54  3001               	movlw	1
  3163  0F55  07FA               	addwf	Lcd_Write_String@i,f
  3164  0F56  1803               	skipnc
  3165  0F57  0AFB               	incf	Lcd_Write_String@i+1,f
  3166  0F58  3000               	movlw	0
  3167  0F59  07FB               	addwf	Lcd_Write_String@i+1,f
  3168  0F5A  2F20               	goto	l1741
  3169  0F5B                     __end_of_Lcd_Write_String:	
  3170                           
  3171                           	psect	text9
  3172  0006                     __ptext9:	
  3173 ;; *************** function _Lcd_Write_Char *****************
  3174 ;; Defined at:
  3175 ;;		line 82 in file "./Lcd_KeyPad.h"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  a               1    wreg     unsigned char 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  a               1    4[COMMON] unsigned char 
  3180 ;;  y               1    3[COMMON] unsigned char 
  3181 ;;  temp            1    2[COMMON] unsigned char 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0, pclath, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3191 ;;      Params:         0       0       0       0       0
  3192 ;;      Locals:         3       0       0       0       0
  3193 ;;      Temps:          1       0       0       0       0
  3194 ;;      Totals:         4       0       0       0       0
  3195 ;;Total ram usage:        4 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    1
  3198 ;; This function calls:
  3199 ;;		_Lcd_Port
  3200 ;; This function is called by:
  3201 ;;		_Lcd_Write_String
  3202 ;;		_main
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           
  3207                           ;psect for function _Lcd_Write_Char
  3208  0006                     _Lcd_Write_Char:	
  3209                           
  3210                           ;incstack = 0
  3211                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3212                           ;Lcd_Write_Char@a stored from wreg
  3213  0006  00F4               	movwf	Lcd_Write_Char@a
  3214                           
  3215                           ;./Lcd_KeyPad.h: 82: void Lcd_Write_Char(char a);./Lcd_KeyPad.h: 83: {;./Lcd_KeyPad.h: 8
      +                          4:    char temp,y;;./Lcd_KeyPad.h: 85:    temp = a&0x0F;
  3216  0007  0874               	movf	Lcd_Write_Char@a,w
  3217  0008  390F               	andlw	15
  3218  0009  00F1               	movwf	??_Lcd_Write_Char
  3219  000A  0871               	movf	??_Lcd_Write_Char,w
  3220  000B  00F2               	movwf	Lcd_Write_Char@temp
  3221                           
  3222                           ;./Lcd_KeyPad.h: 86:    y = a&0xF0;
  3223  000C  0874               	movf	Lcd_Write_Char@a,w
  3224  000D  39F0               	andlw	240
  3225  000E  00F1               	movwf	??_Lcd_Write_Char
  3226  000F  0871               	movf	??_Lcd_Write_Char,w
  3227  0010  00F3               	movwf	Lcd_Write_Char@y
  3228                           
  3229                           ;./Lcd_KeyPad.h: 87:    RD2 = 1;
  3230  0011  1283               	bcf	3,5	;RP0=0, select bank0
  3231  0012  1303               	bcf	3,6	;RP1=0, select bank0
  3232  0013  1508               	bsf	8,2	;volatile
  3233                           
  3234                           ;./Lcd_KeyPad.h: 88:    Lcd_Port(y>>4);
  3235  0014  0873               	movf	Lcd_Write_Char@y,w
  3236  0015  00F1               	movwf	??_Lcd_Write_Char
  3237  0016  3004               	movlw	4
  3238  0017                     u765:	
  3239  0017  1003               	clrc
  3240  0018  0CF1               	rrf	??_Lcd_Write_Char,f
  3241  0019  3EFF               	addlw	-1
  3242  001A  1D03               	skipz
  3243  001B  2817               	goto	u765
  3244  001C  0871               	movf	??_Lcd_Write_Char,w
  3245  001D  120A  158A  267C  120A  118A  	fcall	_Lcd_Port
  3246                           
  3247                           ;./Lcd_KeyPad.h: 89:    RD3 = 1;
  3248  0022  1283               	bcf	3,5	;RP0=0, select bank0
  3249  0023  1303               	bcf	3,6	;RP1=0, select bank0
  3250  0024  1588               	bsf	8,3	;volatile
  3251                           
  3252                           ;./Lcd_KeyPad.h: 90:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  3253  0025  3035               	movlw	53
  3254  0026  00F1               	movwf	??_Lcd_Write_Char
  3255  0027                     u1797:	
  3256  0027  0BF1               	decfsz	??_Lcd_Write_Char,f
  3257  0028  2827               	goto	u1797
  3258                           
  3259                           ;./Lcd_KeyPad.h: 91:    RD3 = 0;
  3260  0029  1283               	bcf	3,5	;RP0=0, select bank0
  3261  002A  1303               	bcf	3,6	;RP1=0, select bank0
  3262  002B  1188               	bcf	8,3	;volatile
  3263                           
  3264                           ;./Lcd_KeyPad.h: 92:    Lcd_Port(temp);
  3265  002C  0872               	movf	Lcd_Write_Char@temp,w
  3266  002D  120A  158A  267C  120A  118A  	fcall	_Lcd_Port
  3267                           
  3268                           ;./Lcd_KeyPad.h: 93:    RD3 = 1;
  3269  0032  1283               	bcf	3,5	;RP0=0, select bank0
  3270  0033  1303               	bcf	3,6	;RP1=0, select bank0
  3271  0034  1588               	bsf	8,3	;volatile
  3272                           
  3273                           ;./Lcd_KeyPad.h: 94:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  3274  0035  3035               	movlw	53
  3275  0036  00F1               	movwf	??_Lcd_Write_Char
  3276  0037                     u1807:	
  3277  0037  0BF1               	decfsz	??_Lcd_Write_Char,f
  3278  0038  2837               	goto	u1807
  3279                           
  3280                           ;./Lcd_KeyPad.h: 95:    RD3 = 0;
  3281  0039  1283               	bcf	3,5	;RP0=0, select bank0
  3282  003A  1303               	bcf	3,6	;RP1=0, select bank0
  3283  003B  1188               	bcf	8,3	;volatile
  3284  003C  0008               	return
  3285  003D                     __end_of_Lcd_Write_Char:	
  3286                           
  3287                           	psect	text10
  3288  0F5B                     __ptext10:	
  3289 ;; *************** function _Lcd_Set_Cursor *****************
  3290 ;; Defined at:
  3291 ;;		line 42 in file "./Lcd_KeyPad.h"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  a               1    wreg     unsigned char 
  3294 ;;  b               1    4[COMMON] unsigned char 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  a               1    7[COMMON] unsigned char 
  3297 ;;  temp            1   10[COMMON] unsigned char 
  3298 ;;  y               1    9[COMMON] unsigned char 
  3299 ;;  z               1    8[COMMON] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0, pclath, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3309 ;;      Params:         1       0       0       0       0
  3310 ;;      Locals:         4       0       0       0       0
  3311 ;;      Temps:          2       0       0       0       0
  3312 ;;      Totals:         7       0       0       0       0
  3313 ;;Total ram usage:        7 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    2
  3316 ;; This function calls:
  3317 ;;		_Lcd_Cmd
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           
  3324                           ;psect for function _Lcd_Set_Cursor
  3325  0F5B                     _Lcd_Set_Cursor:	
  3326                           
  3327                           ;incstack = 0
  3328                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3329                           ;Lcd_Set_Cursor@a stored from wreg
  3330  0F5B  00F7               	movwf	Lcd_Set_Cursor@a
  3331                           
  3332                           ;./Lcd_KeyPad.h: 42: void Lcd_Set_Cursor(char a, char b);./Lcd_KeyPad.h: 43: {;./Lcd_Key
      +                          Pad.h: 44:  char temp,z,y;;./Lcd_KeyPad.h: 45:  if(a == 1)
  3333  0F5C  0377               	decf	Lcd_Set_Cursor@a,w
  3334  0F5D  1D03               	btfss	3,2
  3335  0F5E  2F80               	goto	l1715
  3336                           
  3337                           ;./Lcd_KeyPad.h: 46:  {;./Lcd_KeyPad.h: 47:    temp = 0x80 + b - 1;
  3338  0F5F  0874               	movf	Lcd_Set_Cursor@b,w
  3339  0F60  3E7F               	addlw	127
  3340  0F61  00F5               	movwf	??_Lcd_Set_Cursor
  3341  0F62  0875               	movf	??_Lcd_Set_Cursor,w
  3342  0F63  00FA               	movwf	Lcd_Set_Cursor@temp
  3343                           
  3344                           ;./Lcd_KeyPad.h: 48:   z = temp>>4;
  3345  0F64  087A               	movf	Lcd_Set_Cursor@temp,w
  3346  0F65  00F5               	movwf	??_Lcd_Set_Cursor
  3347  0F66  3004               	movlw	4
  3348  0F67                     u1155:	
  3349  0F67  1003               	clrc
  3350  0F68  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3351  0F69  3EFF               	addlw	-1
  3352  0F6A  1D03               	skipz
  3353  0F6B  2F67               	goto	u1155
  3354  0F6C  0875               	movf	??_Lcd_Set_Cursor,w
  3355  0F6D  00F6               	movwf	??_Lcd_Set_Cursor+1
  3356  0F6E  0876               	movf	??_Lcd_Set_Cursor+1,w
  3357  0F6F  00F8               	movwf	Lcd_Set_Cursor@z
  3358                           
  3359                           ;./Lcd_KeyPad.h: 49:   y = temp & 0x0F;
  3360  0F70  087A               	movf	Lcd_Set_Cursor@temp,w
  3361  0F71  390F               	andlw	15
  3362  0F72  00F5               	movwf	??_Lcd_Set_Cursor
  3363  0F73  0875               	movf	??_Lcd_Set_Cursor,w
  3364  0F74  00F9               	movwf	Lcd_Set_Cursor@y
  3365                           
  3366                           ;./Lcd_KeyPad.h: 50:   Lcd_Cmd(z);
  3367  0F75  0878               	movf	Lcd_Set_Cursor@z,w
  3368  0F76  120A  158A  2696  120A  158A  	fcall	_Lcd_Cmd
  3369                           
  3370                           ;./Lcd_KeyPad.h: 51:   Lcd_Cmd(y);
  3371  0F7B  0879               	movf	Lcd_Set_Cursor@y,w
  3372  0F7C  120A  158A  2696   	fcall	_Lcd_Cmd
  3373                           
  3374                           ;./Lcd_KeyPad.h: 52:  }
  3375  0F7F  0008               	return
  3376  0F80                     l1715:	
  3377  0F80  3002               	movlw	2
  3378  0F81  0677               	xorwf	Lcd_Set_Cursor@a,w
  3379  0F82  1D03               	btfss	3,2
  3380  0F83  0008               	return
  3381                           
  3382                           ;./Lcd_KeyPad.h: 54:  {;./Lcd_KeyPad.h: 55:   temp = 0xC0 + b - 1;
  3383  0F84  0874               	movf	Lcd_Set_Cursor@b,w
  3384  0F85  3EBF               	addlw	191
  3385  0F86  00F5               	movwf	??_Lcd_Set_Cursor
  3386  0F87  0875               	movf	??_Lcd_Set_Cursor,w
  3387  0F88  00FA               	movwf	Lcd_Set_Cursor@temp
  3388                           
  3389                           ;./Lcd_KeyPad.h: 56:   z = temp>>4;
  3390  0F89  087A               	movf	Lcd_Set_Cursor@temp,w
  3391  0F8A  00F5               	movwf	??_Lcd_Set_Cursor
  3392  0F8B  3004               	movlw	4
  3393  0F8C                     u1175:	
  3394  0F8C  1003               	clrc
  3395  0F8D  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3396  0F8E  3EFF               	addlw	-1
  3397  0F8F  1D03               	skipz
  3398  0F90  2F8C               	goto	u1175
  3399  0F91  0875               	movf	??_Lcd_Set_Cursor,w
  3400  0F92  00F6               	movwf	??_Lcd_Set_Cursor+1
  3401  0F93  0876               	movf	??_Lcd_Set_Cursor+1,w
  3402  0F94  00F8               	movwf	Lcd_Set_Cursor@z
  3403                           
  3404                           ;./Lcd_KeyPad.h: 57:   y = temp & 0x0F;
  3405  0F95  087A               	movf	Lcd_Set_Cursor@temp,w
  3406  0F96  390F               	andlw	15
  3407  0F97  00F5               	movwf	??_Lcd_Set_Cursor
  3408  0F98  0875               	movf	??_Lcd_Set_Cursor,w
  3409  0F99  00F9               	movwf	Lcd_Set_Cursor@y
  3410                           
  3411                           ;./Lcd_KeyPad.h: 58:   Lcd_Cmd(z);
  3412  0F9A  0878               	movf	Lcd_Set_Cursor@z,w
  3413  0F9B  120A  158A  2696  120A  158A  	fcall	_Lcd_Cmd
  3414                           
  3415                           ;./Lcd_KeyPad.h: 59:   Lcd_Cmd(y);
  3416  0FA0  0879               	movf	Lcd_Set_Cursor@y,w
  3417  0FA1  120A  158A  2696   	fcall	_Lcd_Cmd
  3418  0FA4  0008               	return
  3419  0FA5                     __end_of_Lcd_Set_Cursor:	
  3420                           
  3421                           	psect	text11
  3422  0FA5                     __ptext11:	
  3423 ;; *************** function _Lcd_Init *****************
  3424 ;; Defined at:
  3425 ;;		line 63 in file "./Lcd_KeyPad.h"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0, pclath, cstack
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3439 ;;      Params:         0       0       0       0       0
  3440 ;;      Locals:         0       0       0       0       0
  3441 ;;      Temps:          2       0       0       0       0
  3442 ;;      Totals:         2       0       0       0       0
  3443 ;;Total ram usage:        2 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    2
  3446 ;; This function calls:
  3447 ;;		_Lcd_Cmd
  3448 ;;		_Lcd_Port
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function _Lcd_Init
  3456  0FA5                     _Lcd_Init:	
  3457                           
  3458                           ;./Lcd_KeyPad.h: 65:   Lcd_Port(0x00);
  3459                           
  3460                           ;incstack = 0
  3461                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3462  0FA5  3000               	movlw	0
  3463  0FA6  120A  158A  267C  120A  158A  	fcall	_Lcd_Port
  3464                           
  3465                           ;./Lcd_KeyPad.h: 66:    _delay((unsigned long)((20)*(16000000/4000.0)));
  3466  0FAB  3068               	movlw	104
  3467  0FAC  00F5               	movwf	??_Lcd_Init+1
  3468  0FAD  30E4               	movlw	228
  3469  0FAE  00F4               	movwf	??_Lcd_Init
  3470  0FAF                     u1817:	
  3471  0FAF  0BF4               	decfsz	??_Lcd_Init,f
  3472  0FB0  2FAF               	goto	u1817
  3473  0FB1  0BF5               	decfsz	??_Lcd_Init+1,f
  3474  0FB2  2FAF               	goto	u1817
  3475  0FB3  0000               	nop
  3476                           
  3477                           ;./Lcd_KeyPad.h: 67:   Lcd_Cmd(0x03);
  3478  0FB4  3003               	movlw	3
  3479  0FB5  120A  158A  2696  120A  158A  	fcall	_Lcd_Cmd
  3480                           
  3481                           ;./Lcd_KeyPad.h: 68:  _delay((unsigned long)((5)*(16000000/4000.0)));
  3482  0FBA  301A               	movlw	26
  3483  0FBB  00F5               	movwf	??_Lcd_Init+1
  3484  0FBC  30F8               	movlw	248
  3485  0FBD  00F4               	movwf	??_Lcd_Init
  3486  0FBE                     u1827:	
  3487  0FBE  0BF4               	decfsz	??_Lcd_Init,f
  3488  0FBF  2FBE               	goto	u1827
  3489  0FC0  0BF5               	decfsz	??_Lcd_Init+1,f
  3490  0FC1  2FBE               	goto	u1827
  3491  0FC2  0000               	nop
  3492                           
  3493                           ;./Lcd_KeyPad.h: 69:   Lcd_Cmd(0x03);
  3494  0FC3  3003               	movlw	3
  3495  0FC4  120A  158A  2696  120A  158A  	fcall	_Lcd_Cmd
  3496                           
  3497                           ;./Lcd_KeyPad.h: 70:  _delay((unsigned long)((11)*(16000000/4000.0)));
  3498  0FC9  303A               	movlw	58
  3499  0FCA  00F5               	movwf	??_Lcd_Init+1
  3500  0FCB  3023               	movlw	35
  3501  0FCC  00F4               	movwf	??_Lcd_Init
  3502  0FCD                     u1837:	
  3503  0FCD  0BF4               	decfsz	??_Lcd_Init,f
  3504  0FCE  2FCD               	goto	u1837
  3505  0FCF  0BF5               	decfsz	??_Lcd_Init+1,f
  3506  0FD0  2FCD               	goto	u1837
  3507                           
  3508                           ;./Lcd_KeyPad.h: 71:   Lcd_Cmd(0x03);
  3509  0FD1  3003               	movlw	3
  3510  0FD2  120A  158A  2696  120A  158A  	fcall	_Lcd_Cmd
  3511                           
  3512                           ;./Lcd_KeyPad.h: 73:   Lcd_Cmd(0x02);
  3513  0FD7  3002               	movlw	2
  3514  0FD8  120A  158A  2696  120A  158A  	fcall	_Lcd_Cmd
  3515                           
  3516                           ;./Lcd_KeyPad.h: 74:   Lcd_Cmd(0x02);
  3517  0FDD  3002               	movlw	2
  3518  0FDE  120A  158A  2696  120A  158A  	fcall	_Lcd_Cmd
  3519                           
  3520                           ;./Lcd_KeyPad.h: 75:   Lcd_Cmd(0x08);
  3521  0FE3  3008               	movlw	8
  3522  0FE4  120A  158A  2696  120A  158A  	fcall	_Lcd_Cmd
  3523                           
  3524                           ;./Lcd_KeyPad.h: 76:   Lcd_Cmd(0x00);
  3525  0FE9  3000               	movlw	0
  3526  0FEA  120A  158A  2696  120A  158A  	fcall	_Lcd_Cmd
  3527                           
  3528                           ;./Lcd_KeyPad.h: 77:   Lcd_Cmd(0x0C);
  3529  0FEF  300C               	movlw	12
  3530  0FF0  120A  158A  2696  120A  158A  	fcall	_Lcd_Cmd
  3531                           
  3532                           ;./Lcd_KeyPad.h: 78:   Lcd_Cmd(0x00);
  3533  0FF5  3000               	movlw	0
  3534  0FF6  120A  158A  2696  120A  158A  	fcall	_Lcd_Cmd
  3535                           
  3536                           ;./Lcd_KeyPad.h: 79:   Lcd_Cmd(0x06);
  3537  0FFB  3006               	movlw	6
  3538  0FFC  120A  158A  2696   	fcall	_Lcd_Cmd
  3539  0FFF  0008               	return
  3540  1000                     __end_of_Lcd_Init:	
  3541                           
  3542                           	psect	text12
  3543  0E36                     __ptext12:	
  3544 ;; *************** function _Lcd_Clear *****************
  3545 ;; Defined at:
  3546 ;;		line 36 in file "./Lcd_KeyPad.h"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  2   58[None  ] int 
  3553 ;; Registers used:
  3554 ;;		wreg, status,2, status,0, pclath, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3560 ;;      Params:         0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0
  3563 ;;      Totals:         0       0       0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    2
  3567 ;; This function calls:
  3568 ;;		_Lcd_Cmd
  3569 ;; This function is called by:
  3570 ;;		_main
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           
  3575                           ;psect for function _Lcd_Clear
  3576  0E36                     _Lcd_Clear:	
  3577                           
  3578                           ;./Lcd_KeyPad.h: 38:  Lcd_Cmd(0);
  3579                           
  3580                           ;incstack = 0
  3581                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3582  0E36  3000               	movlw	0
  3583  0E37  120A  158A  2696  120A  158A  	fcall	_Lcd_Cmd
  3584                           
  3585                           ;./Lcd_KeyPad.h: 39:  Lcd_Cmd(1);
  3586  0E3C  3001               	movlw	1
  3587  0E3D  120A  158A  2696   	fcall	_Lcd_Cmd
  3588  0E40  0008               	return
  3589  0E41                     __end_of_Lcd_Clear:	
  3590                           
  3591                           	psect	text13
  3592  0E96                     __ptext13:	
  3593 ;; *************** function _Lcd_Cmd *****************
  3594 ;; Defined at:
  3595 ;;		line 26 in file "./Lcd_KeyPad.h"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  a               1    wreg     unsigned char 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  a               1    3[COMMON] unsigned char 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      void 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0, pclath, cstack
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3609 ;;      Params:         0       0       0       0       0
  3610 ;;      Locals:         1       0       0       0       0
  3611 ;;      Temps:          2       0       0       0       0
  3612 ;;      Totals:         3       0       0       0       0
  3613 ;;Total ram usage:        3 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    1
  3616 ;; This function calls:
  3617 ;;		_Lcd_Port
  3618 ;; This function is called by:
  3619 ;;		_Lcd_Clear
  3620 ;;		_Lcd_Set_Cursor
  3621 ;;		_Lcd_Init
  3622 ;;		_Lcd_Shift_Right
  3623 ;;		_Lcd_Shift_Left
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           
  3628                           ;psect for function _Lcd_Cmd
  3629  0E96                     _Lcd_Cmd:	
  3630                           
  3631                           ;incstack = 0
  3632                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3633                           ;Lcd_Cmd@a stored from wreg
  3634  0E96  00F3               	movwf	Lcd_Cmd@a
  3635                           
  3636                           ;./Lcd_KeyPad.h: 26: void Lcd_Cmd(char a);./Lcd_KeyPad.h: 27: {;./Lcd_KeyPad.h: 28:  RD2
      +                           = 0;
  3637  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0E99  1108               	bcf	8,2	;volatile
  3640                           
  3641                           ;./Lcd_KeyPad.h: 30:  Lcd_Port(a);
  3642  0E9A  0873               	movf	Lcd_Cmd@a,w
  3643  0E9B  120A  158A  267C  120A  158A  	fcall	_Lcd_Port
  3644                           
  3645                           ;./Lcd_KeyPad.h: 31:  RD3 = 1;
  3646  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  3647  0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  3648  0EA2  1588               	bsf	8,3	;volatile
  3649                           
  3650                           ;./Lcd_KeyPad.h: 32:         _delay((unsigned long)((4)*(16000000/4000.0)));
  3651  0EA3  3015               	movlw	21
  3652  0EA4  00F2               	movwf	??_Lcd_Cmd+1
  3653  0EA5  30C6               	movlw	198
  3654  0EA6  00F1               	movwf	??_Lcd_Cmd
  3655  0EA7                     u1847:	
  3656  0EA7  0BF1               	decfsz	??_Lcd_Cmd,f
  3657  0EA8  2EA7               	goto	u1847
  3658  0EA9  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3659  0EAA  2EA7               	goto	u1847
  3660  0EAB  0000               	nop
  3661                           
  3662                           ;./Lcd_KeyPad.h: 33:         RD3 = 0;
  3663  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3664  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  3665  0EAE  1188               	bcf	8,3	;volatile
  3666  0EAF  0008               	return
  3667  0EB0                     __end_of_Lcd_Cmd:	
  3668                           
  3669                           	psect	text14
  3670  0E7C                     __ptext14:	
  3671 ;; *************** function _Lcd_Port *****************
  3672 ;; Defined at:
  3673 ;;		line 4 in file "./Lcd_KeyPad.h"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  a               1    wreg     unsigned char 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  a               1    0[COMMON] unsigned char 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3687 ;;      Params:         0       0       0       0       0
  3688 ;;      Locals:         1       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0
  3690 ;;      Totals:         1       0       0       0       0
  3691 ;;Total ram usage:        1 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; This function calls:
  3694 ;;		Nothing
  3695 ;; This function is called by:
  3696 ;;		_Lcd_Cmd
  3697 ;;		_Lcd_Init
  3698 ;;		_Lcd_Write_Char
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           
  3703                           ;psect for function _Lcd_Port
  3704  0E7C                     _Lcd_Port:	
  3705                           
  3706                           ;incstack = 0
  3707                           ; Regs used in _Lcd_Port: [wreg]
  3708                           ;Lcd_Port@a stored from wreg
  3709  0E7C  00F0               	movwf	Lcd_Port@a
  3710                           
  3711                           ;./Lcd_KeyPad.h: 4: void Lcd_Port(char a);./Lcd_KeyPad.h: 5: {;./Lcd_KeyPad.h: 6:  if(a 
      +                          & 1)
  3712  0E7D  1C70               	btfss	Lcd_Port@a,0
  3713  0E7E  2E83               	goto	l45
  3714                           
  3715                           ;./Lcd_KeyPad.h: 7:   RD4 = 1;
  3716  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  3718  0E81  1608               	bsf	8,4	;volatile
  3719  0E82  2E86               	goto	l46
  3720  0E83                     l45:	
  3721                           ;./Lcd_KeyPad.h: 8:  else
  3722                           
  3723                           
  3724                           ;./Lcd_KeyPad.h: 9:   RD4 = 0;
  3725  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3726  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  3727  0E85  1208               	bcf	8,4	;volatile
  3728  0E86                     l46:	
  3729                           
  3730                           ;./Lcd_KeyPad.h: 11:  if(a & 2)
  3731  0E86  1CF0               	btfss	Lcd_Port@a,1
  3732  0E87  2E8A               	goto	l47
  3733                           
  3734                           ;./Lcd_KeyPad.h: 12:   RD5 = 1;
  3735  0E88  1688               	bsf	8,5	;volatile
  3736  0E89  2E8B               	goto	l48
  3737  0E8A                     l47:	
  3738                           ;./Lcd_KeyPad.h: 13:  else
  3739                           
  3740                           
  3741                           ;./Lcd_KeyPad.h: 14:   RD5 = 0;
  3742  0E8A  1288               	bcf	8,5	;volatile
  3743  0E8B                     l48:	
  3744                           
  3745                           ;./Lcd_KeyPad.h: 16:  if(a & 4)
  3746  0E8B  1D70               	btfss	Lcd_Port@a,2
  3747  0E8C  2E8F               	goto	l49
  3748                           
  3749                           ;./Lcd_KeyPad.h: 17:   RD6 = 1;
  3750  0E8D  1708               	bsf	8,6	;volatile
  3751  0E8E  2E90               	goto	l50
  3752  0E8F                     l49:	
  3753                           ;./Lcd_KeyPad.h: 18:  else
  3754                           
  3755                           
  3756                           ;./Lcd_KeyPad.h: 19:   RD6 = 0;
  3757  0E8F  1308               	bcf	8,6	;volatile
  3758  0E90                     l50:	
  3759                           
  3760                           ;./Lcd_KeyPad.h: 21:  if(a & 8)
  3761  0E90  1DF0               	btfss	Lcd_Port@a,3
  3762  0E91  2E94               	goto	l51
  3763                           
  3764                           ;./Lcd_KeyPad.h: 22:   RD7 = 1;
  3765  0E92  1788               	bsf	8,7	;volatile
  3766  0E93  0008               	return
  3767  0E94                     l51:	
  3768                           ;./Lcd_KeyPad.h: 23:  else
  3769                           
  3770                           
  3771                           ;./Lcd_KeyPad.h: 24:   RD7 = 0;
  3772  0E94  1388               	bcf	8,7	;volatile
  3773  0E95  0008               	return
  3774  0E96                     __end_of_Lcd_Port:	
  3775                           
  3776                           	psect	text15
  3777  0E2C                     __ptext15:	
  3778 ;; *************** function _Keypad_Init *****************
  3779 ;; Defined at:
  3780 ;;		line 119 in file "./Lcd_KeyPad.h"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      void 
  3787 ;; Registers used:
  3788 ;;		wreg, status,2
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3794 ;;      Params:         0       0       0       0       0
  3795 ;;      Locals:         0       0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0
  3797 ;;      Totals:         0       0       0       0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_main
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           
  3808                           ;psect for function _Keypad_Init
  3809  0E2C                     _Keypad_Init:	
  3810                           
  3811                           ;./Lcd_KeyPad.h: 123:  PORTB =0x00;
  3812                           
  3813                           ;incstack = 0
  3814                           ; Regs used in _Keypad_Init: [wreg+status,2]
  3815  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  3816  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  3817  0E2E  0186               	clrf	6	;volatile
  3818                           
  3819                           ;./Lcd_KeyPad.h: 124:  TRISB =0b11110000;
  3820  0E2F  30F0               	movlw	240
  3821  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3822  0E31  1303               	bcf	3,6	;RP1=0, select bank1
  3823  0E32  0086               	movwf	6	;volatile
  3824                           
  3825                           ;./Lcd_KeyPad.h: 127:  OPTION_REG=0x7F;
  3826  0E33  307F               	movlw	127
  3827  0E34  0081               	movwf	1	;volatile
  3828  0E35  0008               	return
  3829  0E36                     __end_of_Keypad_Init:	
  3830                           
  3831                           	psect	text16
  3832  0E66                     __ptext16:	
  3833 ;; *************** function _KeySound *****************
  3834 ;; Defined at:
  3835 ;;		line 97 in file "./Buz_Lock_Led.h"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3849 ;;      Params:         0       0       0       0       0
  3850 ;;      Locals:         0       0       0       0       0
  3851 ;;      Temps:          3       0       0       0       0
  3852 ;;      Totals:         3       0       0       0       0
  3853 ;;Total ram usage:        3 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_main
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           
  3863                           ;psect for function _KeySound
  3864  0E66                     _KeySound:	
  3865                           
  3866                           ;./Buz_Lock_Led.h: 99:     PORTCbits.RC3=1;
  3867                           
  3868                           ;incstack = 0
  3869                           ; Regs used in _KeySound: [wreg]
  3870  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  3871  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  3872  0E68  1587               	bsf	7,3	;volatile
  3873                           
  3874                           ;./Buz_Lock_Led.h: 100:     PORTCbits.RC6=0;
  3875  0E69  1307               	bcf	7,6	;volatile
  3876                           
  3877                           ;./Buz_Lock_Led.h: 101:     _delay((unsigned long)((50)*(16000000/4000.0)));
  3878  0E6A  3002               	movlw	2
  3879  0E6B  00F2               	movwf	??_KeySound+2
  3880  0E6C  3004               	movlw	4
  3881  0E6D  00F1               	movwf	??_KeySound+1
  3882  0E6E  30BA               	movlw	186
  3883  0E6F  00F0               	movwf	??_KeySound
  3884  0E70                     u1857:	
  3885  0E70  0BF0               	decfsz	??_KeySound,f
  3886  0E71  2E70               	goto	u1857
  3887  0E72  0BF1               	decfsz	??_KeySound+1,f
  3888  0E73  2E70               	goto	u1857
  3889  0E74  0BF2               	decfsz	??_KeySound+2,f
  3890  0E75  2E70               	goto	u1857
  3891  0E76  0000               	nop
  3892                           
  3893                           ;./Buz_Lock_Led.h: 102:     PORTCbits.RC3=0;
  3894  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3895  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3896  0E79  1187               	bcf	7,3	;volatile
  3897                           
  3898                           ;./Buz_Lock_Led.h: 103:     PORTCbits.RC6=1;
  3899  0E7A  1707               	bsf	7,6	;volatile
  3900  0E7B  0008               	return
  3901  0E7C                     __end_of_KeySound:	
  3902                           
  3903                           	psect	text17
  3904  0E41                     __ptext17:	
  3905 ;; *************** function _GetKey *****************
  3906 ;; Defined at:
  3907 ;;		line 166 in file "./Lcd_KeyPad.h"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  key             1    4[COMMON] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      unsigned char 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0, pclath, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3921 ;;      Params:         0       0       0       0       0
  3922 ;;      Locals:         1       0       0       0       0
  3923 ;;      Temps:          1       0       0       0       0
  3924 ;;      Totals:         2       0       0       0       0
  3925 ;;Total ram usage:        2 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    1
  3928 ;; This function calls:
  3929 ;;		_READ_SWITCHES
  3930 ;; This function is called by:
  3931 ;;		_main
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           
  3936                           ;psect for function _GetKey
  3937  0E41                     _GetKey:	
  3938                           
  3939                           ;./Lcd_KeyPad.h: 168:  char key = 'n';
  3940                           
  3941                           ;incstack = 0
  3942                           ; Regs used in _GetKey: [wreg+status,2+status,0+pclath+cstack]
  3943  0E41  306E               	movlw	110
  3944  0E42                     L1:	
  3945  0E42  00F3               	movwf	??_GetKey
  3946  0E43  0873               	movf	??_GetKey,w
  3947  0E44  00F4               	movwf	GetKey@key
  3948                           
  3949                           ;./Lcd_KeyPad.h: 170:  while(key=='n')
  3950  0E45  306E               	movlw	110
  3951  0E46  0674               	xorwf	GetKey@key,w
  3952  0E47  1D03               	btfss	3,2
  3953  0E48  2E4F               	goto	l1755
  3954                           
  3955                           ;./Lcd_KeyPad.h: 171:   key = READ_SWITCHES();
  3956                           
  3957                           ;./Lcd_KeyPad.h: 170:  while(key=='n')
  3958  0E49  120A  118A  2328  120A  158A  	fcall	_READ_SWITCHES
  3959  0E4E  2E42               	goto	L1
  3960  0E4F                     l1755:	
  3961                           
  3962                           ;./Lcd_KeyPad.h: 173:  return key;
  3963  0E4F  0874               	movf	GetKey@key,w
  3964  0E50  0008               	return
  3965  0E51                     __end_of_GetKey:	
  3966                           
  3967                           	psect	text18
  3968  0328                     __ptext18:	
  3969 ;; *************** function _READ_SWITCHES *****************
  3970 ;; Defined at:
  3971 ;;		line 134 in file "./Lcd_KeyPad.h"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      unsigned char 
  3978 ;; Registers used:
  3979 ;;		wreg
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3985 ;;      Params:         0       0       0       0       0
  3986 ;;      Locals:         0       0       0       0       0
  3987 ;;      Temps:          3       0       0       0       0
  3988 ;;      Totals:         3       0       0       0       0
  3989 ;;Total ram usage:        3 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_GetKey
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           
  3999                           ;psect for function _READ_SWITCHES
  4000  0328                     _READ_SWITCHES:	
  4001                           
  4002                           ;./Lcd_KeyPad.h: 136:  RB0=0; RB1=1; RB2=1; RB3=1;
  4003                           
  4004                           ;incstack = 0
  4005                           ; Regs used in _READ_SWITCHES: [wreg]
  4006  0328  1283               	bcf	3,5	;RP0=0, select bank0
  4007  0329  1303               	bcf	3,6	;RP1=0, select bank0
  4008  032A  1006               	bcf	6,0	;volatile
  4009  032B  1486               	bsf	6,1	;volatile
  4010  032C  1506               	bsf	6,2	;volatile
  4011  032D  1586               	bsf	6,3	;volatile
  4012                           
  4013                           ;./Lcd_KeyPad.h: 138:  if (RB4==0) { _delay((unsigned long)((250)*(16000000/4000.0))); w
      +                          hile (RB4==0); return '1'; }
  4014  032E  1A06               	btfsc	6,4	;volatile
  4015  032F  2B43               	goto	l89
  4016  0330  3006               	movlw	6
  4017  0331  00F2               	movwf	??_READ_SWITCHES+2
  4018  0332  3013               	movlw	19
  4019  0333  00F1               	movwf	??_READ_SWITCHES+1
  4020  0334  30AD               	movlw	173
  4021  0335  00F0               	movwf	??_READ_SWITCHES
  4022  0336                     u1867:	
  4023  0336  0BF0               	decfsz	??_READ_SWITCHES,f
  4024  0337  2B36               	goto	u1867
  4025  0338  0BF1               	decfsz	??_READ_SWITCHES+1,f
  4026  0339  2B36               	goto	u1867
  4027  033A  0BF2               	decfsz	??_READ_SWITCHES+2,f
  4028  033B  2B36               	goto	u1867
  4029  033C  2B3D               	nop2
  4030  033D                     l90:	
  4031  033D  1283               	bcf	3,5	;RP0=0, select bank0
  4032  033E  1303               	bcf	3,6	;RP1=0, select bank0
  4033  033F  1E06               	btfss	6,4	;volatile
  4034  0340  2B3D               	goto	l90
  4035  0341  3031               	movlw	49
  4036  0342  0008               	return
  4037  0343                     l89:	
  4038                           
  4039                           ;./Lcd_KeyPad.h: 139:  if (RB5==0) { _delay((unsigned long)((250)*(16000000/4000.0))); w
      +                          hile (RB5==0); return '2'; }
  4040  0343  1A86               	btfsc	6,5	;volatile
  4041  0344  2B58               	goto	l94
  4042  0345  3006               	movlw	6
  4043  0346  00F2               	movwf	??_READ_SWITCHES+2
  4044  0347  3013               	movlw	19
  4045  0348  00F1               	movwf	??_READ_SWITCHES+1
  4046  0349  30AD               	movlw	173
  4047  034A  00F0               	movwf	??_READ_SWITCHES
  4048  034B                     u1877:	
  4049  034B  0BF0               	decfsz	??_READ_SWITCHES,f
  4050  034C  2B4B               	goto	u1877
  4051  034D  0BF1               	decfsz	??_READ_SWITCHES+1,f
  4052  034E  2B4B               	goto	u1877
  4053  034F  0BF2               	decfsz	??_READ_SWITCHES+2,f
  4054  0350  2B4B               	goto	u1877
  4055  0351  2B52               	nop2
  4056  0352                     l95:	
  4057  0352  1283               	bcf	3,5	;RP0=0, select bank0
  4058  0353  1303               	bcf	3,6	;RP1=0, select bank0
  4059  0354  1E86               	btfss	6,5	;volatile
  4060  0355  2B52               	goto	l95
  4061  0356  3032               	movlw	50
  4062  0357  0008               	return
  4063  0358                     l94:	
  4064                           
  4065                           ;./Lcd_KeyPad.h: 140:  if (RB6==0) { _delay((unsigned long)((250)*(16000000/4000.0))); w
      +                          hile (RB6==0); return '3'; }
  4066  0358  1B06               	btfsc	6,6	;volatile
  4067  0359  2B6D               	goto	l98
  4068  035A  3006               	movlw	6
  4069  035B  00F2               	movwf	??_READ_SWITCHES+2
  4070  035C  3013               	movlw	19
  4071  035D  00F1               	movwf	??_READ_SWITCHES+1
  4072  035E  30AD               	movlw	173
  4073  035F  00F0               	movwf	??_READ_SWITCHES
  4074  0360                     u1887:	
  4075  0360  0BF0               	decfsz	??_READ_SWITCHES,f
  4076  0361  2B60               	goto	u1887
  4077  0362  0BF1               	decfsz	??_READ_SWITCHES+1,f
  4078  0363  2B60               	goto	u1887
  4079  0364  0BF2               	decfsz	??_READ_SWITCHES+2,f
  4080  0365  2B60               	goto	u1887
  4081  0366  2B67               	nop2
  4082  0367                     l99:	
  4083  0367  1283               	bcf	3,5	;RP0=0, select bank0
  4084  0368  1303               	bcf	3,6	;RP1=0, select bank0
  4085  0369  1F06               	btfss	6,6	;volatile
  4086  036A  2B67               	goto	l99
  4087  036B  3033               	movlw	51
  4088  036C  0008               	return
  4089  036D                     l98:	
  4090                           
  4091                           ;./Lcd_KeyPad.h: 142:  RB0=1; RB1=0; RB2=1; RB3=1;
  4092  036D  1406               	bsf	6,0	;volatile
  4093  036E  1086               	bcf	6,1	;volatile
  4094  036F  1506               	bsf	6,2	;volatile
  4095  0370  1586               	bsf	6,3	;volatile
  4096                           
  4097                           ;./Lcd_KeyPad.h: 144:  if (RB4==0) { _delay((unsigned long)((250)*(16000000/4000.0))); w
      +                          hile (RB4==0); return '4'; }
  4098  0371  1A06               	btfsc	6,4	;volatile
  4099  0372  2B86               	goto	l102
  4100  0373  3006               	movlw	6
  4101  0374  00F2               	movwf	??_READ_SWITCHES+2
  4102  0375  3013               	movlw	19
  4103  0376  00F1               	movwf	??_READ_SWITCHES+1
  4104  0377  30AD               	movlw	173
  4105  0378  00F0               	movwf	??_READ_SWITCHES
  4106  0379                     u1897:	
  4107  0379  0BF0               	decfsz	??_READ_SWITCHES,f
  4108  037A  2B79               	goto	u1897
  4109  037B  0BF1               	decfsz	??_READ_SWITCHES+1,f
  4110  037C  2B79               	goto	u1897
  4111  037D  0BF2               	decfsz	??_READ_SWITCHES+2,f
  4112  037E  2B79               	goto	u1897
  4113  037F  2B80               	nop2
  4114  0380                     l103:	
  4115  0380  1283               	bcf	3,5	;RP0=0, select bank0
  4116  0381  1303               	bcf	3,6	;RP1=0, select bank0
  4117  0382  1E06               	btfss	6,4	;volatile
  4118  0383  2B80               	goto	l103
  4119  0384  3034               	movlw	52
  4120  0385  0008               	return
  4121  0386                     l102:	
  4122                           
  4123                           ;./Lcd_KeyPad.h: 145:  if (RB5==0) { _delay((unsigned long)((250)*(16000000/4000.0))); w
      +                          hile (RB5==0); return '5'; }
  4124  0386  1A86               	btfsc	6,5	;volatile
  4125  0387  2B9B               	goto	l106
  4126  0388  3006               	movlw	6
  4127  0389  00F2               	movwf	??_READ_SWITCHES+2
  4128  038A  3013               	movlw	19
  4129  038B  00F1               	movwf	??_READ_SWITCHES+1
  4130  038C  30AD               	movlw	173
  4131  038D  00F0               	movwf	??_READ_SWITCHES
  4132  038E                     u1907:	
  4133  038E  0BF0               	decfsz	??_READ_SWITCHES,f
  4134  038F  2B8E               	goto	u1907
  4135  0390  0BF1               	decfsz	??_READ_SWITCHES+1,f
  4136  0391  2B8E               	goto	u1907
  4137  0392  0BF2               	decfsz	??_READ_SWITCHES+2,f
  4138  0393  2B8E               	goto	u1907
  4139  0394  2B95               	nop2
  4140  0395                     l107:	
  4141  0395  1283               	bcf	3,5	;RP0=0, select bank0
  4142  0396  1303               	bcf	3,6	;RP1=0, select bank0
  4143  0397  1E86               	btfss	6,5	;volatile
  4144  0398  2B95               	goto	l107
  4145  0399  3035               	movlw	53
  4146  039A  0008               	return
  4147  039B                     l106:	
  4148                           
  4149                           ;./Lcd_KeyPad.h: 146:  if (RB6==0) { _delay((unsigned long)((250)*(16000000/4000.0))); w
      +                          hile (RB6==0); return '6'; }
  4150  039B  1B06               	btfsc	6,6	;volatile
  4151  039C  2BB0               	goto	l110
  4152  039D  3006               	movlw	6
  4153  039E  00F2               	movwf	??_READ_SWITCHES+2
  4154  039F  3013               	movlw	19
  4155  03A0  00F1               	movwf	??_READ_SWITCHES+1
  4156  03A1  30AD               	movlw	173
  4157  03A2  00F0               	movwf	??_READ_SWITCHES
  4158  03A3                     u1917:	
  4159  03A3  0BF0               	decfsz	??_READ_SWITCHES,f
  4160  03A4  2BA3               	goto	u1917
  4161  03A5  0BF1               	decfsz	??_READ_SWITCHES+1,f
  4162  03A6  2BA3               	goto	u1917
  4163  03A7  0BF2               	decfsz	??_READ_SWITCHES+2,f
  4164  03A8  2BA3               	goto	u1917
  4165  03A9  2BAA               	nop2
  4166  03AA                     l111:	
  4167  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  4168  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  4169  03AC  1F06               	btfss	6,6	;volatile
  4170  03AD  2BAA               	goto	l111
  4171  03AE  3036               	movlw	54
  4172  03AF  0008               	return
  4173  03B0                     l110:	
  4174                           
  4175                           ;./Lcd_KeyPad.h: 148:  RB0=1; RB1=1; RB2=0; RB3=1;
  4176  03B0  1406               	bsf	6,0	;volatile
  4177  03B1  1486               	bsf	6,1	;volatile
  4178  03B2  1106               	bcf	6,2	;volatile
  4179  03B3  1586               	bsf	6,3	;volatile
  4180                           
  4181                           ;./Lcd_KeyPad.h: 150:  if (RB4==0) { _delay((unsigned long)((250)*(16000000/4000.0))); w
      +                          hile (RB4==0); return '7'; }
  4182  03B4  1A06               	btfsc	6,4	;volatile
  4183  03B5  2BC9               	goto	l114
  4184  03B6  3006               	movlw	6
  4185  03B7  00F2               	movwf	??_READ_SWITCHES+2
  4186  03B8  3013               	movlw	19
  4187  03B9  00F1               	movwf	??_READ_SWITCHES+1
  4188  03BA  30AD               	movlw	173
  4189  03BB  00F0               	movwf	??_READ_SWITCHES
  4190  03BC                     u1927:	
  4191  03BC  0BF0               	decfsz	??_READ_SWITCHES,f
  4192  03BD  2BBC               	goto	u1927
  4193  03BE  0BF1               	decfsz	??_READ_SWITCHES+1,f
  4194  03BF  2BBC               	goto	u1927
  4195  03C0  0BF2               	decfsz	??_READ_SWITCHES+2,f
  4196  03C1  2BBC               	goto	u1927
  4197  03C2  2BC3               	nop2
  4198  03C3                     l115:	
  4199  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  4200  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  4201  03C5  1E06               	btfss	6,4	;volatile
  4202  03C6  2BC3               	goto	l115
  4203  03C7  3037               	movlw	55
  4204  03C8  0008               	return
  4205  03C9                     l114:	
  4206                           
  4207                           ;./Lcd_KeyPad.h: 151:  if (RB5==0) { _delay((unsigned long)((250)*(16000000/4000.0))); w
      +                          hile (RB5==0); return '8'; }
  4208  03C9  1A86               	btfsc	6,5	;volatile
  4209  03CA  2BDE               	goto	l118
  4210  03CB  3006               	movlw	6
  4211  03CC  00F2               	movwf	??_READ_SWITCHES+2
  4212  03CD  3013               	movlw	19
  4213  03CE  00F1               	movwf	??_READ_SWITCHES+1
  4214  03CF  30AD               	movlw	173
  4215  03D0  00F0               	movwf	??_READ_SWITCHES
  4216  03D1                     u1937:	
  4217  03D1  0BF0               	decfsz	??_READ_SWITCHES,f
  4218  03D2  2BD1               	goto	u1937
  4219  03D3  0BF1               	decfsz	??_READ_SWITCHES+1,f
  4220  03D4  2BD1               	goto	u1937
  4221  03D5  0BF2               	decfsz	??_READ_SWITCHES+2,f
  4222  03D6  2BD1               	goto	u1937
  4223  03D7  2BD8               	nop2
  4224  03D8                     l119:	
  4225  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  4226  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  4227  03DA  1E86               	btfss	6,5	;volatile
  4228  03DB  2BD8               	goto	l119
  4229  03DC  3038               	movlw	56
  4230  03DD  0008               	return
  4231  03DE                     l118:	
  4232                           
  4233                           ;./Lcd_KeyPad.h: 152:  if (RB6==0) { _delay((unsigned long)((250)*(16000000/4000.0))); w
      +                          hile (RB6==0); return '9'; }
  4234  03DE  1B06               	btfsc	6,6	;volatile
  4235  03DF  2BF3               	goto	l122
  4236  03E0  3006               	movlw	6
  4237  03E1  00F2               	movwf	??_READ_SWITCHES+2
  4238  03E2  3013               	movlw	19
  4239  03E3  00F1               	movwf	??_READ_SWITCHES+1
  4240  03E4  30AD               	movlw	173
  4241  03E5  00F0               	movwf	??_READ_SWITCHES
  4242  03E6                     u1947:	
  4243  03E6  0BF0               	decfsz	??_READ_SWITCHES,f
  4244  03E7  2BE6               	goto	u1947
  4245  03E8  0BF1               	decfsz	??_READ_SWITCHES+1,f
  4246  03E9  2BE6               	goto	u1947
  4247  03EA  0BF2               	decfsz	??_READ_SWITCHES+2,f
  4248  03EB  2BE6               	goto	u1947
  4249  03EC  2BED               	nop2
  4250  03ED                     l123:	
  4251  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  4252  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  4253  03EF  1F06               	btfss	6,6	;volatile
  4254  03F0  2BED               	goto	l123
  4255  03F1  3039               	movlw	57
  4256  03F2  0008               	return
  4257  03F3                     l122:	
  4258                           
  4259                           ;./Lcd_KeyPad.h: 154:  RB0=1; RB1=1; RB2=1; RB3=0;
  4260  03F3  1406               	bsf	6,0	;volatile
  4261  03F4  1486               	bsf	6,1	;volatile
  4262  03F5  1506               	bsf	6,2	;volatile
  4263  03F6  1186               	bcf	6,3	;volatile
  4264                           
  4265                           ;./Lcd_KeyPad.h: 156:  if (RB4==0) { _delay((unsigned long)((250)*(16000000/4000.0))); w
      +                          hile (RB4==0); return '*'; }
  4266  03F7  1A06               	btfsc	6,4	;volatile
  4267  03F8  2C0C               	goto	l126
  4268  03F9  3006               	movlw	6
  4269  03FA  00F2               	movwf	??_READ_SWITCHES+2
  4270  03FB  3013               	movlw	19
  4271  03FC  00F1               	movwf	??_READ_SWITCHES+1
  4272  03FD  30AD               	movlw	173
  4273  03FE  00F0               	movwf	??_READ_SWITCHES
  4274  03FF                     u1957:	
  4275  03FF  0BF0               	decfsz	??_READ_SWITCHES,f
  4276  0400  2BFF               	goto	u1957
  4277  0401  0BF1               	decfsz	??_READ_SWITCHES+1,f
  4278  0402  2BFF               	goto	u1957
  4279  0403  0BF2               	decfsz	??_READ_SWITCHES+2,f
  4280  0404  2BFF               	goto	u1957
  4281  0405  2C06               	nop2
  4282  0406                     l127:	
  4283  0406  1283               	bcf	3,5	;RP0=0, select bank0
  4284  0407  1303               	bcf	3,6	;RP1=0, select bank0
  4285  0408  1E06               	btfss	6,4	;volatile
  4286  0409  2C06               	goto	l127
  4287  040A  302A               	movlw	42
  4288  040B  0008               	return
  4289  040C                     l126:	
  4290                           
  4291                           ;./Lcd_KeyPad.h: 157:  if (RB5==0) { _delay((unsigned long)((250)*(16000000/4000.0))); w
      +                          hile (RB5==0); return '0'; }
  4292  040C  1A86               	btfsc	6,5	;volatile
  4293  040D  2C21               	goto	l130
  4294  040E  3006               	movlw	6
  4295  040F  00F2               	movwf	??_READ_SWITCHES+2
  4296  0410  3013               	movlw	19
  4297  0411  00F1               	movwf	??_READ_SWITCHES+1
  4298  0412  30AD               	movlw	173
  4299  0413  00F0               	movwf	??_READ_SWITCHES
  4300  0414                     u1967:	
  4301  0414  0BF0               	decfsz	??_READ_SWITCHES,f
  4302  0415  2C14               	goto	u1967
  4303  0416  0BF1               	decfsz	??_READ_SWITCHES+1,f
  4304  0417  2C14               	goto	u1967
  4305  0418  0BF2               	decfsz	??_READ_SWITCHES+2,f
  4306  0419  2C14               	goto	u1967
  4307  041A  2C1B               	nop2
  4308  041B                     l131:	
  4309  041B  1283               	bcf	3,5	;RP0=0, select bank0
  4310  041C  1303               	bcf	3,6	;RP1=0, select bank0
  4311  041D  1E86               	btfss	6,5	;volatile
  4312  041E  2C1B               	goto	l131
  4313  041F  3030               	movlw	48
  4314  0420  0008               	return
  4315  0421                     l130:	
  4316                           
  4317                           ;./Lcd_KeyPad.h: 158:  if (RB6==0) { _delay((unsigned long)((250)*(16000000/4000.0))); w
      +                          hile (RB6==0); return '#'; }
  4318  0421  1B06               	btfsc	6,6	;volatile
  4319  0422  2C36               	goto	l1651
  4320  0423  3006               	movlw	6
  4321  0424  00F2               	movwf	??_READ_SWITCHES+2
  4322  0425  3013               	movlw	19
  4323  0426  00F1               	movwf	??_READ_SWITCHES+1
  4324  0427  30AD               	movlw	173
  4325  0428  00F0               	movwf	??_READ_SWITCHES
  4326  0429                     u1977:	
  4327  0429  0BF0               	decfsz	??_READ_SWITCHES,f
  4328  042A  2C29               	goto	u1977
  4329  042B  0BF1               	decfsz	??_READ_SWITCHES+1,f
  4330  042C  2C29               	goto	u1977
  4331  042D  0BF2               	decfsz	??_READ_SWITCHES+2,f
  4332  042E  2C29               	goto	u1977
  4333  042F  2C30               	nop2
  4334  0430                     l135:	
  4335  0430  1283               	bcf	3,5	;RP0=0, select bank0
  4336  0431  1303               	bcf	3,6	;RP1=0, select bank0
  4337  0432  1F06               	btfss	6,6	;volatile
  4338  0433  2C30               	goto	l135
  4339  0434  3023               	movlw	35
  4340  0435  0008               	return
  4341  0436                     l1651:	
  4342                           
  4343                           ;./Lcd_KeyPad.h: 160:  return 'n';
  4344  0436  306E               	movlw	110
  4345  0437  0008               	return
  4346  0438                     __end_of_READ_SWITCHES:	
  4347  007E                     btemp	set	126	;btemp
  4348  007E                     wtemp0	set	126


Data Sizes:
    Strings     139
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     66      66
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 12
		 -> main@Nes1(BANK0[12]), main@Nes(BANK0[12]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[10]), STR_12(CODE[16]), main@Nes1(BANK0[12]), STR_10(CODE[16]), 
		 -> STR_9(CODE[10]), STR_8(CODE[11]), STR_7(CODE[15]), STR_6(CODE[15]), 
		 -> STR_5(CODE[12]), STR_4(CODE[17]), main@Nes(BANK0[12]), STR_2(CODE[14]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _GetKey->_READ_SWITCHES

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0    6568
                                             13 BANK0     53    53      0
                             _GetKey
                           _KeySound
                        _Keypad_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                        _LockOpining
                          _WaitSound
                         _Wrongsound
                            _sprintf
                      _startingSound
 ---------------------------------------------------------------------------------
 (1) _startingSound                                        3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Wrongsound                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _WaitSound                                            3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LockOpining                                          3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1256
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    2280
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _KeySound                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _GetKey                                               2     2      0      46
                                              3 COMMON     2     2      0
                      _READ_SWITCHES
 ---------------------------------------------------------------------------------
 (2) _READ_SWITCHES                                        3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetKey
     _READ_SWITCHES
   _KeySound
   _Keypad_Init
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _LockOpining
   _WaitSound
   _Wrongsound
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _startingSound

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     42      42       5       82.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jul 16 17:03:54 2019

                        pc 0002                __CFG_CP$OFF 0000                         l50 0E90  
                       l51 0E94                         l45 0E83                         l46 0E86  
                       l47 0E8A                         l48 0E8B                         l49 0E8F  
                       l90 033D                         l94 0358                         l95 0352  
                       l89 0343                         l98 036D                         l99 0367  
                       fsr 0004                        l110 03B0                        l102 0386  
                      l111 03AA                        l103 0380                        l130 0421  
                      l122 03F3                        l114 03C9                        l106 039B  
                      l131 041B                        l123 03ED                        l115 03C3  
                      l107 0395                        l126 040C                        l118 03DE  
                      l135 0430                        l127 0406                        l119 03D8  
   __size_of_startingSound 0102                        _RB0 0030                        _RB1 0031  
                      _RB2 0032                        _RB3 0033                        _RB4 0034  
                      _RB5 0035                        _RD2 0042                        _RB6 0036  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047               __CFG_CPD$OFF 0000  
                      u765 0017                        fsr0 0004                        indf 0000  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       l2107 04C1  
                     l2043 04C5                       l2109 05A2                       l2227 0770  
                     l2219 0751                       l2253 07E0                       l2093 0489  
                     l2249 07D9                       l1651 0436                       l1715 0F80  
                     l1741 0F20                       l2279 0188                       l1673 0F0E  
                     l1665 0EEA                       l1755 0E4F                       l1667 0EF8  
                     l1691 0EC4                       l1677 0F19                       l1695 0ED2  
                     l1951 0193                       l1689 0EB6                       l1961 01AA  
                     l1945 0175                       l1699 0EDD                       l1973 01CD  
                     l1967 01AC                       l1991 0221                       l1987 01E0  
                     l1979 01DC                       l1989 0155                       STR_1 082B  
                     STR_2 0869                       STR_3 08A2                       STR_4 081A  
                     STR_5 0877                       STR_6 084B                       STR_7 085A  
                     STR_8 0883                       STR_9 0898                       u1025 0EED  
                     u1115 0ECA                       u1045 0EF9                       u1125 0ED3  
                     u1055 0F05                       u1065 0F0F                       u1155 0F67  
                     u1245 01C3                       u1175 0F8C                       u1095 0EB9  
                     u1425 0779                       u1507 026A                       u1517 027B  
                     u1437 0594                       u1607 0314                       u1527 028C  
                     u1447 0652                       u1617 0321                       u1537 029D  
                     u1457 06FA                       u1707 0135                       u1627 00AD  
                     u1547 02AE                       u1467 07C9                       u1717 0146  
                     u1637 00BE                       u1557 02BF                       u1477 0237  
                     u1807 0037                       u1727 0E5B                       u1647 00CF  
                     u1567 02D0                       u1487 0248                       u1817 0FAF  
                     u1737 0048                       u1657 00E0                       u1577 02E1  
                     u1497 0259                       u1907 038E                       u1827 0FBE  
                     u1747 0058                       u1667 00F1                       u1587 02F2  
                     u1917 03A3                       u1837 0FCD                       u1757 0068  
                     u1677 0102                       u1597 0303                       u1927 03BC  
                     u1847 0EA7                       u1767 0078                       u1687 0113  
                     u1937 03D1                       u1857 0E70                       u1777 0088  
                     u1697 0124                       u1947 03E6                       u1867 0336  
                     u1787 0098                       u1957 03FF                       u1877 034B  
                     u1797 0027                       u1967 0414                       u1887 0360  
                     u1977 0429                       u1897 0379               __CFG_WRT$OFF 0000  
        ?_Lcd_Write_String 0075                       _main 0438                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0000         ??_Lcd_Write_String 0077  
          __end_of_Lcd_Cmd 0EB0     __size_of_READ_SWITCHES 0110              ??_LockOpining 0070  
                    ?_main 0070                      STR_10 083B                      STR_11 08A2  
                    STR_12 083B                      STR_13 088E              __CFG_WDTE$OFF 0000  
          __end_of___lwdiv 0F1E            __end_of___lwmod 0EE2              ??_Keypad_Init 0070  
                    _PORTB 0006    __size_of_Lcd_Set_Cursor 004A                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088            __end_of_dpowers 081A  
                    main@R 0060                      main@i 0050                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0226  
            _startingSound 0226           __end_of_Lcd_Init 1000           __end_of_Lcd_Port 0E96  
          __initialization 07FC               __end_of_main 07FC           __end_of_KeySound 0E7C  
                   ??_main 002D         __size_of_Lcd_Clear 000B        __end_of_LockOpining 00A3  
      __end_of_Keypad_Init 0E36              _READ_SWITCHES 0328             ?_startingSound 0070  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0037                     _GetKey 0E41  
           __CFG_PWRTE$OFF 0000                  ??___lwdiv 0074                  ??___lwmod 007C  
                   main@R1 0056                     main@p1 004C                     main@p2 004D  
                   main@p3 004E                     main@p4 004F                     main@r1 0048  
                   main@r2 0049                     main@r3 004A                     main@r4 004B  
       __size_of_WaitSound 0015                  ??_sprintf 0023             ?_READ_SWITCHES 0070  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC          __end_of_Lcd_Clear 0E41  
           __pcstackCOMMON 0070                _LockOpining 003D             _Lcd_Set_Cursor 0F5B  
               _Wrongsound 00A3                _Keypad_Init 0E2C                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            ??_startingSound 0070                  ?_KeySound 0070  
        __end_of_WaitSound 0E66                    ?_GetKey 0070                 __pmaintext 0438  
__size_of_Lcd_Write_String 003D     __end_of_Lcd_Set_Cursor 0FA5            ??_READ_SWITCHES 0070  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 0800  
               ??_KeySound 0070             _Lcd_Write_Char 0006                    _Lcd_Cmd 0E96  
          __size_of_GetKey 0010                    ___lwdiv 0EE2                    ___lwmod 0EB0  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0226                    __ptext2 014E  
                  __ptext3 0EB0                    __ptext4 0EE2                    __ptext5 00A3  
                  __ptext6 0E51                    __ptext7 003D                    __ptext8 0F1E  
                  __ptext9 0006                    _dpowers 0810                ?_Wrongsound 0070  
                  main@Nes 0030                    _sprintf 014E     __end_of_Lcd_Write_Char 003D  
     end_of_initialization 07FC                  GetKey@key 0074                  Lcd_Port@a 0070  
                _PORTCbits 0007            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075  
        Lcd_Write_String@i 007A        __size_of_Wrongsound 00AB             __end_of_GetKey 0E51  
                _Lcd_Clear 0E36           _Lcd_Write_String 0F1E               ?_LockOpining 0070  
             ?_Keypad_Init 0070        start_initialization 07FC          __size_of_Lcd_Init 005B  
        __size_of_Lcd_Port 001A                   ??_GetKey 0073          __size_of_KeySound 0016  
                _WaitSound 0E51                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0074  
          Lcd_Write_Char@y 0073                  ___latbits 0002              __pcstackBANK0 0020  
    __end_of_startingSound 0328                   ?_Lcd_Cmd 0070                sprintf@flag 0027  
              sprintf@prec 0028           ___lwdiv@dividend 0072                 ?_WaitSound 0070  
         ??_Lcd_Set_Cursor 0075                   ?___lwdiv 0070                   ?___lwmod 0078  
                __pstrings 0800               ??_Wrongsound 0070           ___lwdiv@quotient 0075  
                 ?_sprintf 0020      __end_of_READ_SWITCHES 0438                   Lcd_Cmd@a 0073  
       __end_of_Wrongsound 014E                ??_Lcd_Clear 0074                __stringbase 080F  
         ??_Lcd_Write_Char 0071       __size_of_LockOpining 0066                   _Lcd_Init 0FA5  
     __size_of_Keypad_Init 000A                   _Lcd_Port 0E7C   __end_of_Lcd_Write_String 0F5B  
                 _KeySound 0E66           __size_of_Lcd_Cmd 001A                ??_WaitSound 0070  
         __size_of___lwdiv 003C           __size_of___lwmod 0032         __end_of__stringtab 0810  
               sprintf@val 0029            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0F5B                   __ptext11 0FA5                   __ptext12 0E36  
                 __ptext13 0E96                   __ptext14 0E7C                   __ptext15 0E2C  
                 __ptext16 0E66                   __ptext17 0E41                   __ptext18 0328  
         __size_of_sprintf 00D8              __size_of_main 03C4                   main@Key1 005C  
                 main@Key2 005D                   main@Key3 005E                   main@Key4 005F  
                 main@Nes1 003C                   main@rs11 0052                   main@rs12 0058  
                 main@rs21 0053                   main@rs22 0059                   main@rs31 0054  
                 main@rs32 005A                   main@rs41 0055                   main@rs42 005B  
       Lcd_Write_Char@temp 0072                  sprintf@ap 0026                  sprintf@sp 002B  
         ___lwmod@dividend 007A                  stringcode 080A         Lcd_Set_Cursor@temp 007A  
               _OPTION_REG 0081                   sprintf@c 002C                   sprintf@f 0020  
          ___lwmod@divisor 0078            ___lwmod@counter 007D                   stringdir 080A  
                 stringtab 0800  

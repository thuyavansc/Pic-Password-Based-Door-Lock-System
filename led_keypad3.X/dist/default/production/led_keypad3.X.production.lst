

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jun 09 20:30:57 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.05
    22                           ; Generated 20/12/2018 GMT
    23                           ; 
    24                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0006                     _PORTB	set	6
   172  0036                     _RB6	set	54
   173  0035                     _RB5	set	53
   174  0034                     _RB4	set	52
   175  0033                     _RB3	set	51
   176  0032                     _RB2	set	50
   177  0031                     _RB1	set	49
   178  0030                     _RB0	set	48
   179  0043                     _RD3	set	67
   180  0042                     _RD2	set	66
   181  0047                     _RD7	set	71
   182  0046                     _RD6	set	70
   183  0045                     _RD5	set	69
   184  0044                     _RD4	set	68
   185  0088                     _TRISD	set	136
   186  0081                     _OPTION_REG	set	129
   187  0086                     _TRISB	set	134
   188                           
   189                           	psect	strings
   190  0003                     __pstrings:	
   191  0003                     stringtab:	
   192  0003                     __stringtab:	
   193  0003                     stringcode:	
   194                           ;	String table - string pointers are 1 byte each
   195                           
   196  0003                     stringdir:	
   197  0003  3000               	movlw	high stringdir
   198  0004  008A               	movwf	10
   199  0005  0804               	movf	4,w
   200  0006  0A84               	incf	4,f
   201  0007  0782               	addwf	2,f
   202  0008                     __stringbase:	
   203  0008  3400               	retlw	0
   204  0009                     __end_of__stringtab:	
   205  0009                     STR_2:	
   206  0009  3445               	retlw	69	;'E'
   207  000A  346E               	retlw	110	;'n'
   208  000B  3474               	retlw	116	;'t'
   209  000C  3465               	retlw	101	;'e'
   210  000D  3472               	retlw	114	;'r'
   211  000E  3420               	retlw	32	;' '
   212  000F  344E               	retlw	78	;'N'
   213  0010  3475               	retlw	117	;'u'
   214  0011  346D               	retlw	109	;'m'
   215  0012  3462               	retlw	98	;'b'
   216  0013  3465               	retlw	101	;'e'
   217  0014  3472               	retlw	114	;'r'
   218  0015  3400               	retlw	0
   219  0016                     STR_1:	
   220  0016  3457               	retlw	87	;'W'
   221  0017  3465               	retlw	101	;'e'
   222  0018  346C               	retlw	108	;'l'
   223  0019  3463               	retlw	99	;'c'
   224  001A  346F               	retlw	111	;'o'
   225  001B  346D               	retlw	109	;'m'
   226  001C  3465               	retlw	101	;'e'
   227  001D  3400               	retlw	0
   228                           
   229                           ; #config settings
   230  0000                     
   231                           	psect	cinit
   232  07F8                     start_initialization:	
   233  07F8                     __initialization:	
   234                           
   235                           ; Clear objects allocated to BANK0
   236  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   237  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   238  07FA  01A0               	clrf	__pbssBANK0& (0+127)
   239  07FB  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   240  07FC                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243  07FC                     __end_of__initialization:	
   244  07FC  0183               	clrf	3
   245  07FD  120A  118A  2E6E   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssBANK0
   248  0020                     __pbssBANK0:	
   249  0020                     _R:	
   250  0020                     	ds	2
   251                           
   252                           	psect	cstackCOMMON
   253  0070                     __pcstackCOMMON:	
   254  0070                     ?_Lcd_Port:	
   255  0070                     ??_Lcd_Port:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_Lcd_Cmd:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_Lcd_Init:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_Lcd_Write_Char:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_Lcd_Write_String:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_Keypad_Init:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ??_Keypad_Init:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_READ_SWITCHES:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ??_READ_SWITCHES:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_GetKey:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_Lcd_Clear:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     Lcd_Port@a:	
   292                           ; 2 bytes @ 0x0
   293                           
   294                           
   295                           ; 1 bytes @ 0x0
   296  0070                     	ds	1
   297  0071                     ??_Lcd_Cmd:	
   298  0071                     ??_Lcd_Write_Char:	
   299                           ; 1 bytes @ 0x1
   300                           
   301                           
   302                           ; 1 bytes @ 0x1
   303  0071                     	ds	1
   304  0072                     ??_GetKey:	
   305  0072                     Lcd_Cmd@a:	
   306                           ; 1 bytes @ 0x2
   307                           
   308  0072                     Lcd_Write_Char@temp:	
   309                           ; 1 bytes @ 0x2
   310                           
   311                           
   312                           ; 1 bytes @ 0x2
   313  0072                     	ds	1
   314  0073                     ??_Lcd_Clear:	
   315  0073                     ?_Lcd_Set_Cursor:	
   316                           ; 1 bytes @ 0x3
   317                           
   318  0073                     ??_Lcd_Init:	
   319                           ; 1 bytes @ 0x3
   320                           
   321  0073                     Lcd_Set_Cursor@b:	
   322                           ; 1 bytes @ 0x3
   323                           
   324  0073                     Lcd_Write_Char@y:	
   325                           ; 1 bytes @ 0x3
   326                           
   327  0073                     GetKey@key:	
   328                           ; 1 bytes @ 0x3
   329                           
   330                           
   331                           ; 1 bytes @ 0x3
   332  0073                     	ds	1
   333  0074                     ??_Lcd_Set_Cursor:	
   334  0074                     Lcd_Write_Char@a:	
   335                           ; 1 bytes @ 0x4
   336                           
   337                           
   338                           ; 1 bytes @ 0x4
   339  0074                     	ds	1
   340  0075                     ??_Lcd_Write_String:	
   341  0075                     Lcd_Write_String@i:	
   342                           ; 1 bytes @ 0x5
   343                           
   344                           
   345                           ; 2 bytes @ 0x5
   346  0075                     	ds	1
   347  0076                     Lcd_Set_Cursor@a:	
   348                           
   349                           ; 1 bytes @ 0x6
   350  0076                     	ds	1
   351  0077                     Lcd_Set_Cursor@z:	
   352  0077                     Lcd_Write_String@a:	
   353                           ; 1 bytes @ 0x7
   354                           
   355                           
   356                           ; 1 bytes @ 0x7
   357  0077                     	ds	1
   358  0078                     Lcd_Set_Cursor@y:	
   359                           
   360                           ; 1 bytes @ 0x8
   361  0078                     	ds	1
   362  0079                     Lcd_Set_Cursor@temp:	
   363                           
   364                           ; 1 bytes @ 0x9
   365  0079                     	ds	1
   366  007A                     ??_main:	
   367                           
   368                           ; 1 bytes @ 0xA
   369  007A                     	ds	3
   370  007D                     main@Key:	
   371                           
   372                           ; 1 bytes @ 0xD
   373  007D                     	ds	1
   374                           
   375                           	psect	maintext
   376  066E                     __pmaintext:	
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 39 in file "led_keypad_3.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;  Key             1   13[COMMON] unsigned char 
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : B00/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         0       0       0       0       0
   397 ;;      Locals:         1       0       0       0       0
   398 ;;      Temps:          3       0       0       0       0
   399 ;;      Totals:         4       0       0       0       0
   400 ;;Total ram usage:        4 bytes
   401 ;; Hardware stack levels required when called:    3
   402 ;; This function calls:
   403 ;;		_GetKey
   404 ;;		_Keypad_Init
   405 ;;		_Lcd_Clear
   406 ;;		_Lcd_Init
   407 ;;		_Lcd_Set_Cursor
   408 ;;		_Lcd_Write_Char
   409 ;;		_Lcd_Write_String
   410 ;; This function is called by:
   411 ;;		Startup code after reset
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           
   416                           ;psect for function _main
   417  066E                     _main:	
   418                           
   419                           ;led_keypad_3.c: 41:     TRISD=0x00;
   420                           
   421                           ;incstack = 0
   422                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   423  066E  1683               	bsf	3,5	;RP0=1, select bank1
   424  066F  1303               	bcf	3,6	;RP1=0, select bank1
   425  0670  0188               	clrf	8	;volatile
   426                           
   427                           ;led_keypad_3.c: 43:     Lcd_Init();
   428  0671  120A  118A  26C0  120A  118A  	fcall	_Lcd_Init
   429                           
   430                           ;led_keypad_3.c: 44:     Keypad_Init();
   431  0676  120A  118A  259D  120A  118A  	fcall	_Keypad_Init
   432                           
   433                           ;led_keypad_3.c: 45:     Lcd_Set_Cursor(1,1);
   434  067B  01F3               	clrf	Lcd_Set_Cursor@b
   435  067C  0AF3               	incf	Lcd_Set_Cursor@b,f
   436  067D  3001               	movlw	1
   437  067E  120A  118A  2612  120A  118A  	fcall	_Lcd_Set_Cursor
   438                           
   439                           ;led_keypad_3.c: 46:     Lcd_Write_String("Welcome");
   440  0683  300E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   441  0684  120A  118A  25F0  120A  118A  	fcall	_Lcd_Write_String
   442                           
   443                           ;led_keypad_3.c: 47:     _delay((unsigned long)((1000)*(1000000/4000.0)));
   444  0689  3002               	movlw	2
   445  068A  00FC               	movwf	??_main+2
   446  068B  3045               	movlw	69
   447  068C  00FB               	movwf	??_main+1
   448  068D  30A9               	movlw	169
   449  068E  00FA               	movwf	??_main
   450  068F                     u367:	
   451  068F  0BFA               	decfsz	??_main,f
   452  0690  2E8F               	goto	u367
   453  0691  0BFB               	decfsz	??_main+1,f
   454  0692  2E8F               	goto	u367
   455  0693  0BFC               	decfsz	??_main+2,f
   456  0694  2E8F               	goto	u367
   457  0695  2E96               	nop2
   458                           
   459                           ;led_keypad_3.c: 48:     Lcd_Clear();
   460  0696  120A  118A  25A7  120A  118A  	fcall	_Lcd_Clear
   461  069B                     l967:	
   462                           
   463                           ;led_keypad_3.c: 50:     {;led_keypad_3.c: 51:         Lcd_Set_Cursor(1,1);
   464  069B  01F3               	clrf	Lcd_Set_Cursor@b
   465  069C  0AF3               	incf	Lcd_Set_Cursor@b,f
   466  069D  3001               	movlw	1
   467  069E  120A  118A  2612  120A  118A  	fcall	_Lcd_Set_Cursor
   468                           
   469                           ;led_keypad_3.c: 52:         Lcd_Write_String("Enter Number");
   470  06A3  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   471  06A4  120A  118A  25F0  120A  118A  	fcall	_Lcd_Write_String
   472                           
   473                           ;led_keypad_3.c: 53:         Key=GetKey();
   474  06A9  120A  118A  25B2  120A  118A  	fcall	_GetKey
   475  06AE  00FA               	movwf	??_main
   476  06AF  087A               	movf	??_main,w
   477  06B0  00FD               	movwf	main@Key
   478                           
   479                           ;led_keypad_3.c: 54:         Lcd_Set_Cursor(2,1);
   480  06B1  01F3               	clrf	Lcd_Set_Cursor@b
   481  06B2  0AF3               	incf	Lcd_Set_Cursor@b,f
   482  06B3  3002               	movlw	2
   483  06B4  120A  118A  2612  120A  118A  	fcall	_Lcd_Set_Cursor
   484                           
   485                           ;led_keypad_3.c: 55:         Lcd_Write_Char(Key);
   486  06B9  087D               	movf	main@Key,w
   487  06BA  120A  118A  2637  120A  118A  	fcall	_Lcd_Write_Char
   488  06BF  2E9B               	goto	l967
   489  06C0                     __end_of_main:	
   490                           
   491                           	psect	text1
   492  05F0                     __ptext1:	
   493 ;; *************** function _Lcd_Write_String *****************
   494 ;; Defined at:
   495 ;;		line 113 in file "./led_keypad3.h"
   496 ;; Parameters:    Size  Location     Type
   497 ;;  a               1    wreg     PTR unsigned char 
   498 ;;		 -> STR_2(13), STR_1(8), 
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  a               1    7[COMMON] PTR unsigned char 
   501 ;;		 -> STR_2(13), STR_1(8), 
   502 ;;  i               2    5[COMMON] int 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         3       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0
   515 ;;      Totals:         3       0       0       0       0
   516 ;;Total ram usage:        3 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; Hardware stack levels required when called:    2
   519 ;; This function calls:
   520 ;;		_Lcd_Write_Char
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _Lcd_Write_String
   528  05F0                     _Lcd_Write_String:	
   529                           
   530                           ;incstack = 0
   531                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   532                           ;Lcd_Write_String@a stored from wreg
   533  05F0  00F7               	movwf	Lcd_Write_String@a
   534                           
   535                           ;./led_keypad3.h: 113: void Lcd_Write_String(char *a);./led_keypad3.h: 114: {;./led_keyp
      +                          ad3.h: 115:  int i;;./led_keypad3.h: 116:  for(i=0;a[i]!='\0';i++)
   536  05F1  01F5               	clrf	Lcd_Write_String@i
   537  05F2  01F6               	clrf	Lcd_Write_String@i+1
   538  05F3                     l949:	
   539  05F3  0875               	movf	Lcd_Write_String@i,w
   540  05F4  0777               	addwf	Lcd_Write_String@a,w
   541  05F5  0084               	movwf	4
   542  05F6  120A  118A  2003  120A  118A  	fcall	stringdir
   543  05FB  3A00               	xorlw	0
   544  05FC  1903               	btfsc	3,2
   545  05FD  0008               	return
   546                           
   547                           ;./led_keypad3.h: 117:   Lcd_Write_Char(a[i]);
   548  05FE  0875               	movf	Lcd_Write_String@i,w
   549  05FF  0777               	addwf	Lcd_Write_String@a,w
   550  0600  0084               	movwf	4
   551  0601  120A  118A  2003  120A  118A  	fcall	stringdir
   552  0606  120A  118A  2637  120A  118A  	fcall	_Lcd_Write_Char
   553  060B  3001               	movlw	1
   554  060C  07F5               	addwf	Lcd_Write_String@i,f
   555  060D  1803               	skipnc
   556  060E  0AF6               	incf	Lcd_Write_String@i+1,f
   557  060F  3000               	movlw	0
   558  0610  07F6               	addwf	Lcd_Write_String@i+1,f
   559  0611  2DF3               	goto	l949
   560  0612                     __end_of_Lcd_Write_String:	
   561                           
   562                           	psect	text2
   563  0637                     __ptext2:	
   564 ;; *************** function _Lcd_Write_Char *****************
   565 ;; Defined at:
   566 ;;		line 97 in file "./led_keypad3.h"
   567 ;; Parameters:    Size  Location     Type
   568 ;;  a               1    wreg     unsigned char 
   569 ;; Auto vars:     Size  Location     Type
   570 ;;  a               1    4[COMMON] unsigned char 
   571 ;;  y               1    3[COMMON] unsigned char 
   572 ;;  temp            1    2[COMMON] unsigned char 
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, status,2, status,0, pclath, cstack
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   582 ;;      Params:         0       0       0       0       0
   583 ;;      Locals:         3       0       0       0       0
   584 ;;      Temps:          1       0       0       0       0
   585 ;;      Totals:         4       0       0       0       0
   586 ;;Total ram usage:        4 bytes
   587 ;; Hardware stack levels used:    1
   588 ;; Hardware stack levels required when called:    1
   589 ;; This function calls:
   590 ;;		_Lcd_Port
   591 ;; This function is called by:
   592 ;;		_Lcd_Write_String
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           
   598                           ;psect for function _Lcd_Write_Char
   599  0637                     _Lcd_Write_Char:	
   600                           
   601                           ;incstack = 0
   602                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   603                           ;Lcd_Write_Char@a stored from wreg
   604  0637  00F4               	movwf	Lcd_Write_Char@a
   605                           
   606                           ;./led_keypad3.h: 97: void Lcd_Write_Char(char a);./led_keypad3.h: 98: {;./led_keypad3.h
      +                          : 99:  char temp,y;;./led_keypad3.h: 100:  temp = a&0x0F;
   607  0638  0874               	movf	Lcd_Write_Char@a,w
   608  0639  390F               	andlw	15
   609  063A  00F1               	movwf	??_Lcd_Write_Char
   610  063B  0871               	movf	??_Lcd_Write_Char,w
   611  063C  00F2               	movwf	Lcd_Write_Char@temp
   612                           
   613                           ;./led_keypad3.h: 101:  y = a&0x0F;
   614  063D  0874               	movf	Lcd_Write_Char@a,w
   615  063E  390F               	andlw	15
   616  063F  00F1               	movwf	??_Lcd_Write_Char
   617  0640  0871               	movf	??_Lcd_Write_Char,w
   618  0641  00F3               	movwf	Lcd_Write_Char@y
   619                           
   620                           ;./led_keypad3.h: 102:  RD2 = 1;
   621  0642  1283               	bcf	3,5	;RP0=0, select bank0
   622  0643  1303               	bcf	3,6	;RP1=0, select bank0
   623  0644  1508               	bsf	8,2	;volatile
   624                           
   625                           ;./led_keypad3.h: 103:  Lcd_Port(y>>4);
   626  0645  0873               	movf	Lcd_Write_Char@y,w
   627  0646  00F1               	movwf	??_Lcd_Write_Char
   628  0647  3004               	movlw	4
   629  0648                     u45:	
   630  0648  1003               	clrc
   631  0649  0CF1               	rrf	??_Lcd_Write_Char,f
   632  064A  3EFF               	addlw	-1
   633  064B  1D03               	skipz
   634  064C  2E48               	goto	u45
   635  064D  0871               	movf	??_Lcd_Write_Char,w
   636  064E  120A  118A  25C2  120A  118A  	fcall	_Lcd_Port
   637                           
   638                           ;./led_keypad3.h: 104:  RD3 = 1;
   639  0653  1283               	bcf	3,5	;RP0=0, select bank0
   640  0654  1303               	bcf	3,6	;RP1=0, select bank0
   641  0655  1588               	bsf	8,3	;volatile
   642                           
   643                           ;./led_keypad3.h: 105:  _delay((unsigned long)((40)*(1000000/4000000.0)));
   644  0656  3003               	movlw	3
   645  0657  00F1               	movwf	??_Lcd_Write_Char
   646  0658                     u377:	
   647  0658  0BF1               	decfsz	??_Lcd_Write_Char,f
   648  0659  2E58               	goto	u377
   649                           
   650                           ;./led_keypad3.h: 106:  RD3 = 0;
   651  065A  1283               	bcf	3,5	;RP0=0, select bank0
   652  065B  1303               	bcf	3,6	;RP1=0, select bank0
   653  065C  1188               	bcf	8,3	;volatile
   654                           
   655                           ;./led_keypad3.h: 107:  Lcd_Port(temp);
   656  065D  0872               	movf	Lcd_Write_Char@temp,w
   657  065E  120A  118A  25C2  120A  118A  	fcall	_Lcd_Port
   658                           
   659                           ;./led_keypad3.h: 108:  RD3 = 1;
   660  0663  1283               	bcf	3,5	;RP0=0, select bank0
   661  0664  1303               	bcf	3,6	;RP1=0, select bank0
   662  0665  1588               	bsf	8,3	;volatile
   663                           
   664                           ;./led_keypad3.h: 109:  _delay((unsigned long)((40)*(1000000/4000000.0)));
   665  0666  3003               	movlw	3
   666  0667  00F1               	movwf	??_Lcd_Write_Char
   667  0668                     u387:	
   668  0668  0BF1               	decfsz	??_Lcd_Write_Char,f
   669  0669  2E68               	goto	u387
   670                           
   671                           ;./led_keypad3.h: 110:  RD3 = 0;
   672  066A  1283               	bcf	3,5	;RP0=0, select bank0
   673  066B  1303               	bcf	3,6	;RP1=0, select bank0
   674  066C  1188               	bcf	8,3	;volatile
   675  066D  0008               	return
   676  066E                     __end_of_Lcd_Write_Char:	
   677                           
   678                           	psect	text3
   679  0612                     __ptext3:	
   680 ;; *************** function _Lcd_Set_Cursor *****************
   681 ;; Defined at:
   682 ;;		line 63 in file "./led_keypad3.h"
   683 ;; Parameters:    Size  Location     Type
   684 ;;  a               1    wreg     unsigned char 
   685 ;;  b               1    3[COMMON] unsigned char 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  a               1    6[COMMON] unsigned char 
   688 ;;  temp            1    9[COMMON] unsigned char 
   689 ;;  y               1    8[COMMON] unsigned char 
   690 ;;  z               1    7[COMMON] unsigned char 
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, status,0, pclath, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         1       0       0       0       0
   701 ;;      Locals:         4       0       0       0       0
   702 ;;      Temps:          2       0       0       0       0
   703 ;;      Totals:         7       0       0       0       0
   704 ;;Total ram usage:        7 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:    2
   707 ;; This function calls:
   708 ;;		_Lcd_Cmd
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _Lcd_Set_Cursor
   716  0612                     _Lcd_Set_Cursor:	
   717                           
   718                           ;incstack = 0
   719                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   720                           ;Lcd_Set_Cursor@a stored from wreg
   721  0612  00F6               	movwf	Lcd_Set_Cursor@a
   722                           
   723                           ;./led_keypad3.h: 63: void Lcd_Set_Cursor(char a, char b);./led_keypad3.h: 64: {;./led_k
      +                          eypad3.h: 65:  char temp,z,y;;./led_keypad3.h: 66:  if(a == 1)
   724  0613  0376               	decf	Lcd_Set_Cursor@a,w
   725  0614  1D03               	btfss	3,2
   726  0615  0008               	return
   727                           
   728                           ;./led_keypad3.h: 67:  {;./led_keypad3.h: 68:   temp = 0x80 + b -1;
   729  0616  0873               	movf	Lcd_Set_Cursor@b,w
   730  0617  3E7F               	addlw	127
   731  0618  00F4               	movwf	??_Lcd_Set_Cursor
   732  0619  0874               	movf	??_Lcd_Set_Cursor,w
   733  061A  00F9               	movwf	Lcd_Set_Cursor@temp
   734                           
   735                           ;./led_keypad3.h: 69:   z = temp>>4;
   736  061B  0879               	movf	Lcd_Set_Cursor@temp,w
   737  061C  00F4               	movwf	??_Lcd_Set_Cursor
   738  061D  3004               	movlw	4
   739  061E                     u345:	
   740  061E  1003               	clrc
   741  061F  0CF4               	rrf	??_Lcd_Set_Cursor,f
   742  0620  3EFF               	addlw	-1
   743  0621  1D03               	skipz
   744  0622  2E1E               	goto	u345
   745  0623  0874               	movf	??_Lcd_Set_Cursor,w
   746  0624  00F5               	movwf	??_Lcd_Set_Cursor+1
   747  0625  0875               	movf	??_Lcd_Set_Cursor+1,w
   748  0626  00F7               	movwf	Lcd_Set_Cursor@z
   749                           
   750                           ;./led_keypad3.h: 70:   y = temp & 0x0F;
   751  0627  0879               	movf	Lcd_Set_Cursor@temp,w
   752  0628  390F               	andlw	15
   753  0629  00F4               	movwf	??_Lcd_Set_Cursor
   754  062A  0874               	movf	??_Lcd_Set_Cursor,w
   755  062B  00F8               	movwf	Lcd_Set_Cursor@y
   756                           
   757                           ;./led_keypad3.h: 71:   Lcd_Cmd(z);
   758  062C  0877               	movf	Lcd_Set_Cursor@z,w
   759  062D  120A  118A  25D8  120A  118A  	fcall	_Lcd_Cmd
   760                           
   761                           ;./led_keypad3.h: 72:   Lcd_Cmd(y);
   762  0632  0878               	movf	Lcd_Set_Cursor@y,w
   763  0633  120A  118A  25D8   	fcall	_Lcd_Cmd
   764  0636  0008               	return
   765  0637                     __end_of_Lcd_Set_Cursor:	
   766                           
   767                           	psect	text4
   768  06C0                     __ptext4:	
   769 ;; *************** function _Lcd_Init *****************
   770 ;; Defined at:
   771 ;;		line 77 in file "./led_keypad3.h"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0
   787 ;;      Temps:          2       0       0       0       0
   788 ;;      Totals:         2       0       0       0       0
   789 ;;Total ram usage:        2 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    2
   792 ;; This function calls:
   793 ;;		_Lcd_Cmd
   794 ;;		_Lcd_Port
   795 ;; This function is called by:
   796 ;;		_main
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           
   801                           ;psect for function _Lcd_Init
   802  06C0                     _Lcd_Init:	
   803                           
   804                           ;./led_keypad3.h: 79:  Lcd_Port(0x00);
   805                           
   806                           ;incstack = 0
   807                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   808  06C0  3000               	movlw	0
   809  06C1  120A  118A  25C2  120A  118A  	fcall	_Lcd_Port
   810                           
   811                           ;./led_keypad3.h: 80:  _delay((unsigned long)((20)*(1000000/4000.0)));
   812  06C6  3007               	movlw	7
   813  06C7  00F4               	movwf	??_Lcd_Init+1
   814  06C8  307D               	movlw	125
   815  06C9  00F3               	movwf	??_Lcd_Init
   816  06CA                     u397:	
   817  06CA  0BF3               	decfsz	??_Lcd_Init,f
   818  06CB  2ECA               	goto	u397
   819  06CC  0BF4               	decfsz	??_Lcd_Init+1,f
   820  06CD  2ECA               	goto	u397
   821                           
   822                           ;./led_keypad3.h: 81:  Lcd_Cmd(0x03);
   823  06CE  3003               	movlw	3
   824  06CF  120A  118A  25D8  120A  118A  	fcall	_Lcd_Cmd
   825                           
   826                           ;./led_keypad3.h: 82:  _delay((unsigned long)((5)*(1000000/4000.0)));
   827  06D4  30F9               	movlw	249
   828  06D5  00F3               	movwf	??_Lcd_Init
   829  06D6                     u407:	
   830  06D6  2ED7               	nop2
   831  06D7  0BF3               	decfsz	??_Lcd_Init,f
   832  06D8  2ED6               	goto	u407
   833  06D9  2EDA               	nop2
   834  06DA  2EDB               	nop2
   835                           
   836                           ;./led_keypad3.h: 83:  Lcd_Cmd(0x03);
   837  06DB  3003               	movlw	3
   838  06DC  120A  118A  25D8  120A  118A  	fcall	_Lcd_Cmd
   839                           
   840                           ;./led_keypad3.h: 84:  _delay((unsigned long)((11)*(1000000/4000.0)));
   841  06E1  3004               	movlw	4
   842  06E2  00F4               	movwf	??_Lcd_Init+1
   843  06E3  3091               	movlw	145
   844  06E4  00F3               	movwf	??_Lcd_Init
   845  06E5                     u417:	
   846  06E5  0BF3               	decfsz	??_Lcd_Init,f
   847  06E6  2EE5               	goto	u417
   848  06E7  0BF4               	decfsz	??_Lcd_Init+1,f
   849  06E8  2EE5               	goto	u417
   850                           
   851                           ;./led_keypad3.h: 85:  Lcd_Cmd(0x03);
   852  06E9  3003               	movlw	3
   853  06EA  120A  118A  25D8  120A  118A  	fcall	_Lcd_Cmd
   854                           
   855                           ;./led_keypad3.h: 87:  Lcd_Cmd(0x02);
   856  06EF  3002               	movlw	2
   857  06F0  120A  118A  25D8  120A  118A  	fcall	_Lcd_Cmd
   858                           
   859                           ;./led_keypad3.h: 88:  Lcd_Cmd(0x02);
   860  06F5  3002               	movlw	2
   861  06F6  120A  118A  25D8  120A  118A  	fcall	_Lcd_Cmd
   862                           
   863                           ;./led_keypad3.h: 89:  Lcd_Cmd(0x08);
   864  06FB  3008               	movlw	8
   865  06FC  120A  118A  25D8  120A  118A  	fcall	_Lcd_Cmd
   866                           
   867                           ;./led_keypad3.h: 90:  Lcd_Cmd(0x00);
   868  0701  3000               	movlw	0
   869  0702  120A  118A  25D8  120A  118A  	fcall	_Lcd_Cmd
   870                           
   871                           ;./led_keypad3.h: 91:  Lcd_Cmd(0x0c);
   872  0707  300C               	movlw	12
   873  0708  120A  118A  25D8  120A  118A  	fcall	_Lcd_Cmd
   874                           
   875                           ;./led_keypad3.h: 92:  Lcd_Cmd(0x00);
   876  070D  3000               	movlw	0
   877  070E  120A  118A  25D8  120A  118A  	fcall	_Lcd_Cmd
   878                           
   879                           ;./led_keypad3.h: 93:  Lcd_Cmd(0x06);
   880  0713  3006               	movlw	6
   881  0714  120A  118A  25D8   	fcall	_Lcd_Cmd
   882  0717  0008               	return
   883  0718                     __end_of_Lcd_Init:	
   884                           
   885                           	psect	text5
   886  05A7                     __ptext5:	
   887 ;; *************** function _Lcd_Clear *****************
   888 ;; Defined at:
   889 ;;		line 57 in file "./led_keypad3.h"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  2   52[None  ] int 
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0
   906 ;;      Totals:         0       0       0       0       0
   907 ;;Total ram usage:        0 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    2
   910 ;; This function calls:
   911 ;;		_Lcd_Cmd
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _Lcd_Clear
   919  05A7                     _Lcd_Clear:	
   920                           
   921                           ;./led_keypad3.h: 59:  Lcd_Cmd(0);
   922                           
   923                           ;incstack = 0
   924                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
   925  05A7  3000               	movlw	0
   926  05A8  120A  118A  25D8  120A  118A  	fcall	_Lcd_Cmd
   927                           
   928                           ;./led_keypad3.h: 60:  Lcd_Cmd(1);
   929  05AD  3001               	movlw	1
   930  05AE  120A  118A  25D8   	fcall	_Lcd_Cmd
   931  05B1  0008               	return
   932  05B2                     __end_of_Lcd_Clear:	
   933                           
   934                           	psect	text6
   935  05D8                     __ptext6:	
   936 ;; *************** function _Lcd_Cmd *****************
   937 ;; Defined at:
   938 ;;		line 48 in file "./led_keypad3.h"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  a               1    wreg     unsigned char 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  a               1    2[COMMON] unsigned char 
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, status,2, status,0, pclath, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       0       0       0       0
   953 ;;      Locals:         1       0       0       0       0
   954 ;;      Temps:          1       0       0       0       0
   955 ;;      Totals:         2       0       0       0       0
   956 ;;Total ram usage:        2 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    1
   959 ;; This function calls:
   960 ;;		_Lcd_Port
   961 ;; This function is called by:
   962 ;;		_Lcd_Clear
   963 ;;		_Lcd_Set_Cursor
   964 ;;		_Lcd_Init
   965 ;;		_Lcd_Shift_Right
   966 ;;		_Lcd_Shift_Left
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function _Lcd_Cmd
   972  05D8                     _Lcd_Cmd:	
   973                           
   974                           ;incstack = 0
   975                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
   976                           ;Lcd_Cmd@a stored from wreg
   977  05D8  00F2               	movwf	Lcd_Cmd@a
   978                           
   979                           ;./led_keypad3.h: 48: void Lcd_Cmd(char a);./led_keypad3.h: 49: {;./led_keypad3.h: 50:  
      +                          RD2 = 0;
   980  05D9  1283               	bcf	3,5	;RP0=0, select bank0
   981  05DA  1303               	bcf	3,6	;RP1=0, select bank0
   982  05DB  1108               	bcf	8,2	;volatile
   983                           
   984                           ;./led_keypad3.h: 51:  Lcd_Port(a);
   985  05DC  0872               	movf	Lcd_Cmd@a,w
   986  05DD  120A  118A  25C2  120A  118A  	fcall	_Lcd_Port
   987                           
   988                           ;./led_keypad3.h: 52:  RD3 = 1;
   989  05E2  1283               	bcf	3,5	;RP0=0, select bank0
   990  05E3  1303               	bcf	3,6	;RP1=0, select bank0
   991  05E4  1588               	bsf	8,3	;volatile
   992                           
   993                           ;./led_keypad3.h: 53:   _delay((unsigned long)((4)*(1000000/4000.0)));
   994  05E5  30C7               	movlw	199
   995  05E6  00F1               	movwf	??_Lcd_Cmd
   996  05E7                     u427:	
   997  05E7  2DE8               	nop2
   998  05E8  0BF1               	decfsz	??_Lcd_Cmd,f
   999  05E9  2DE7               	goto	u427
  1000  05EA  2DEB               	nop2
  1001  05EB  2DEC               	nop2
  1002                           
  1003                           ;./led_keypad3.h: 54:   RD3 = 0;
  1004  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1005  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1006  05EE  1188               	bcf	8,3	;volatile
  1007  05EF  0008               	return
  1008  05F0                     __end_of_Lcd_Cmd:	
  1009                           
  1010                           	psect	text7
  1011  05C2                     __ptext7:	
  1012 ;; *************** function _Lcd_Port *****************
  1013 ;; Defined at:
  1014 ;;		line 27 in file "./led_keypad3.h"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  a               1    wreg     unsigned char 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  a               1    0[COMMON] unsigned char 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1028 ;;      Params:         0       0       0       0       0
  1029 ;;      Locals:         1       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0
  1031 ;;      Totals:         1       0       0       0       0
  1032 ;;Total ram usage:        1 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_Lcd_Cmd
  1038 ;;		_Lcd_Init
  1039 ;;		_Lcd_Write_Char
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           
  1044                           ;psect for function _Lcd_Port
  1045  05C2                     _Lcd_Port:	
  1046                           
  1047                           ;incstack = 0
  1048                           ; Regs used in _Lcd_Port: [wreg]
  1049                           ;Lcd_Port@a stored from wreg
  1050  05C2  00F0               	movwf	Lcd_Port@a
  1051                           
  1052                           ;./led_keypad3.h: 27: void Lcd_Port(char a);./led_keypad3.h: 28: {;./led_keypad3.h: 29: 
      +                           if(a & 1)
  1053  05C3  1C70               	btfss	Lcd_Port@a,0
  1054  05C4  2DC9               	goto	l39
  1055                           
  1056                           ;./led_keypad3.h: 30:   RD4 = 1;
  1057  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1058  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1059  05C7  1608               	bsf	8,4	;volatile
  1060  05C8  2DCC               	goto	l40
  1061  05C9                     l39:	
  1062                           ;./led_keypad3.h: 31:  else
  1063                           
  1064                           
  1065                           ;./led_keypad3.h: 32:   RD4 = 0;
  1066  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1067  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1068  05CB  1208               	bcf	8,4	;volatile
  1069  05CC                     l40:	
  1070                           
  1071                           ;./led_keypad3.h: 33:  if(a & 2)
  1072  05CC  1CF0               	btfss	Lcd_Port@a,1
  1073  05CD  2DD0               	goto	l41
  1074                           
  1075                           ;./led_keypad3.h: 34:   RD5 = 1;
  1076  05CE  1688               	bsf	8,5	;volatile
  1077  05CF  2DD1               	goto	l745
  1078  05D0                     l41:	
  1079                           ;./led_keypad3.h: 35:  else
  1080                           
  1081                           
  1082                           ;./led_keypad3.h: 36:   RD5 = 0;
  1083  05D0  1288               	bcf	8,5	;volatile
  1084  05D1                     l745:	
  1085                           
  1086                           ;./led_keypad3.h: 38:   RD6 = 4;
  1087  05D1  1308               	bcf	8,6	;volatile
  1088                           
  1089                           ;./led_keypad3.h: 41:  if(a & 8)
  1090  05D2  1DF0               	btfss	Lcd_Port@a,3
  1091  05D3  2DD6               	goto	l45
  1092                           
  1093                           ;./led_keypad3.h: 42:   RD7 = 1;
  1094  05D4  1788               	bsf	8,7	;volatile
  1095  05D5  0008               	return
  1096  05D6                     l45:	
  1097                           ;./led_keypad3.h: 43:  else
  1098                           
  1099                           
  1100                           ;./led_keypad3.h: 44:   RD7 = 0;
  1101  05D6  1388               	bcf	8,7	;volatile
  1102  05D7  0008               	return
  1103  05D8                     __end_of_Lcd_Port:	
  1104                           
  1105                           	psect	text8
  1106  059D                     __ptext8:	
  1107 ;; *************** function _Keypad_Init *****************
  1108 ;; Defined at:
  1109 ;;		line 138 in file "./led_keypad3.h"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0
  1126 ;;      Totals:         0       0       0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           
  1137                           ;psect for function _Keypad_Init
  1138  059D                     _Keypad_Init:	
  1139                           
  1140                           ;./led_keypad3.h: 142:  PORTB =0x00;
  1141                           
  1142                           ;incstack = 0
  1143                           ; Regs used in _Keypad_Init: [wreg+status,2]
  1144  059D  1283               	bcf	3,5	;RP0=0, select bank0
  1145  059E  1303               	bcf	3,6	;RP1=0, select bank0
  1146  059F  0186               	clrf	6	;volatile
  1147                           
  1148                           ;./led_keypad3.h: 143:  TRISB =0b11110000;
  1149  05A0  30F0               	movlw	240
  1150  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  1151  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  1152  05A3  0086               	movwf	6	;volatile
  1153                           
  1154                           ;./led_keypad3.h: 146:  OPTION_REG=0x7F;
  1155  05A4  307F               	movlw	127
  1156  05A5  0081               	movwf	1	;volatile
  1157  05A6  0008               	return
  1158  05A7                     __end_of_Keypad_Init:	
  1159                           
  1160                           	psect	text9
  1161  05B2                     __ptext9:	
  1162 ;; *************** function _GetKey *****************
  1163 ;; Defined at:
  1164 ;;		line 185 in file "./led_keypad3.h"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  key             1    3[COMMON] unsigned char 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      unsigned char 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2, status,0, pclath, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1178 ;;      Params:         0       0       0       0       0
  1179 ;;      Locals:         1       0       0       0       0
  1180 ;;      Temps:          1       0       0       0       0
  1181 ;;      Totals:         2       0       0       0       0
  1182 ;;Total ram usage:        2 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    1
  1185 ;; This function calls:
  1186 ;;		_READ_SWITCHES
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           
  1193                           ;psect for function _GetKey
  1194  05B2                     _GetKey:	
  1195                           
  1196                           ;./led_keypad3.h: 187:  char key = 'n';
  1197                           
  1198                           ;incstack = 0
  1199                           ; Regs used in _GetKey: [wreg+status,2+status,0+pclath+cstack]
  1200  05B2  306E               	movlw	110
  1201  05B3                     L1:	
  1202  05B3  00F2               	movwf	??_GetKey
  1203  05B4  0872               	movf	??_GetKey,w
  1204  05B5  00F3               	movwf	GetKey@key
  1205                           
  1206                           ;./led_keypad3.h: 189:  while(key=='n')
  1207  05B6  306E               	movlw	110
  1208  05B7  0673               	xorwf	GetKey@key,w
  1209  05B8  1D03               	btfss	3,2
  1210  05B9  2DC0               	goto	l899
  1211                           
  1212                           ;./led_keypad3.h: 190:   key = READ_SWITCHES();
  1213                           
  1214                           ;./led_keypad3.h: 189:  while(key=='n')
  1215  05BA  120A  118A  2718  120A  118A  	fcall	_READ_SWITCHES
  1216  05BF  2DB3               	goto	L1
  1217  05C0                     l899:	
  1218                           
  1219                           ;./led_keypad3.h: 192:  return key;
  1220  05C0  0873               	movf	GetKey@key,w
  1221  05C1  0008               	return
  1222  05C2                     __end_of_GetKey:	
  1223                           
  1224                           	psect	text10
  1225  0718                     __ptext10:	
  1226 ;; *************** function _READ_SWITCHES *****************
  1227 ;; Defined at:
  1228 ;;		line 153 in file "./led_keypad3.h"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      unsigned char 
  1235 ;; Registers used:
  1236 ;;		wreg
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1242 ;;      Params:         0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0
  1244 ;;      Temps:          2       0       0       0       0
  1245 ;;      Totals:         2       0       0       0       0
  1246 ;;Total ram usage:        2 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_GetKey
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function _READ_SWITCHES
  1257  0718                     _READ_SWITCHES:	
  1258                           
  1259                           ;./led_keypad3.h: 155:  RB0=0; RB1=1; RB2=1; RB3=1;
  1260                           
  1261                           ;incstack = 0
  1262                           ; Regs used in _READ_SWITCHES: [wreg]
  1263  0718  1283               	bcf	3,5	;RP0=0, select bank0
  1264  0719  1303               	bcf	3,6	;RP1=0, select bank0
  1265  071A  1006               	bcf	6,0	;volatile
  1266  071B  1486               	bsf	6,1	;volatile
  1267  071C  1506               	bsf	6,2	;volatile
  1268  071D  1586               	bsf	6,3	;volatile
  1269                           
  1270                           ;./led_keypad3.h: 157:  if (RB4==0) { _delay((unsigned long)((250)*(1000000/4000.0))); w
      +                          hile (RB4==0); return '1'; }
  1271  071E  1A06               	btfsc	6,4	;volatile
  1272  071F  2F2F               	goto	l81
  1273  0720  3052               	movlw	82
  1274  0721  00F1               	movwf	??_READ_SWITCHES+1
  1275  0722  3029               	movlw	41
  1276  0723  00F0               	movwf	??_READ_SWITCHES
  1277  0724                     u437:	
  1278  0724  0BF0               	decfsz	??_READ_SWITCHES,f
  1279  0725  2F24               	goto	u437
  1280  0726  0BF1               	decfsz	??_READ_SWITCHES+1,f
  1281  0727  2F24               	goto	u437
  1282  0728  2F29               	nop2
  1283  0729                     l82:	
  1284  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1285  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1286  072B  1E06               	btfss	6,4	;volatile
  1287  072C  2F29               	goto	l82
  1288  072D  3031               	movlw	49
  1289  072E  0008               	return
  1290  072F                     l81:	
  1291                           
  1292                           ;./led_keypad3.h: 158:  if (RB5==0) { _delay((unsigned long)((250)*(1000000/4000.0))); w
      +                          hile (RB5==0); return '2'; }
  1293  072F  1A86               	btfsc	6,5	;volatile
  1294  0730  2F40               	goto	l86
  1295  0731  3052               	movlw	82
  1296  0732  00F1               	movwf	??_READ_SWITCHES+1
  1297  0733  3029               	movlw	41
  1298  0734  00F0               	movwf	??_READ_SWITCHES
  1299  0735                     u447:	
  1300  0735  0BF0               	decfsz	??_READ_SWITCHES,f
  1301  0736  2F35               	goto	u447
  1302  0737  0BF1               	decfsz	??_READ_SWITCHES+1,f
  1303  0738  2F35               	goto	u447
  1304  0739  2F3A               	nop2
  1305  073A                     l87:	
  1306  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1307  073B  1303               	bcf	3,6	;RP1=0, select bank0
  1308  073C  1E86               	btfss	6,5	;volatile
  1309  073D  2F3A               	goto	l87
  1310  073E  3032               	movlw	50
  1311  073F  0008               	return
  1312  0740                     l86:	
  1313                           
  1314                           ;./led_keypad3.h: 159:  if (RB6==0) { _delay((unsigned long)((250)*(1000000/4000.0))); w
      +                          hile (RB6==0); return '3'; }
  1315  0740  1B06               	btfsc	6,6	;volatile
  1316  0741  2F51               	goto	l90
  1317  0742  3052               	movlw	82
  1318  0743  00F1               	movwf	??_READ_SWITCHES+1
  1319  0744  3029               	movlw	41
  1320  0745  00F0               	movwf	??_READ_SWITCHES
  1321  0746                     u457:	
  1322  0746  0BF0               	decfsz	??_READ_SWITCHES,f
  1323  0747  2F46               	goto	u457
  1324  0748  0BF1               	decfsz	??_READ_SWITCHES+1,f
  1325  0749  2F46               	goto	u457
  1326  074A  2F4B               	nop2
  1327  074B                     l91:	
  1328  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1329  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1330  074D  1F06               	btfss	6,6	;volatile
  1331  074E  2F4B               	goto	l91
  1332  074F  3033               	movlw	51
  1333  0750  0008               	return
  1334  0751                     l90:	
  1335                           
  1336                           ;./led_keypad3.h: 161:  RB0=1; RB1=0; RB2=1; RB3=1;
  1337  0751  1406               	bsf	6,0	;volatile
  1338  0752  1086               	bcf	6,1	;volatile
  1339  0753  1506               	bsf	6,2	;volatile
  1340  0754  1586               	bsf	6,3	;volatile
  1341                           
  1342                           ;./led_keypad3.h: 163:  if (RB4==0) { _delay((unsigned long)((250)*(1000000/4000.0))); w
      +                          hile (RB4==0); return '4'; }
  1343  0755  1A06               	btfsc	6,4	;volatile
  1344  0756  2F66               	goto	l94
  1345  0757  3052               	movlw	82
  1346  0758  00F1               	movwf	??_READ_SWITCHES+1
  1347  0759  3029               	movlw	41
  1348  075A  00F0               	movwf	??_READ_SWITCHES
  1349  075B                     u467:	
  1350  075B  0BF0               	decfsz	??_READ_SWITCHES,f
  1351  075C  2F5B               	goto	u467
  1352  075D  0BF1               	decfsz	??_READ_SWITCHES+1,f
  1353  075E  2F5B               	goto	u467
  1354  075F  2F60               	nop2
  1355  0760                     l95:	
  1356  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0762  1E06               	btfss	6,4	;volatile
  1359  0763  2F60               	goto	l95
  1360  0764  3034               	movlw	52
  1361  0765  0008               	return
  1362  0766                     l94:	
  1363                           
  1364                           ;./led_keypad3.h: 164:  if (RB5==0) { _delay((unsigned long)((250)*(1000000/4000.0))); w
      +                          hile (RB5==0); return '5'; }
  1365  0766  1A86               	btfsc	6,5	;volatile
  1366  0767  2F77               	goto	l98
  1367  0768  3052               	movlw	82
  1368  0769  00F1               	movwf	??_READ_SWITCHES+1
  1369  076A  3029               	movlw	41
  1370  076B  00F0               	movwf	??_READ_SWITCHES
  1371  076C                     u477:	
  1372  076C  0BF0               	decfsz	??_READ_SWITCHES,f
  1373  076D  2F6C               	goto	u477
  1374  076E  0BF1               	decfsz	??_READ_SWITCHES+1,f
  1375  076F  2F6C               	goto	u477
  1376  0770  2F71               	nop2
  1377  0771                     l99:	
  1378  0771  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0772  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0773  1E86               	btfss	6,5	;volatile
  1381  0774  2F71               	goto	l99
  1382  0775  3035               	movlw	53
  1383  0776  0008               	return
  1384  0777                     l98:	
  1385                           
  1386                           ;./led_keypad3.h: 165:  if (RB6==0) { _delay((unsigned long)((250)*(1000000/4000.0))); w
      +                          hile (RB6==0); return '6'; }
  1387  0777  1B06               	btfsc	6,6	;volatile
  1388  0778  2F88               	goto	l102
  1389  0779  3052               	movlw	82
  1390  077A  00F1               	movwf	??_READ_SWITCHES+1
  1391  077B  3029               	movlw	41
  1392  077C  00F0               	movwf	??_READ_SWITCHES
  1393  077D                     u487:	
  1394  077D  0BF0               	decfsz	??_READ_SWITCHES,f
  1395  077E  2F7D               	goto	u487
  1396  077F  0BF1               	decfsz	??_READ_SWITCHES+1,f
  1397  0780  2F7D               	goto	u487
  1398  0781  2F82               	nop2
  1399  0782                     l103:	
  1400  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0783  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0784  1F06               	btfss	6,6	;volatile
  1403  0785  2F82               	goto	l103
  1404  0786  3036               	movlw	54
  1405  0787  0008               	return
  1406  0788                     l102:	
  1407                           
  1408                           ;./led_keypad3.h: 167:  RB0=1; RB1=1; RB2=0; RB3=1;
  1409  0788  1406               	bsf	6,0	;volatile
  1410  0789  1486               	bsf	6,1	;volatile
  1411  078A  1106               	bcf	6,2	;volatile
  1412  078B  1586               	bsf	6,3	;volatile
  1413                           
  1414                           ;./led_keypad3.h: 169:  if (RB4==0) { _delay((unsigned long)((250)*(1000000/4000.0))); w
      +                          hile (RB4==0); return '7'; }
  1415  078C  1A06               	btfsc	6,4	;volatile
  1416  078D  2F9D               	goto	l106
  1417  078E  3052               	movlw	82
  1418  078F  00F1               	movwf	??_READ_SWITCHES+1
  1419  0790  3029               	movlw	41
  1420  0791  00F0               	movwf	??_READ_SWITCHES
  1421  0792                     u497:	
  1422  0792  0BF0               	decfsz	??_READ_SWITCHES,f
  1423  0793  2F92               	goto	u497
  1424  0794  0BF1               	decfsz	??_READ_SWITCHES+1,f
  1425  0795  2F92               	goto	u497
  1426  0796  2F97               	nop2
  1427  0797                     l107:	
  1428  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1429  0798  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0799  1E06               	btfss	6,4	;volatile
  1431  079A  2F97               	goto	l107
  1432  079B  3037               	movlw	55
  1433  079C  0008               	return
  1434  079D                     l106:	
  1435                           
  1436                           ;./led_keypad3.h: 170:  if (RB5==0) { _delay((unsigned long)((250)*(1000000/4000.0))); w
      +                          hile (RB5==0); return '8'; }
  1437  079D  1A86               	btfsc	6,5	;volatile
  1438  079E  2FAE               	goto	l110
  1439  079F  3052               	movlw	82
  1440  07A0  00F1               	movwf	??_READ_SWITCHES+1
  1441  07A1  3029               	movlw	41
  1442  07A2  00F0               	movwf	??_READ_SWITCHES
  1443  07A3                     u507:	
  1444  07A3  0BF0               	decfsz	??_READ_SWITCHES,f
  1445  07A4  2FA3               	goto	u507
  1446  07A5  0BF1               	decfsz	??_READ_SWITCHES+1,f
  1447  07A6  2FA3               	goto	u507
  1448  07A7  2FA8               	nop2
  1449  07A8                     l111:	
  1450  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1451  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1452  07AA  1E86               	btfss	6,5	;volatile
  1453  07AB  2FA8               	goto	l111
  1454  07AC  3038               	movlw	56
  1455  07AD  0008               	return
  1456  07AE                     l110:	
  1457                           
  1458                           ;./led_keypad3.h: 171:  if (RB6==0) { _delay((unsigned long)((250)*(1000000/4000.0))); w
      +                          hile (RB6==0); return '9'; }
  1459  07AE  1B06               	btfsc	6,6	;volatile
  1460  07AF  2FBF               	goto	l114
  1461  07B0  3052               	movlw	82
  1462  07B1  00F1               	movwf	??_READ_SWITCHES+1
  1463  07B2  3029               	movlw	41
  1464  07B3  00F0               	movwf	??_READ_SWITCHES
  1465  07B4                     u517:	
  1466  07B4  0BF0               	decfsz	??_READ_SWITCHES,f
  1467  07B5  2FB4               	goto	u517
  1468  07B6  0BF1               	decfsz	??_READ_SWITCHES+1,f
  1469  07B7  2FB4               	goto	u517
  1470  07B8  2FB9               	nop2
  1471  07B9                     l115:	
  1472  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1473  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1474  07BB  1F06               	btfss	6,6	;volatile
  1475  07BC  2FB9               	goto	l115
  1476  07BD  3039               	movlw	57
  1477  07BE  0008               	return
  1478  07BF                     l114:	
  1479                           
  1480                           ;./led_keypad3.h: 173:  RB0=1; RB1=1; RB2=1; RB3=0;
  1481  07BF  1406               	bsf	6,0	;volatile
  1482  07C0  1486               	bsf	6,1	;volatile
  1483  07C1  1506               	bsf	6,2	;volatile
  1484  07C2  1186               	bcf	6,3	;volatile
  1485                           
  1486                           ;./led_keypad3.h: 175:  if (RB4==0) { _delay((unsigned long)((250)*(1000000/4000.0))); w
      +                          hile (RB4==0); return '*'; }
  1487  07C3  1A06               	btfsc	6,4	;volatile
  1488  07C4  2FD4               	goto	l118
  1489  07C5  3052               	movlw	82
  1490  07C6  00F1               	movwf	??_READ_SWITCHES+1
  1491  07C7  3029               	movlw	41
  1492  07C8  00F0               	movwf	??_READ_SWITCHES
  1493  07C9                     u527:	
  1494  07C9  0BF0               	decfsz	??_READ_SWITCHES,f
  1495  07CA  2FC9               	goto	u527
  1496  07CB  0BF1               	decfsz	??_READ_SWITCHES+1,f
  1497  07CC  2FC9               	goto	u527
  1498  07CD  2FCE               	nop2
  1499  07CE                     l119:	
  1500  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1501  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1502  07D0  1E06               	btfss	6,4	;volatile
  1503  07D1  2FCE               	goto	l119
  1504  07D2  302A               	movlw	42
  1505  07D3  0008               	return
  1506  07D4                     l118:	
  1507                           
  1508                           ;./led_keypad3.h: 176:  if (RB5==0) { _delay((unsigned long)((250)*(1000000/4000.0))); w
      +                          hile (RB5==0); return '0'; }
  1509  07D4  1A86               	btfsc	6,5	;volatile
  1510  07D5  2FE5               	goto	l122
  1511  07D6  3052               	movlw	82
  1512  07D7  00F1               	movwf	??_READ_SWITCHES+1
  1513  07D8  3029               	movlw	41
  1514  07D9  00F0               	movwf	??_READ_SWITCHES
  1515  07DA                     u537:	
  1516  07DA  0BF0               	decfsz	??_READ_SWITCHES,f
  1517  07DB  2FDA               	goto	u537
  1518  07DC  0BF1               	decfsz	??_READ_SWITCHES+1,f
  1519  07DD  2FDA               	goto	u537
  1520  07DE  2FDF               	nop2
  1521  07DF                     l123:	
  1522  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  1523  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  1524  07E1  1E86               	btfss	6,5	;volatile
  1525  07E2  2FDF               	goto	l123
  1526  07E3  3030               	movlw	48
  1527  07E4  0008               	return
  1528  07E5                     l122:	
  1529                           
  1530                           ;./led_keypad3.h: 177:  if (RB6==0) { _delay((unsigned long)((250)*(1000000/4000.0))); w
      +                          hile (RB6==0); return '#'; }
  1531  07E5  1B06               	btfsc	6,6	;volatile
  1532  07E6  2FF6               	goto	l853
  1533  07E7  3052               	movlw	82
  1534  07E8  00F1               	movwf	??_READ_SWITCHES+1
  1535  07E9  3029               	movlw	41
  1536  07EA  00F0               	movwf	??_READ_SWITCHES
  1537  07EB                     u547:	
  1538  07EB  0BF0               	decfsz	??_READ_SWITCHES,f
  1539  07EC  2FEB               	goto	u547
  1540  07ED  0BF1               	decfsz	??_READ_SWITCHES+1,f
  1541  07EE  2FEB               	goto	u547
  1542  07EF  2FF0               	nop2
  1543  07F0                     l127:	
  1544  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  1545  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  1546  07F2  1F06               	btfss	6,6	;volatile
  1547  07F3  2FF0               	goto	l127
  1548  07F4  3023               	movlw	35
  1549  07F5  0008               	return
  1550  07F6                     l853:	
  1551                           
  1552                           ;./led_keypad3.h: 179:  return 'n';
  1553  07F6  306E               	movlw	110
  1554  07F7  0008               	return
  1555  07F8                     __end_of_READ_SWITCHES:	
  1556  007E                     btemp	set	126	;btemp
  1557  007E                     wtemp0	set	126


Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _GetKey->_READ_SWITCHES

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1098
                                             10 COMMON     4     4      0
                             _GetKey
                        _Keypad_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     276
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     438
                                              3 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0      75
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetKey                                               2     2      0      30
                                              2 COMMON     2     2      0
                      _READ_SWITCHES
 ---------------------------------------------------------------------------------
 (2) _READ_SWITCHES                                        2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetKey
     _READ_SWITCHES
   _Keypad_Init
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jun 09 20:30:57 2019

                        _R 0020                          pc 0002                __CFG_CP$OFF 0000  
                       l40 05CC                         l41 05D0                         l45 05D6  
                       l39 05C9                         l81 072F                         l90 0751  
                       l82 0729                         l91 074B                         l94 0766  
                       l86 0740                         l95 0760                         l87 073A  
                       l98 0777                         l99 0771                         u45 0648  
                       fsr 0004                        l110 07AE                        l102 0788  
                      l111 07A8                        l103 0782                        l122 07E5  
                      l114 07BF                        l106 079D                        l123 07DF  
                      l115 07B9                        l107 0797                        l118 07D4  
                      l127 07F0                        l119 07CE                        l745 05D1  
                      l853 07F6                        l949 05F3                        l967 069B  
                      l899 05C0                        _RB0 0030                        _RB1 0031  
                      _RB2 0032                        _RB3 0033                        _RB4 0034  
                      _RB5 0035                        _RD2 0042                        _RB6 0036  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        u407 06D6  
                      u417 06E5                        u345 061E               __CFG_CPD$OFF 0000  
                      u507 07A3                        u427 05E7                        u517 07B4  
                      u437 0724                        u527 07C9                        u447 0735  
                      u367 068F                        u537 07DA                        u457 0746  
                      u377 0658                        u547 07EB                        u467 075B  
                      u387 0668                        u477 076C                        u397 06CA  
                      u487 077D                        u497 0792                        fsr0 0004  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       STR_1 0016  
                     STR_2 0009               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070  
                     _main 066E                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 05F0     __size_of_READ_SWITCHES 00E0  
                    ?_main 0070              __CFG_WDTE$OFF 0000              ??_Keypad_Init 0070  
                    _PORTB 0006    __size_of_Lcd_Set_Cursor 0025                      _TRISB 0086  
                    _TRISD 0088             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0718  
         __end_of_Lcd_Port 05D8            __initialization 07F8               __end_of_main 06C0  
                   ??_main 007A         __size_of_Lcd_Clear 000B        __end_of_Keypad_Init 05A7  
            _READ_SWITCHES 0718                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0037  
                   _GetKey 05B2             __CFG_PWRTE$OFF 0000             ?_READ_SWITCHES 0070  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0073            Lcd_Set_Cursor@y 0078  
          Lcd_Set_Cursor@z 0077    __end_of__initialization 07FC          __end_of_Lcd_Clear 05B2  
           __pcstackCOMMON 0070             _Lcd_Set_Cursor 0612                _Keypad_Init 059D  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK0 0020  
                  ?_GetKey 0070                 __pmaintext 066E  __size_of_Lcd_Write_String 0022  
   __end_of_Lcd_Set_Cursor 0637            ??_READ_SWITCHES 0070                 ??_Lcd_Init 0073  
               ??_Lcd_Port 0070                 __stringtab 0003             _Lcd_Write_Char 0637  
                  _Lcd_Cmd 05D8            __size_of_GetKey 0010            ?_Lcd_Set_Cursor 0073  
                  __ptext1 05F0                    __ptext2 0637                    __ptext3 0612  
                  __ptext4 06C0                    __ptext5 05A7                    __ptext6 05D8  
                  __ptext7 05C2                    __ptext8 059D                    __ptext9 05B2  
                  main@Key 007D     __end_of_Lcd_Write_Char 066E       end_of_initialization 07FC  
                GetKey@key 0073                  Lcd_Port@a 0070            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075             __end_of_GetKey 05C2  
                _Lcd_Clear 05A7           _Lcd_Write_String 05F0               ?_Keypad_Init 0070  
      start_initialization 07F8          __size_of_Lcd_Init 0058          __size_of_Lcd_Port 0016  
                 ??_GetKey 0072                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0074  
          Lcd_Write_Char@y 0073                  ___latbits 0002                   ?_Lcd_Cmd 0070  
         ??_Lcd_Set_Cursor 0074                  __pstrings 0003      __end_of_READ_SWITCHES 07F8  
                 Lcd_Cmd@a 0072                ??_Lcd_Clear 0073                __stringbase 0008  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 06C0       __size_of_Keypad_Init 000A  
                 _Lcd_Port 05C2   __end_of_Lcd_Write_String 0612           __size_of_Lcd_Cmd 0018  
       __end_of__stringtab 0009                   __ptext10 0718              __size_of_main 0052  
       Lcd_Write_Char@temp 0072                  stringcode 0003         Lcd_Set_Cursor@temp 0079  
               _OPTION_REG 0081                   stringdir 0003                   stringtab 0003  
